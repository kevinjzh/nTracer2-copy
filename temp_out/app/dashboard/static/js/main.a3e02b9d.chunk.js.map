{"version":3,"sources":["Context.jsx","TransformMenu.jsx","RenderMenu.jsx","Menu.jsx","App.jsx","index.jsx"],"names":["SocketContext","React","createContext","TransformMenu","saveLayerState","activeLayerName","layerOps","saveTrackTransforms","trackTransforms","useState","translateX","setTranslateX","translateY","setTranslateY","translateZ","setTranslateZ","scaleX","setScaleX","scaleY","setScaleY","scaleZ","setScaleZ","reflectX","setReflectX","reflectY","setReflectY","reflectZ","setReflectZ","rotateX","setRotateX","rotateY","setRotateY","rotateZ","setRotateZ","matrix","setMatrix","eachTransformMatrix","setEachTransformMatrix","composedMatrices","setComposedMatrices","socket","useContext","originCoord","setOriginCoord","describeTransform","key","value","useEffect","current","handlePositionUpdate","data","console","log","position","on","off","handleMatrixChange","numValue","parseFloat","stateUpdaters","updateEachTransformMatrix","rad","Math","PI","cos","sin","multiplyMatrices","A","B","Array","isArray","map","row","i","_","j","reduce","sum","elm","k","error","vec","mat","length","col","val","multiplyVectorMatrix","slice","ox","oy","oz","radX","radY","radZ","cosX","sinX","cosY","sinY","cosZ","sinZ","finalMatrix","a","composedMatrix","compositeMatrix","prevMatrix","prev","fetch","BASE_URL","method","headers","body","JSON","stringify","sendMatrixToServer","onReset","identityMatrix","resetData","warn","undoLastTransform","newLayerOps","pop","newComposedHistory","lastComposed","transformData","handleSaveLayerState","transformValues","defaultVal","startsWith","description","TransformContainer","style","fontWeight","fontSize","v","toFixed","join","SettingContainer","SubtitleTransform","SliderContainer","Subtitle","Slider","type","min","max","step","onChange","e","target","onMouseUp","Input","onKeyDown","ReflectContainer","ReflectAxisContainer","checked","setTimeout","MatrixContainer","GridContainer","flat","index","GridCell","ButtonContainer","ResetButton","onClick","jsonStr","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","styled","div","button","h3","input","RenderMenu","layerType","Message","ImageRenderMenu","layerName","SegmentRenderMenu","MeshRenderMenu","opacity","setOpacity","rangeMin","setRangeMin","rangeMax","setRangeMax","mode","setMode","fill","gammaValues","setGammaValues","handleSliderChange","handleGammaChange","updated","handleModeChange","newMode","shader","payload","shaderControls","normalized","range","ok","Error","send","SectionHeaderRow","SectionTitle","ModeToggle","ModeButton","selected","gamma","idx","saturation","setSaturation","Section","p","h4","Menu","selectedTabMenu","activeLayerType","tabIndex","setTabIndex","TabButtonContainer","TabButton","TabContent","props","process","RibbonDropdown","trigger","menuItems","open","setOpen","RibbonDropdownContainer","onBlur","RibbonDropdownTrigger","RibbonDropdownMenu","role","label","DropdownItem","LayerList","activeLayer","setActiveLayer","toggleStates","setToggleStates","prevStates","updatedStates","forEach","layer","serverVisible","visible","name","handleLayerToggle","newVisible","LayerButton","isActive","width","transformDescriptions","top","right","backgroundColor","color","border","borderRadius","padding","cursor","transition","boxShadow","onMouseEnter","currentTarget","transform","onMouseLeave","LoadingText","LayerDropdownMenu","isOpen","setIsOpen","ShowTransformsButton","listStyleType","paddingLeft","marginTop","desc","marginBottom","Main","ul","li","LayerTitle","span","DashboardText","h1","Ribbon","RibbonButton","Container","RightContainer","h2","PanelHeader","HeaderRow","App","setData","setSocketConnected","setConnectionError","useRef","setLayerOps","setTrackTransforms","fileInputRef","importModeRef","io","path","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","autoConnect","extraHeaders","window","location","origin","withCredentials","id","message","reason","fetchLayers","credentials","response","json","layers","layerArray","Object","entries","info","Provider","htmlFor","display","accept","ref","event","file","files","reader","FileReader","onload","contents","result","jsonData","parse","alert","formData","FormData","append","replace","res","readAsText","contains","prevLayerOps","transformDescriptionOrUpdater","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3e02b9d.chunk.js","sourcesContent":["import React from 'react'\n\nexport const SocketContext = React.createContext(null);\n","import './App.css';\nimport styled from 'styled-components/macro'\nimport { useContext, useState, useEffect } from 'react';\nimport { BASE_URL } from './App';\nimport { SocketContext } from './Context';\n\nexport default function TransformMenu({ saveLayerState, activeLayerName, layerOps, trackTransforms, saveTrackTransforms }) {\n  const [translateX, setTranslateX] = useState(0)\n  const [translateY, setTranslateY] = useState(0)\n  const [translateZ, setTranslateZ] = useState(0)\n  const [scaleX, setScaleX] = useState(1)\n  const [scaleY, setScaleY] = useState(1)\n  const [scaleZ, setScaleZ] = useState(1)\n  const [reflectX, setReflectX] = useState(false)\n  const [reflectY, setReflectY] = useState(false)\n  const [reflectZ, setReflectZ] = useState(false)\n  const [rotateX, setRotateX] = useState(0)\n  const [rotateY, setRotateY] = useState(0)\n  const [rotateZ, setRotateZ] = useState(0)\n  const [matrix, setMatrix] = useState(() => [\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1]\n  ]);\n  const [eachTransformMatrix, setEachTransformMatrix] = useState([ // For setting origin after a transform (undo affect?)\n    [1, 0, 0, 0],\n    [0, 1, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 1]\n  ]);\n  // const [indvidualTransforms, setIndividualTransforms] = useState({})\n\n  const [composedMatrices, setComposedMatrices] = useState({});\n\n  const socket = useContext(SocketContext);\n  const [originCoord, setOriginCoord] = useState(null);\n\n  const describeTransform = (key, value) => {\n    switch (key) {\n      case \"translateX\": return `Translate in X by ${value}`;\n      case \"translateY\": return `Translate in Y by ${value}`;\n      case \"translateZ\": return `Translate in Z by ${value}`;\n      case \"rotateX\": return `Rotate on X axis by ${value} degrees`;\n      case \"rotateY\": return `Rotate on Y axis by ${value} degrees`;\n      case \"rotateZ\": return `Rotate on Z axis by ${value} degrees`;\n      case \"scaleX\": return `Scale in X by ${value}`;\n      case \"scaleY\": return `Scale in Y by ${value}`;\n      case \"scaleZ\": return `Scale in Z by ${value}`;\n      case \"reflectX\": return `Reflect on X axis`;\n      case \"reflectY\": return `Reflect on Y axis`;\n      case \"reflectZ\": return `Reflect on Z axis`;\n      default: return `Unknown transform ${key} with value ${value}`;\n    }\n  };\n\n  useEffect(() => {\n    if (!socket?.current) return;\n\n    const handlePositionUpdate = (data) => {\n      console.log(\"Received position:\", data.position);\n      setOriginCoord(data.position);\n    };\n\n    socket.current.on('position-updated', handlePositionUpdate);\n\n    return () => {\n      socket.current.off('position-updated', handlePositionUpdate);\n    };\n  }, [socket]);\n\n  const handleMatrixChange = (key, value) => {\n    const numValue =\n      typeof value === \"boolean\" ? value :\n        value === \"-\" ? value :\n          value === \"\" ? \"\" : parseFloat(value)\n\n    const stateUpdaters = {\n      translateX: setTranslateX,\n      translateY: setTranslateY,\n      translateZ: setTranslateZ,\n      rotateX: setRotateX,\n      rotateY: setRotateY,\n      rotateZ: setRotateZ,\n      scaleX: setScaleX,\n      scaleY: setScaleY,\n      scaleZ: setScaleZ,\n      reflectX: setReflectX,\n      reflectY: setReflectY,\n      reflectZ: setReflectZ\n    };\n\n    if (stateUpdaters[key]) {\n      stateUpdaters[key](numValue);\n      updateEachTransformMatrix(key, numValue);\n    }\n  };\n\n  const updateEachTransformMatrix = (key, value) => {\n    let matrix;\n\n    switch (key) {\n      case \"translateX\":\n        matrix = [\n          [1, 0, 0, value],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"translateY\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, 1, 0, value],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"translateZ\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, value],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"rotateX\": {\n        const rad = (value * Math.PI) / 180;\n        const cos = Math.cos(rad), sin = Math.sin(rad);\n        matrix = [\n          [1, 0, 0, 0],\n          [0, cos, -sin, 0],\n          [0, sin, cos, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n      }\n\n      case \"rotateY\": {\n        const rad = (value * Math.PI) / 180;\n        const cos = Math.cos(rad), sin = Math.sin(rad);\n        matrix = [\n          [cos, 0, sin, 0],\n          [0, 1, 0, 0],\n          [-sin, 0, cos, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n      }\n\n      case \"rotateZ\": {\n        const rad = (value * Math.PI) / 180;\n        const cos = Math.cos(rad), sin = Math.sin(rad);\n        matrix = [\n          [cos, -sin, 0, 0],\n          [sin, cos, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n      }\n\n      case \"scaleX\":\n        matrix = [\n          [value, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n\n        break;\n\n      case \"scaleY\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, value, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"scaleZ\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, value, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"reflectX\":\n        matrix = [\n          [value ? -1 : 1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"reflectY\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, value ? -1 : 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      case \"reflectZ\":\n        matrix = [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, value ? -1 : 1, 0],\n          [0, 0, 0, 1],\n        ];\n        break;\n\n      default:\n        matrix = [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n    }\n\n    setEachTransformMatrix(matrix);\n  };\n\n\n  const multiplyMatrices = (A, B) => {\n    if (!Array.isArray(A) || !Array.isArray(B) || !Array.isArray(B[0])) {\n      console.error(\"Invalid matrices passed to multiplyMatrices:\", A, B);\n      return [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]; // fallback\n    }\n  \n    return A.map((row, i) =>\n      B[0].map((_, j) => row.reduce((sum, elm, k) => sum + elm * B[k][j], 0))\n    );\n  };  \n\n  const multiplyVectorMatrix = (vec, mat) => {\n    if (!Array.isArray(vec) || vec.length !== 4 || !Array.isArray(mat) || mat.length !== 4) {\n      console.error(\"Invalid vector or matrix in multiplyVectorMatrix\", vec, mat);\n      return [0, 0, 0, 1]; // fallback\n    }\n  \n    return mat[0].map((_, col) =>\n      vec.reduce((sum, val, row) => sum + val * mat[row][col], 0)\n    );\n  };\n  \n  \n  useEffect(() => {\n    const [oxPretransform, oyPretransform, ozPretransform] = originCoord || [0, 0, 0];\n    const vec = [oxPretransform, oyPretransform, ozPretransform, 1];\n    console.log(\"Previous transform:\", eachTransformMatrix) // Use inverse?? FUTURE\n    const vecTransformed = multiplyVectorMatrix(vec, eachTransformMatrix);\n    const [ox, oy, oz] = vecTransformed.slice(0, 3);\n    const radX = (rotateX * Math.PI) / 180;\n    const radY = (rotateY * Math.PI) / 180;\n    const radZ = (rotateZ * Math.PI) / 180;\n\n    const cosX = Math.cos(radX), sinX = Math.sin(radX);\n    const cosY = Math.cos(radY), sinY = Math.sin(radY);\n    const cosZ = Math.cos(radZ), sinZ = Math.sin(radZ);\n\n    const rotX = [\n      [1, 0, 0, 0],\n      [0, cosX, -sinX, oy * (1 - cosX) + oz * sinX],\n      [0, sinX, cosX, oz * (1 - cosX) - oy * sinX],\n      [0, 0, 0, 1]\n    ];\n\n    const rotY = [\n      [cosY, 0, sinY, ox * (1 - cosY) - oz * sinY],\n      [0, 1, 0, 0],\n      [-sinY, 0, cosY, oz * (1 - cosY) + ox * sinY],\n      [0, 0, 0, 1]\n    ];\n\n    const rotZ = [\n      [cosZ, -sinZ, 0, ox * (1 - cosZ) + oy * sinZ],\n      [sinZ, cosZ, 0, oy * (1 - cosZ) - ox * sinZ],\n      [0, 0, 1, 0],\n      [0, 0, 0, 1]\n    ];\n\n    const scaleMatrix = [\n      [scaleX, 0, 0, ox * (1 - scaleX)],\n      [0, scaleY, 0, oy * (1 - scaleY)],\n      [0, 0, scaleZ, oz * (1 - scaleZ)],\n      [0, 0, 0, 1]\n    ];\n\n    const translationMatrix = [\n      [1, 0, 0, translateX],\n      [0, 1, 0, translateY],\n      [0, 0, 1, translateZ],\n      [0, 0, 0, 1]\n    ];\n\n    const reflectMatrix = [\n      [reflectX ? -1 : 1, 0, 0, reflectX ? 2 * ox : 0],\n      [0, reflectY ? -1 : 1, 0, reflectY ? 2 * oy : 0],\n      [0, 0, reflectZ ? -1 : 1, reflectZ ? 2 * oz : 0],\n      [0, 0, 0, 1]\n    ];\n\n    // Multiply matrices in the correct order\n    let finalMatrix = multiplyMatrices(\n      translationMatrix,\n      multiplyMatrices(rotZ,\n        multiplyMatrices(rotY,\n          multiplyMatrices(rotX,\n            multiplyMatrices(scaleMatrix, reflectMatrix)\n          )\n        )\n      )\n    );\n\n    setMatrix(finalMatrix);\n\n    const sendMatrixToServer = async () => {\n      if (activeLayerName) {\n        let composedMatrix = finalMatrix;\n        console.log(\"layerOps\", layerOps)\n        console.log(\"layerOps[activeLayerName\", layerOps[activeLayerName])\n        if (layerOps[activeLayerName] && layerOps[activeLayerName].length != 0) {\n          let compositeMatrix = [\n            [1, 0, 0, 0],\n            [0, 1, 0, 0],\n            [0, 0, 1, 0],\n            [0, 0, 0, 1],\n          ];\n\n          for (const prevMatrix of layerOps[activeLayerName]) {\n            compositeMatrix = multiplyMatrices(compositeMatrix, prevMatrix);\n          }\n\n          composedMatrix = multiplyMatrices(compositeMatrix, finalMatrix);\n        }\n        // Track composed matrices for undo, FUTURE don't put in useEffect because it updates often and saves many when sliding\n        setComposedMatrices((prev) => ({\n          ...prev,\n          [activeLayerName]: [...(prev[activeLayerName] || []), composedMatrix]\n        }));\n\n        const data = [\n          [\n            [composedMatrix[0][0], composedMatrix[0][1], composedMatrix[0][2], composedMatrix[0][3]],\n            [composedMatrix[1][0], composedMatrix[1][1], composedMatrix[1][2], composedMatrix[1][3]],\n            [composedMatrix[2][0], composedMatrix[2][1], composedMatrix[2][2], composedMatrix[2][3]],\n          ],\n          activeLayerName\n        ];\n        console.log(\"Data before sending\", data)\n\n        try {\n          await fetch(`${BASE_URL}/transform`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data)\n          });\n          console.log(\"Matrix sent to server:\", data);\n        } catch (error) {\n          console.error(\"Error submitting transform:\", error);\n        }\n      }\n\n      else {\n        console.log(\"No layer selected\")\n      }\n    };\n\n    sendMatrixToServer();\n  }, [translateX, translateY, translateZ, rotateX, rotateY, rotateZ, scaleX, scaleY, scaleZ, reflectX, reflectY, reflectZ]);\n\n  const onReset = async () => {\n    setTranslateX(0);\n    setTranslateY(0);\n    setTranslateZ(0);\n    setRotateX(0);\n    setRotateY(0);\n    setRotateZ(0);\n    setScaleX(1);\n    setScaleY(1);\n    setScaleZ(1);\n    setReflectX(false);\n    setReflectY(false);\n    setReflectZ(false);\n\n    const identityMatrix = [\n      [1, 0, 0, 0],\n      [0, 1, 0, 0],\n      [0, 0, 1, 0],\n      [0, 0, 0, 1],\n    ];\n\n    setMatrix(identityMatrix);\n    setEachTransformMatrix(identityMatrix);\n\n    if (activeLayerName) {\n      saveLayerState(activeLayerName, []);\n      saveTrackTransforms(activeLayerName, []);\n\n      const resetData = [\n        [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0]\n        ],\n        activeLayerName\n      ];\n\n      try {\n        await fetch(`${BASE_URL}/transform`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(resetData)\n        });\n        await fetch(`${BASE_URL}/reset_origin`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" }\n        });\n      } catch (error) {\n        console.error(\"Failed to reset matrix on server:\", error);\n      }\n    } else {\n      console.warn(\"Reset failed: no active layer selected.\");\n    }\n  };\n\n\n  const onResetInputs = () => {\n    setTranslateX(0)\n    setTranslateY(0)\n    setTranslateZ(0)\n    setRotateX(0)\n    setRotateY(0)\n    setRotateZ(0)\n    setScaleX(1)\n    setScaleY(1)\n    setScaleZ(1)\n    setReflectX(false)\n    setReflectY(false)\n    setReflectZ(false)\n\n    setMatrix([\n      [1, 0, 0, 0],\n      [0, 1, 0, 0],\n      [0, 0, 1, 0],\n      [0, 0, 0, 1]\n    ])\n  }\n\n  const undoLastTransform = async () => {\n    if (\n      !activeLayerName ||\n      !layerOps[activeLayerName]?.length ||\n      !composedMatrices[activeLayerName]?.length\n    ) {\n      console.warn(\"No transform to undo for layer:\", activeLayerName);\n      return false;\n    }\n  \n    // Pop the last matrix from layerOps\n    const newLayerOps = [...layerOps[activeLayerName]];\n    newLayerOps.pop();\n  \n    // Pop the last composed matrix\n    const newComposedHistory = [...composedMatrices[activeLayerName]];\n    newComposedHistory.pop();\n    console.log(\"HISTORY\", newComposedHistory)\n  \n    // Get the new current composed matrix\n    const lastComposed = newComposedHistory.length > 0\n      ? newComposedHistory[newComposedHistory.length - 1]\n      : [\n          [1, 0, 0, 0],\n          [0, 1, 0, 0],\n          [0, 0, 1, 0],\n          [0, 0, 0, 1],\n        ];\n    \n    // Update state\n    saveLayerState(activeLayerName, newLayerOps);\n    setComposedMatrices((prev) => ({\n      ...prev,\n      [activeLayerName]: newComposedHistory,\n    }));\n\n    console.log(\"COMPOSED\", composedMatrices[activeLayerName])\n    saveTrackTransforms(activeLayerName, (prev) =>\n      prev?.length ? prev.slice(0, -1) : []\n    );\n  \n    // Send last composed matrix to server\n    const transformData = [\n      [\n        [lastComposed[0][0], lastComposed[0][1], lastComposed[0][2], lastComposed[0][3]],\n        [lastComposed[1][0], lastComposed[1][1], lastComposed[1][2], lastComposed[1][3]],\n        [lastComposed[2][0], lastComposed[2][1], lastComposed[2][2], lastComposed[2][3]],\n      ],\n      activeLayerName,\n    ];\n  \n    try {\n      await fetch(`${BASE_URL}/transform`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(transformData),\n      });\n      console.log(\"Undo successful. Sent:\", transformData);\n      return true;\n    } catch (error) {\n      console.error(\"Undo failed:\", error);\n      return false;\n    }\n  };  \n  \n  const handleSaveLayerState = async () => {\n    if (activeLayerName) {\n      saveLayerState(activeLayerName, matrix);\n      // For snapping origin to transformed origin\n      try {\n        await fetch(`${BASE_URL}/set_origin`, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(eachTransformMatrix), // 7/14: currently set_origin does not change origin\n        });\n      } catch (error) {\n        console.error(\"Error updating origin:\", error);\n      }\n\n      const transformValues = {\n        translateX,\n        translateY,\n        translateZ,\n        rotateX,\n        rotateY,\n        rotateZ,\n        scaleX,\n        scaleY,\n        scaleZ,\n        reflectX,\n        reflectY,\n        reflectZ,\n      };\n\n      for (const key in transformValues) {\n        const value = transformValues[key];\n        const defaultVal =\n          key.startsWith(\"scale\") ? 1 :\n            key.startsWith(\"reflect\") ? false : 0;\n\n\n        if (\n          (key.startsWith(\"reflect\") && value === true) ||\n          (!key.startsWith(\"reflect\") && value !== defaultVal)\n        ) {\n          const description = describeTransform(key, value);\n          console.log(\"Saving description:\", description, \"for\", activeLayerName);\n          saveTrackTransforms(activeLayerName, description);\n        }\n      }\n      onResetInputs();\n    } else {\n      console.error(\"No layer selected.\");\n    }\n  };\n\n  const onExportMatrix = () => {\n    const filename = \"transform_matrix.json\";\n    const jsonStr = JSON.stringify({ matrix }, null, 2);\n  \n    const blob = new Blob([jsonStr], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n  \n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = filename;\n    link.click();\n  \n    URL.revokeObjectURL(url);\n  };\n\n  // const onSetOrigin = async () => {\n  //   const response = await fetch(`${BASE_URL}/set_origin_button`, {\n  //     method: \"POST\",\n  //     headers: { \"Content-Type\": \"application/json\" },\n  //     body: JSON.stringify({ layerName: activeLayerName })\n  //   });\n  //   const data = await response.json();\n  //   console.log(\"Local position response:\", data);\n\n  //   // const origin_transform = await fetch(`${BASE_URL}/set_origin_button`)\n  //   // console.log(origin_transform)\n  // }\n\n  return (\n    <TransformContainer>\n      {originCoord && (\n        <p>\n          <span style={{ fontWeight: 'bold', fontSize: '1.2em'}}>Current Origin:</span> [{originCoord.map(v => v.toFixed(2)).join(', ')}]\n        </p>\n      )}\n      <SettingContainer>\n        <SubtitleTransform>Translate in X, Y, or Z-axis</SubtitleTransform>\n        <SliderContainer>\n          <Subtitle>X: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n            value={translateX}\n            onChange={(e) => handleMatrixChange(\"translateX\", e.target.value)}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={translateX}\n            onChange={(e) => handleMatrixChange(\"translateX\", e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Y: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n            value={translateY}\n            onChange={(e) => handleMatrixChange(\"translateY\", e.target.value)}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={translateY}\n            onChange={(e) => handleMatrixChange(\"translateY\", e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Z: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-100\"\n            max=\"100\"\n            step=\"1\"\n            value={translateZ}\n            onChange={(e) => handleMatrixChange(\"translateZ\", e.target.value)}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={translateZ}\n            onChange={(e) => handleMatrixChange(\"translateZ\", e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n      </SettingContainer>\n\n      <SettingContainer>\n        <SubtitleTransform>Scale in X, Y, or Z-axis</SubtitleTransform>\n        <SliderContainer>\n          <Subtitle>X: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"0.1\"\n            max=\"2\"\n            step=\"0.01\"\n            value={scaleX}\n            onChange={(e) => { handleMatrixChange(\"scaleX\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={scaleX}\n            onChange={(e) => { handleMatrixChange(\"scaleX\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Y: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"0.1\"\n            max=\"2\"\n            step=\"0.01\"\n            value={scaleY}\n            onChange={(e) => { handleMatrixChange(\"scaleY\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={scaleY}\n            onChange={(e) => { handleMatrixChange(\"scaleY\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Z: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"0.1\"\n            max=\"2\"\n            step=\"0.01\"\n            value={scaleZ}\n            onChange={(e) => { handleMatrixChange(\"scaleZ\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          <Input\n            value={scaleZ}\n            onChange={(e) => { handleMatrixChange(\"scaleZ\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n      </SettingContainer>\n\n      <SettingContainer>\n        <SubtitleTransform>Rotate about X, Y, or Z-axis in degrees</SubtitleTransform>\n        <SliderContainer>\n          <Subtitle>X: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-360\"\n            max=\"360\"\n            step=\"1\"\n            value={rotateX}\n            onChange={(e) => { handleMatrixChange(\"rotateX\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          {/* <Input\n                value={`${rotateX}°`}\n                onChange={(e) => {\n                  let newValue = e.target.value.replace(\"°\", \"\");\n                  handleMatrixChange(\"rotateX\", e.target.value);\n                }}\n                onKeyDown={(e) => {\n                  if (e.key === \"ArrowUp\") {\n                    handleMatrixChange(\"rotateX\", rotateX + 1);\n                  } else if (e.key === \"ArrowDown\") {\n                    handleMatrixChange(\"rotateX\", rotateX - 1);\n                  }\n                }}\n                type=\"text\"\n              /> */}\n          <Input\n            value={rotateX}\n            onChange={(e) => { handleMatrixChange(\"rotateX\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Y: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-360\"\n            max=\"360\"\n            step=\"1\"\n            value={rotateY}\n            onChange={(e) => { handleMatrixChange(\"rotateY\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          {/* <Input\n              value={{rotateY}}\n              onChange={(e) => {\n                let newValue = e.target.value;\n                handleMatrixChange(\"rotateX\", newValue);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === \"ArrowUp\") {\n                  handleMatrixChange(\"rotateX\", rotateX + 1);\n                } else if (e.key === \"ArrowDown\") {\n                  handleMatrixChange(\"rotateX\", rotateX - 1);\n                }\n              }}\n              type=\"number\"\n            />           */}\n          <Input\n            value={rotateY}\n            onChange={(e) => { handleMatrixChange(\"rotateY\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n\n        <SliderContainer>\n          <Subtitle>Z: </Subtitle>\n          <Slider\n            type=\"range\"\n            min=\"-360\"\n            max=\"360\"\n            step=\"1\"\n            value={rotateZ}\n            onChange={(e) => { handleMatrixChange(\"rotateZ\", e.target.value) }}\n            onMouseUp={handleSaveLayerState}\n          />\n          {/* <Input value={`${rotateZ}°`} onChange={(e) => {let newValue = e.target.value.replace(\"°\", \"\"); handleMatrixChange(\"rotateZ\", newValue); }} inputProps={{type: 'number', pattern: \"-?[0-9]*\"}} ></Input> */}\n          <Input\n            value={rotateZ}\n            onChange={(e) => { handleMatrixChange(\"rotateZ\", e.target.value) }}\n            onKeyDown={(e) => e.key === 'Enter' && handleSaveLayerState()}\n            type=\"number\"\n          />\n        </SliderContainer>\n      </SettingContainer>\n\n      <SettingContainer>\n        <SubtitleTransform>Reflect on X, Y, or Z-axis</SubtitleTransform>\n        <ReflectContainer>\n          <ReflectAxisContainer>\n            <Subtitle>X: </Subtitle>\n            <input\n              type=\"checkbox\"\n              checked={reflectX}\n              onChange={(e) => { handleMatrixChange(\"reflectX\", e.target.checked); setTimeout(handleSaveLayerState, 0); }}\n              onMouseUp={handleSaveLayerState}\n            />\n          </ReflectAxisContainer>\n\n          <ReflectAxisContainer>\n            <Subtitle>Y: </Subtitle>\n            <input\n              type=\"checkbox\"\n              checked={reflectY}\n              onMouseUp={handleSaveLayerState}\n              onChange={(e) => handleMatrixChange(\"reflectY\", e.target.checked)}\n            />\n          </ReflectAxisContainer>\n\n          <ReflectAxisContainer>\n            <Subtitle>Z: </Subtitle>\n            <input\n              type=\"checkbox\"\n              checked={reflectZ}\n              onMouseUp={handleSaveLayerState}\n              onChange={(e) => handleMatrixChange(\"reflectZ\", e.target.checked)}\n            />\n          </ReflectAxisContainer>\n        </ReflectContainer>\n      </SettingContainer>\n\n      <MatrixContainer>\n        <Subtitle>Transformation Matrix</Subtitle>\n        {Array.isArray(matrix) && Array.isArray(matrix[0]) && ( // In case matrix is null, prevent rendering error\n          <GridContainer>\n            {matrix.flat().map((value, index) => (\n              <GridCell key={index}>\n                {value % 1 === 0 ? value : value.toFixed(2)}\n              </GridCell>\n            ))}\n          </GridContainer>\n        )}\n      </MatrixContainer>\n\n      <ButtonContainer>\n        <ResetButton onClick={onReset}>Reset</ResetButton>\n        <ResetButton onClick={undoLastTransform}>Undo Last Transform</ResetButton>\n        <ResetButton onClick={onExportMatrix}>Export Matrix</ResetButton>\n      </ButtonContainer>\n    </TransformContainer>\n  )\n}\n\nconst ButtonContainer = styled.div`\ndisplay: flex;\nwidth: 100%;\njustify-content: space-between;\n`\n\nconst UndoButton = styled.button`\n    margin-top: 1rem;\n    padding: 0.5rem 1rem;\n    border: none;\n    border-radius: 0.5rem;\n    font-size: 0.9rem;\n    cursor: pointer;\n    background-color: #007bff;\n    color: white;\n    transition: background-color 0.3s;\n\n    &:hover {\n        background-color: #0056b3;\n    }\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: fit-content;\n`;\n\nconst TransformContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst SubtitleTransform = styled.h3`\nmargin-bottom: 0px;\nfont-size: 12px;\n`\n\nconst Subtitle = styled.h3`\n`\n\nconst SettingContainer = styled.div`\nwidth: calc(100% - 3rem);\n`\n\nconst SliderContainer = styled.div`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\n`\n\nconst Slider = styled.input`\n  flex: 1;\n  margin-left: 0.5em;\n`\nconst Input = styled.input`\n  height: 20px;\n  width: 35px;\n  text-align: center;\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-left: 0.5em;\n`\n\nconst ReflectAxisContainer = styled.div`\ndisplay: flex;\nwidth: 33%;\njustify-content: center;\n`\n\nconst ReflectContainer = styled.div`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\njustify-content: stretch;\n`\n\nconst MatrixContainer = styled.div`\ndisplay: flex;\nwidth: calc(100% - 3rem);\njustify-content: center;\nalign-items: center;\nflex-direction: column;\n`\n\nconst GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  width: 60%;\n`;\n\nconst GridCell = styled.div`\n  border: 1px solid black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  font-weight: bold;\n`;\n\nconst ResetButton = styled.button`\nmargin-top: 1rem;\npadding: 0.5rem 1rem;\nborder: none;\nborder-radius: 0.5rem;\nfont-size: 0.9rem;\ncursor: pointer;\n&:hover {\n    background-color:rgb(137, 137, 137);\n}\n`;\n","import styled from 'styled-components/macro';\nimport { useEffect, useState } from 'react';\nimport { BASE_URL } from './App';\n\nexport default function RenderMenu({ activeLayerName, layerType }) {\n  if (!activeLayerName || !layerType) {\n    return <Message>No layer selected. Please select a layer to view rendering options.</Message>;\n  }\n\n  switch (layerType) {\n    case \"image\":\n      return <ImageRenderMenu layerName={activeLayerName} />;\n    case \"segmentation\":\n      return <SegmentRenderMenu layerName={activeLayerName} />;\n    case \"mesh\":\n      return <MeshRenderMenu layerName={activeLayerName} />;\n    default:\n      return <Message>Unsupported layer type: {layerType}</Message>;\n  }\n}\n\n// ────────────────────────────────────────────────────────────────\n// IMAGE LAYER RENDER MENU\n// ────────────────────────────────────────────────────────────────\n\nfunction ImageRenderMenu({ layerName }) {\n  const [opacity, setOpacity] = useState(1);\n  const [rangeMin, setRangeMin] = useState(0);\n  const [rangeMax, setRangeMax] = useState(65535);\n  const [mode, setMode] = useState(\"rgb\");\n  const [numChannels, setNumChannels] = useState(3); // set this dynamically if needed\n  const [gammaValues, setGammaValues] = useState(Array(3).fill(1)); // default 3 channels\n\n  const handleSliderChange = (key, value) => {\n    const numValue = parseFloat(value);\n    if (key === 'opacity') setOpacity(numValue);\n    if (key === 'rangeMin') setRangeMin(numValue);\n    if (key === 'rangeMax') setRangeMax(numValue);\n  };\n\n  const handleGammaChange = (index, value) => {\n    const updated = [...gammaValues];\n    updated[index] = parseFloat(value);\n    setGammaValues(updated);\n  };\n\n  const handleModeChange = (newMode) => {\n    setMode(newMode);\n  };\n\n  useEffect(() => {\n    if (!layerName) return;\n\n    const shader = mode === \"rgb\"\n      ? `\\\n${gammaValues.map((_, i) => `#uicontrol float gamma${i} slider(min=0.1, max=5, step=0.01, default=${gammaValues[i].toFixed(2)})`).join('\\n')}\n#uicontrol invlerp normalized(range=[${rangeMin}, ${rangeMax}])\nvoid main() {\n  float v = normalized();\n  vec3 rgb = vec3(0.0);\n${gammaValues.map((_, i) => `  rgb += pow(vec3(v), vec3(gamma${i})) / ${gammaValues.length.toFixed(1)};`).join('\\n')}\n  emitRGB(rgb);\n}`\n      : `#uicontrol invlerp normalized(range=[${rangeMin}, ${rangeMax}])\nvoid main() {\n  emitGrayscale(normalized());\n}`;\n\n    const payload = {\n      layerName,\n      opacity,\n      shader,\n      shaderControls: {\n        normalized: { range: [rangeMin, rangeMax] }\n      }\n    };\n\n    const send = async () => {\n      try {\n        const res = await fetch(`${BASE_URL}/update_image_rendering`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n        if (!res.ok) throw new Error(\"Server error\");\n        console.log(\"Image rendering updated:\", payload);\n      } catch (err) {\n        console.error(\"Failed to update rendering:\", err);\n      }\n    };\n\n    send();\n  }, [opacity, rangeMin, rangeMax, mode, gammaValues]);\n\n  return (\n    <SettingContainer>\n      <SectionHeaderRow>\n        <SectionTitle>Image Rendering Controls for <strong>{layerName}</strong></SectionTitle>\n        <ModeToggle>\n          <ModeButton selected={mode === \"rgb\"} onClick={() => handleModeChange(\"rgb\")}>RGB</ModeButton>\n          <ModeButton selected={mode === \"greyscale\"} onClick={() => handleModeChange(\"greyscale\")}>Greyscale</ModeButton>\n        </ModeToggle>\n      </SectionHeaderRow>\n\n      <SubtitleTransform>Opacity</SubtitleTransform>\n      <SliderContainer>\n        <Slider\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={opacity}\n          onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          step=\"0.01\"\n          value={opacity}\n          onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n        />\n      </SliderContainer>\n\n      <SubtitleTransform>Normalized Shader Range</SubtitleTransform>\n      <SliderContainer>\n        <Subtitle>Min:</Subtitle>\n        <Slider\n          type=\"range\"\n          min=\"0\"\n          max={rangeMax}\n          step=\"1\"\n          value={rangeMin}\n          onChange={(e) => handleSliderChange(\"rangeMin\", e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          value={rangeMin}\n          onChange={(e) => handleSliderChange(\"rangeMin\", e.target.value)}\n        />\n      </SliderContainer>\n\n      <SliderContainer>\n        <Subtitle>Max:</Subtitle>\n        <Slider\n          type=\"range\"\n          min={rangeMin}\n          max=\"65535\"\n          step=\"1\"\n          value={rangeMax}\n          onChange={(e) => handleSliderChange(\"rangeMax\", e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          value={rangeMax}\n          onChange={(e) => handleSliderChange(\"rangeMax\", e.target.value)}\n        />\n      </SliderContainer>\n\n      {mode === \"rgb\" && (\n        <>\n          <SubtitleTransform>Gamma (Per Channel)</SubtitleTransform>\n          {gammaValues.map((gamma, idx) => (\n            <SliderContainer key={idx}>\n              <Subtitle>Gamma {idx + 1}</Subtitle>\n              <Slider\n                type=\"range\"\n                min=\"0.1\"\n                max=\"5\"\n                step=\"0.01\"\n                value={gamma}\n                onChange={(e) => handleGammaChange(idx, e.target.value)}\n              />\n              <Input\n                type=\"number\"\n                step=\"0.01\"\n                value={gamma}\n                onChange={(e) => handleGammaChange(idx, e.target.value)}\n              />\n            </SliderContainer>\n          ))}\n        </>\n      )}\n    </SettingContainer>\n  );\n}\n\n// ────────────────────────────────────────────────────────────────\n// OTHER LAYER TYPES (STUBS)\n// ────────────────────────────────────────────────────────────────\n\nfunction SegmentRenderMenu({ layerName }) {\n  const [opacity, setOpacity] = useState(1);\n  const [saturation, setSaturation] = useState(1);\n\n  const handleSliderChange = (key, value) => {\n    const numValue = parseFloat(value);\n    if (key === 'opacity') setOpacity(numValue);\n    if (key === 'saturation') setSaturation(numValue);\n  };\n\n  useEffect(() => {\n    setOpacity(1);\n    setSaturation(1);\n  }, [layerName]);\n\n  useEffect(() => {\n    const send = async () => {\n      try {\n        const res = await fetch(`${BASE_URL}/update_segment_rendering`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            layerName,\n            opacity,\n            saturation\n          })\n        });\n        if (!res.ok) throw new Error(\"Server error\");\n        console.log(\"Segment rendering updated:\", { layerName, opacity, saturation });\n      } catch (err) {\n        console.error(\"Failed to update segment rendering:\", err);\n      }\n    };\n\n    send();\n  }, [opacity, saturation]);\n\n  return (\n    <SettingContainer>\n      <SectionTitle>Segment Rendering Controls for <strong>{layerName}</strong></SectionTitle>\n\n      <SubtitleTransform>Opacity</SubtitleTransform>\n      <SliderContainer>\n        <Slider\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={opacity}\n          onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          step=\"0.01\"\n          value={opacity}\n          onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n        />\n      </SliderContainer>\n\n      <SubtitleTransform>Saturation</SubtitleTransform>\n      <SliderContainer>\n        <Slider\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.01\"\n          value={saturation}\n          onChange={(e) => handleSliderChange(\"saturation\", e.target.value)}\n        />\n        <Input\n          type=\"number\"\n          step=\"0.01\"\n          value={saturation}\n          onChange={(e) => handleSliderChange(\"saturation\", e.target.value)}\n        />\n      </SliderContainer>\n    </SettingContainer>\n  );\n}\n\n\nfunction MeshRenderMenu({ layerName }) {\n  return <Section>Mesh Rendering Controls for <strong>{layerName}</strong></Section>;\n}\n\n// ────────────────────────────────────────────────────────────────\n// STYLED COMPONENTS\n// ────────────────────────────────────────────────────────────────\n\nconst Message = styled.p`\n  font-style: italic;\n  font-size: 0.9rem;\n`;\n\nconst Section = styled.div`\n  padding: 1rem;\n  font-size: 0.9rem;\n`;\n\nconst SettingContainer = styled.div`\n  width: calc(100% - 3rem);\n  margin-top: 1rem;\n`;\n\nconst SectionHeaderRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SectionTitle = styled.h4`\n  font-size: 0.95rem;\n`;\n\nconst SubtitleTransform = styled.h3`\n  margin-top: 1rem;\n  margin-bottom: 0px;\n  font-size: 12px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 12px;\n  width: 40px;\n`;\n\nconst SliderContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n`;\n\nconst Slider = styled.input`\n  flex: 1;\n  margin-left: 0.5em;\n`;\n\nconst Input = styled.input`\n  height: 20px;\n  width: 50px;\n  text-align: center;\n  font-size: 1em;\n  margin-left: 0.5em;\n`;\n\nconst ModeToggle = styled.div`\n  display: flex;\n  gap: 0.5rem;\n`;\n\nconst ModeButton = styled.button`\n  padding: 0.4rem 1rem;\n  border-radius: 0.4rem;\n  border: 1px solid #ccc;\n  background-color: ${({ selected }) => selected ? '#007bff' : '#f0f0f0'};\n  color: ${({ selected }) => selected ? 'white' : '#333'};\n  font-weight: bold;\n  cursor: pointer;\n  transition: 0.2s;\n`;\n\n// import styled from 'styled-components/macro';\n// import { useEffect, useState } from 'react';\n// import { BASE_URL } from './App';\n\n// export default function RenderMenu({ activeLayerName, layerType }) {\n//   if (!activeLayerName || !layerType) {\n//     return <Message>No layer selected. Please select a layer to view rendering options.</Message>;\n//   }\n\n//   switch (layerType) {\n//     case \"image\":\n//       return <ImageRenderMenu layerName={activeLayerName} />;\n//     case \"segment\":\n//       return <SegmentRenderMenu layerName={activeLayerName} />;\n//     case \"mesh\":\n//       return <MeshRenderMenu layerName={activeLayerName} />;\n//     default:\n//       return <Message>Unsupported layer type: {layerType}</Message>;\n//   }\n// }\n\n// // ─── IMAGE RENDER MENU ───────────────────────────────────────────\n\n// function ImageRenderMenu({ layerName }) {\n//   const [opacity, setOpacity] = useState(1);\n//   const [rangeMin, setRangeMin] = useState(0);\n//   const [rangeMax, setRangeMax] = useState(65535);\n//   const [mode, setMode] = useState(\"rgb\"); // \"rgb\" or \"greyscale\"\n\n//   const handleSliderChange = (key, value) => {\n//     const numValue = parseFloat(value);\n//     if (key === 'opacity') setOpacity(numValue);\n//     if (key === 'rangeMin') setRangeMin(numValue);\n//     if (key === 'rangeMax') setRangeMax(numValue);\n//   };\n\n//   const handleModeChange = (newMode) => {\n//     setMode(newMode);\n//   };\n\n//   useEffect(() => {\n//     if (!layerName) return;\n\n//     const shader = mode === \"rgb\"\n//       ? `#uicontrol invlerp normalized(range=[${rangeMin}, ${rangeMax}])\n// void main() {\n//   float v = normalized();\n//   emitRGB(vec3(0, v, 0));\n// }`\n//       : `#uicontrol invlerp normalized\n// void main() {\n//   emitGrayscale(normalized());\n// }`;\n\n//     const payload = {\n//       layerName,\n//       opacity,\n//       shader,\n//       shaderControls: mode === \"rgb\" ? { normalized: { range: [rangeMin, rangeMax] } } : {},\n//     };\n\n//     const send = async () => {\n//       try {\n//         const res = await fetch(`${BASE_URL}/update_image_rendering`, {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify(payload),\n//         });\n//         if (!res.ok) throw new Error(\"Server error\");\n//         console.log(\"Image rendering updated:\", payload);\n//       } catch (err) {\n//         console.error(\"Failed to update rendering:\", err);\n//       }\n//     };\n\n//     send();\n//   }, [opacity, rangeMin, rangeMax, mode]);\n\n//   return (\n//     <SettingContainer>\n//       <SectionTitle>Image Rendering Controls for <strong>{layerName}</strong></SectionTitle>\n\n//       <SubtitleTransform>Opacity</SubtitleTransform>\n//       <SliderContainer>\n//         <Slider\n//           type=\"range\"\n//           min=\"0\"\n//           max=\"1\"\n//           step=\"0.01\"\n//           value={opacity}\n//           onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n//         />\n//         <Input\n//           type=\"number\"\n//           step=\"0.01\"\n//           value={opacity}\n//           onChange={(e) => handleSliderChange(\"opacity\", e.target.value)}\n//         />\n//       </SliderContainer>\n\n//       {mode === \"rgb\" && (\n//         <>\n//           <SubtitleTransform>Normalized Shader Range</SubtitleTransform>\n//           <SliderContainer>\n//             <Subtitle>Min:</Subtitle>\n//             <Slider\n//               type=\"range\"\n//               min=\"0\"\n//               max={rangeMax}\n//               step=\"1\"\n//               value={rangeMin}\n//               onChange={(e) => handleSliderChange(\"rangeMin\", e.target.value)}\n//             />\n//             <Input\n//               type=\"number\"\n//               value={rangeMin}\n//               onChange={(e) => handleSliderChange(\"rangeMin\", e.target.value)}\n//             />\n//           </SliderContainer>\n\n//           <SliderContainer>\n//             <Subtitle>Max:</Subtitle>\n//             <Slider\n//               type=\"range\"\n//               min={rangeMin}\n//               max=\"65535\"\n//               step=\"1\"\n//               value={rangeMax}\n//               onChange={(e) => handleSliderChange(\"rangeMax\", e.target.value)}\n//             />\n//             <Input\n//               type=\"number\"\n//               value={rangeMax}\n//               onChange={(e) => handleSliderChange(\"rangeMax\", e.target.value)}\n//             />\n//           </SliderContainer>\n//         </>\n//       )}\n\n//       <SubtitleTransform>Shader Mode</SubtitleTransform>\n//       <ModeToggle>\n//         <ModeButton selected={mode === \"rgb\"} onClick={() => handleModeChange(\"rgb\")}>\n//           RGB\n//         </ModeButton>\n//         <ModeButton selected={mode === \"greyscale\"} onClick={() => handleModeChange(\"greyscale\")}>\n//           Greyscale\n//         </ModeButton>\n//       </ModeToggle>\n//     </SettingContainer>\n//   );\n// }\n\n// // ─── OTHER LAYER TYPES ───────────────────────────────────────────\n\n// function SegmentRenderMenu({ layerName }) {\n//   return <Section>Segment Rendering Controls for <strong>{layerName}</strong></Section>;\n// }\n\n// function MeshRenderMenu({ layerName }) {\n//   return <Section>Mesh Rendering Controls for <strong>{layerName}</strong></Section>;\n// }\n\n// // ─── STYLED COMPONENTS ───────────────────────────────────────────\n\n// const Message = styled.p`\n//   font-style: italic;\n//   font-size: 0.9rem;\n// `;\n\n// const Section = styled.div`\n//   padding: 1rem;\n//   font-size: 0.9rem;\n// `;\n\n// const SettingContainer = styled.div`\n//   width: calc(100% - 3rem);\n//   margin-top: 1rem;\n// `;\n\n// const SectionTitle = styled.h4`\n//   font-size: 0.95rem;\n//   margin-bottom: 1rem;\n// `;\n\n// const SubtitleTransform = styled.h3`\n//   margin-bottom: 0px;\n//   font-size: 12px;\n// `;\n\n// const Subtitle = styled.h3`\n//   font-size: 12px;\n//   width: 40px;\n// `;\n\n// const SliderContainer = styled.div`\n//   display: flex;\n//   width: 100%;\n//   align-items: center;\n// `;\n\n// const Slider = styled.input`\n//   flex: 1;\n//   margin-left: 0.5em;\n// `;\n\n// const Input = styled.input`\n//   height: 20px;\n//   width: 50px;\n//   text-align: center;\n//   font-size: 1em;\n//   margin-left: 0.5em;\n// `;\n\n// const ModeToggle = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n//   width: 100%;\n//   margin-top: 0.5rem;\n// `;\n\n// const ModeButton = styled.button`\n//   padding: 0.4rem 1rem;\n//   border-radius: 0.4rem;\n//   border: 1px solid #ccc;\n//   background-color: ${({ selected }) => selected ? '#007bff' : '#f0f0f0'};\n//   color: ${({ selected }) => selected ? 'white' : '#333'};\n//   font-weight: bold;\n//   cursor: pointer;\n//   transition: 0.2s;\n// `;\n","import './App.css';\nimport {useState} from 'react'\nimport TransformMenu from './TransformMenu'\nimport RenderMenu from './RenderMenu'\nimport styled from 'styled-components/macro'\nimport { BASE_URL } from './App'\n\nexport default function Menu({ saveLayerState, activeLayerName, activeLayerType, layerOps, trackTransforms, saveTrackTransforms }) {\n    const [tabIndex, setTabIndex] = useState(0);   \n    let selectedTabMenu;\n    switch (tabIndex) {\n        case 0:\n            selectedTabMenu = <RenderMenu activeLayerName={activeLayerName} layerType={activeLayerType} />;\n            break;\n        case 1:\n            selectedTabMenu = <TransformMenu saveLayerState={saveLayerState} activeLayerName={activeLayerName} layerOps={layerOps} trackTransforms={trackTransforms} saveTrackTransforms={saveTrackTransforms}/>;\n            break;\n\n        default:\n            break;\n    } \n\n    return (\n        <>\n            <TabButtonContainer >\n                <TabButton onClick={()=>{setTabIndex(0)}} selected={tabIndex == 0}>Rendering</TabButton>\n                <TabButton onClick={()=>{setTabIndex(1)}} selected={tabIndex == 1}>Transform</TabButton>\n                <TabButton onClick={()=>{setTabIndex(2)}} selected={tabIndex == 2}>Processing</TabButton>\n                <TabButton onClick={()=>{setTabIndex(3)}} selected={tabIndex == 3}>Analysis</TabButton>\n                <TabButton onClick={()=>{setTabIndex(4)}} selected={tabIndex == 4}>Annotation</TabButton>\n            </TabButtonContainer>\n            <TabContent>\n                {selectedTabMenu}\n            </TabContent>\n        </>\n    )\n}\n\nconst TabButtonContainer = styled.div`\nmargin-left: 1rem;\nwidth: 90%;\ndisplay: flex;\n`\n\nconst TabButton = styled.button`\nbackground-color: ${(props)=>(props.selected) ? 'rgba(0, 0, 0, 0.8)': 'rgba(255, 255, 255, 0.9)'};\ncolor: ${(props)=>(props.selected) ? 'white': 'rgba(0, 0, 0, 0.9)'};\nfloat: left;\noutline: none;\ncursor: pointer;\npadding: 0.5rem 0.8rem;\ntransition: 0.3s;\nfont-size: 12px;\nfont-weight: 700;\nborder-top: 1px solid rgba(0,0,0,0.6);\nborder-bottom: 1px solid rgba(0,0,0,0.6);\nborder-left: none;\nborder-right: 1px solid rgba(0,0,0,0.6);\ndisplay: block;\n:first-child {\n    border-radius: 5px 0 0 5px;\n    border-left: 1px solid rgba(0,0,0,0.6);\n}\n:last-child {\n    border-radius: 0 5px 5px 0;\n    border-right: 1px solid rgba(0,0,0,0.6);\n}\nwidth: 25%;\n`\n\nconst TabContent = styled.div`\ndisplay: flex;\nflex-direction: column;\npadding: 0.3rem;\n/* border: 1px solid #ccc; */\nborder-top: none;\nfont-size: 10px;\nmargin-top: 0.5rem;\n/* background-color: rgb(225, 225, 225); */\nalign-items: center;\n`","import './App.css';\nimport Menu from './Menu';\nimport { SocketContext } from './Context';\nimport { useEffect, useState, useReducer, useRef } from 'react';\nimport styled from 'styled-components/macro';\nimport { io } from 'socket.io-client';\nexport const BASE_URL = `http://localhost:${process.env.REACT_APP_SERVER_PORT}`;\n\nfunction App() {\n  const [data, setData] = useState(null); //Data is name, type, visible\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [connectionError, setConnectionError] = useState(null);\n  const socket = useRef(null);\n  const [activeLayer, setActiveLayer] = useState(null);\n  const [layerOps, setLayerOps] = useState({});\n  const [trackTransforms, setTrackTransforms] = useState({});\n\n  const fileInputRef = useRef(null);\n  const importModeRef = useRef(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      try {\n        const contents = e.target.result;\n        const jsonData = JSON.parse(contents);\n\n        if (importModeRef.current === 'layer') { // Import layer\n          if (!jsonData.type) {\n            alert(\"Invalid layer JSON: missing 'type' field.\");\n            return;\n          }\n\n          const formData = new FormData();\n          formData.append(\"file\", file);\n          formData.append(\"layer_name\", file.name.replace(\".json\", \"\"));\n\n          const res = await fetch(`${BASE_URL}/import_layer`, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          const result = await res.json();\n          // alert(result.message + \"\\n\" + result.url);\n        }\n\n        else if (importModeRef.current === 'viewer') { // Import viewer\n          if (!jsonData.layers) {\n            alert(\"Invalid viewer state JSON: missing 'layers' field.\");\n            return;\n          }\n\n          const formData = new FormData();\n          formData.append(\"file\", file);\n\n          const res = await fetch(`${BASE_URL}/import_viewer`, {\n            method: \"POST\",\n            body: formData,\n          });\n\n          const result = await res.json();\n          // alert(result.message + \"\\n\" + result.url);\n        }\n      } catch (error) {\n        alert(\"Failed to read or upload JSON: \" + error.message);\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  const handleImportStateJSON = () => {\n    console.log(\"Triggering file input for layer import\");\n    importModeRef.current = \"layer\";\n    console.log(\"Attempting to click:\", fileInputRef.current);\n    console.log(\"Is in DOM?\", document.body.contains(fileInputRef.current));\n    fileInputRef.current?.click();\n  };\n\n  const handleImportViewerJSON = () => {\n    console.log(\"Triggering file input for viewer import\");\n    importModeRef.current = \"viewer\";\n    console.log(\"Attempting to click:\", fileInputRef.current);\n    console.log(\"Is in DOM?\", document.body.contains(fileInputRef.current));\n    fileInputRef.current?.click();\n  };\n\n  const handleExportJSON = () => {\n    console.log('Export Layer clicked');\n  };\n\n  const handleUndo = () => {\n    console.log('Undo clicked');\n  };\n\n  const handleRedo = () => {\n    console.log('Redo clicked');\n  };\n\n  const loadPluginA = () => {\n    console.log('Load Plugin A clicked');\n  };\n\n  const loadPluginB = () => {\n    console.log('Load Plugin B clicked');\n  };\n\n  const saveLayerState = (layerName, matrix) => {\n    setLayerOps((prevLayerOps) => ({\n      ...prevLayerOps,\n      [layerName]: prevLayerOps[layerName] ? [...prevLayerOps[layerName], matrix] : [matrix],\n    }));\n    console.log(\"Layer state saved:\", layerName, matrix);\n  };\n\n  const saveTrackTransforms = (layerName, transformDescriptionOrUpdater) => {\n    setTrackTransforms((prev) => {\n      const current = prev[layerName] || [];\n  \n      const updated = typeof transformDescriptionOrUpdater === 'function'\n        ? transformDescriptionOrUpdater(current)\n        : Array.isArray(transformDescriptionOrUpdater)\n          ? transformDescriptionOrUpdater\n          : [...current, transformDescriptionOrUpdater];\n  \n      return {\n        ...prev,\n        [layerName]: updated,\n      };\n    });\n  };  \n\n  // const saveTrackTransforms = (layerName, transformDescription) => {\n  //   setTrackTransforms((prev) => ({\n  //     ...prev,\n  //     [layerName]: typeof transformDescription === 'function'\n  //       ? transformDescription(prev[layerName] || [])\n  //       : [...(prev[layerName] || []), transformDescription]\n  //   }));\n  // };\n  \n\n  useEffect(() => {\n    if (!socket.current) {\n      socket.current = io(BASE_URL, {\n        path: '/socket.io/',\n        transports: ['polling'],\n        reconnection: true,\n        reconnectionAttempts: 10,\n        reconnectionDelay: 1000,\n        timeout: 20000,\n        autoConnect: true,\n        extraHeaders: {\n          \"Origin\": window.location.origin\n        },\n        withCredentials: true\n      });\n\n      socket.current.on('connect', () => {\n        console.log('Socket.IO connected successfully with ID:', socket.current.id);\n        setSocketConnected(true);\n        setConnectionError(null);\n      });\n\n      socket.current.on('connection_established', (data) => {\n        console.log('Server confirmed connection:', data);\n      });\n\n      socket.current.on('connect_error', (error) => {\n        console.error('Socket.IO connection error:', error);\n        setSocketConnected(false);\n        setConnectionError(`Connection error: ${error.message}`);\n      });\n\n      socket.current.on('disconnect', (reason) => {\n        console.log('Socket disconnected:', reason);\n        setSocketConnected(false);\n        setConnectionError(`Disconnected: ${reason}`);\n      });\n    }\n\n    const fetchLayers = async () => {\n      try {\n        console.log('Fetching layers from:', `${BASE_URL}/layers`);\n        const response = await fetch(`${BASE_URL}/layers`, {\n          credentials: 'include',\n          headers: {\n            'Accept': 'application/json',\n            'Origin': window.location.origin\n          }\n        });\n        const json = await response.json();\n        console.log(\"Fetched JSON:\", json);\n        setData(json);\n      } catch (error) {\n        console.error('Error fetching layers:', error);\n      }\n    };\n\n    fetchLayers();\n\n    if (socket.current) {\n      socket.current.on('layers-updated', (updated) => {\n        if (updated?.layers) {\n          const layerArray = Object.entries(updated.layers).map(([name, info]) => ({\n            name,\n            type: info.type,\n            visible: info.visible !== false\n          }));\n          setData(layerArray);\n        } else {\n          fetchLayers(); // fallback\n        }\n      });\n    }\n\n    return () => {\n      if (socket.current) {\n        socket.current.off('layers-updated');\n        socket.current.off('connect');\n        socket.current.off('disconnect');\n        socket.current.off('connect_error');\n        socket.current.off('connection_established');\n      }\n    };\n  }, []);\n\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <Main>\n        <DashboardText>Dashboard</DashboardText>\n\n        <label htmlFor=\"jsonUploadInput\" style={{ display: 'none' }} />\n        <input\n          id=\"jsonUploadInput\"\n          type=\"file\"\n          accept=\".json\"\n          ref={fileInputRef}\n          style={{ display: 'none' }}\n          onClick={() => {\n            fileInputRef.current.value = null;\n          }}\n          onChange={handleFileChange}\n        />\n\n        <Ribbon>\n          <RibbonDropdown\n            trigger={<RibbonButton>File</RibbonButton>}\n            menuItems={[\n              { label: 'Import Layer', onClick: handleImportStateJSON },\n              { label: 'Import Viewer State', onClick: handleImportViewerJSON },\n              { label: 'Export Layer', onClick: handleExportJSON },\n            ]}\n          />\n          <RibbonDropdown\n            trigger={<RibbonButton>Edit</RibbonButton>}\n            menuItems={[\n              { label: 'Undo', onClick: handleUndo },\n              { label: 'Redo', onClick: handleRedo },\n            ]}\n          />\n          <RibbonDropdown\n            trigger={<RibbonButton>Plug-Ins</RibbonButton>}\n            menuItems={[\n              { label: 'Load Plugin A', onClick: loadPluginA },\n              { label: 'Load Plugin B', onClick: loadPluginB },\n            ]}\n          />\n        </Ribbon>\n\n        {/* <button\n          onClick={() => {\n            importModeRef.current = \"layer\";\n            fileInputRef.current?.click();\n          }}\n        >\n          Trigger Import\n        </button>\n\n        <input type=\"file\" accept=\".json\" onChange={handleFileChange} /> */}\n\n\n\n        <Container>\n          <RightContainer>\n            <PanelHeader>Neuroglancer Layers</PanelHeader>\n            <HeaderRow>\n              <LayerTitle>Name</LayerTitle>\n              <LayerTitle>Layer Type</LayerTitle>\n            </HeaderRow>\n            <LayerList\n              data={data}\n              activeLayer={activeLayer}\n              setActiveLayer={setActiveLayer}\n              layerOps={layerOps}\n              trackTransforms={trackTransforms}\n            />\n          </RightContainer>\n\n          <RightContainer>\n            <Menu\n              saveLayerState={saveLayerState}\n              activeLayerName={activeLayer?.name}\n              activeLayerType={activeLayer?.type}\n              layerOps={layerOps}\n              saveTrackTransforms={saveTrackTransforms}\n            />\n          </RightContainer>\n        </Container>\n      </Main>\n    </SocketContext.Provider>\n  );\n}\n\nconst RibbonDropdown = ({ trigger, menuItems }) => {\n  const [open, setOpen] = useState(false);\n\n  const handleRibbonToggle = () => setOpen((prev) => !prev);\n\n  return (\n    <RibbonDropdownContainer\n      tabIndex={0}\n      onBlur={(e) => {\n        setTimeout(() => setOpen(false), 100); // Wait so button click registers before closing out\n      }}\n    >\n      <RibbonDropdownTrigger onClick={handleRibbonToggle}>\n        {trigger}\n      </RibbonDropdownTrigger>\n      {open && (\n        <RibbonDropdownMenu role=\"menu\">\n          {menuItems.map(({ label, onClick }, index) => (\n            <DropdownItem key={index} role=\"menuitem\">\n              <button onClick={onClick}>{label}</button>\n            </DropdownItem>\n          ))}\n        </RibbonDropdownMenu>\n      )}\n    </RibbonDropdownContainer>\n  );\n};\n\n\nconst LayerList = ({ data, activeLayer, setActiveLayer, layerOps, trackTransforms }) => {\n  const [toggleStates, setToggleStates] = useState({});\n\n  // Initialize toggle states from actual visibility data\n  useEffect(() => {\n    if (data) {\n      setToggleStates((prevStates) => {\n        const updatedStates = { ...prevStates };\n        data.forEach(layer => {\n          const serverVisible = layer.visible !== false;\n          const prevVisible = prevStates[layer.name];\n\n          // Only update if the server state changed\n          if (prevVisible !== serverVisible) {\n            updatedStates[layer.name] = serverVisible;\n          }\n        });\n        return updatedStates;\n      });\n    }\n  }, [data]);\n\n  const handleLayerToggle = async (layerName) => {\n    const newVisible = !toggleStates[layerName]; // Flip current state\n\n    setToggleStates((prevStates) => ({\n      ...prevStates,\n      [layerName]: newVisible,\n    }));\n\n    try {\n      await fetch(`${BASE_URL}/toggle_visibility`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          layerName,\n          visible: newVisible,\n        }),\n      });\n      console.log(`Set ${layerName} visibility to`, newVisible);\n    } catch (err) {\n      console.error(\"Error toggling layer visibility:\", err);\n    }\n  };\n\n  console.log(\"trackTransforms in LayerList:\", trackTransforms);\n\n  return (\n    <div>\n      {data ? (\n        data.map((layer, index) => (\n          <div key={index}>\n            <LayerButton\n              isActive={activeLayer?.name === layer.name}\n              onClick={() => {\n                if (activeLayer?.name === layer.name) {\n                  setActiveLayer(null);\n                } else {\n                  setActiveLayer(layer);\n                }\n              }}\n            >\n              <span>{layer.name}</span>\n              <em>{layer.type}</em>\n            </LayerButton>\n\n            <div style={{ position: 'relative', width: '100%' }}>\n              <LayerDropdownMenu\n                layerName={layer.name}\n                transformDescriptions={trackTransforms[layer.name]}\n              />\n\n              <div style={{ position: 'absolute', top: 0, right: 0 }}>\n                <button\n                  onClick={() => handleLayerToggle(layer.name)}\n                  style={{\n                    backgroundColor: toggleStates[layer.name] ? '#4CAF50' : '#F44336',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '20px',\n                    padding: '0.5rem 1rem',\n                    cursor: 'pointer',\n                    fontSize: '0.9rem',\n                    transition: 'background-color 0.3s, transform 0.2s',\n                    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.transform = 'scale(1.05)';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.transform = 'scale(1)';\n                  }}\n                >\n                  {toggleStates[layer.name] ? 'On' : 'Off'}\n                </button>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <LoadingText>Loading...</LoadingText>\n      )}\n    </div>\n  );\n};\n\nconst LayerDropdownMenu = ({ layerName, transformDescriptions }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(\"Descriptions for\", layerName, transformDescriptions);\n  return (\n    <div>\n      <ShowTransformsButton onClick={() => setIsOpen(!isOpen)}>\n        {isOpen ? 'Hide' : 'Show Transforms'}\n      </ShowTransformsButton>\n\n      {isOpen && (\n        transformDescriptions && transformDescriptions.length > 0 ? (\n          <ol style={{ listStyleType: 'decimal', paddingLeft: '1.5em', marginTop: '0.5em', fontSize: '0.5em' }}>\n            {transformDescriptions.map((desc, index) => (\n              <li key={index} style={{ marginBottom: '0.5em' }}>\n                {desc}\n              </li>\n            ))}\n          </ol>\n        ) : (\n          <p style={{ marginBottom: '0.3em', paddingLeft: '1.5em', fontSize: '0.5em' }}>\n            No transform descriptions saved for {layerName}\n          </p>\n        )\n      )}\n    </div>\n  );\n};\n\n\nconst Main = styled.div`\ndisplay: flex;\nflex-direction: column;\nheight: 100vh;\noverflow: auto;\n`\n\nconst RibbonDropdownContainer = styled.div`\n  position: relative;\n  display: inline-block;\n  outline: none;\n`;\n\nconst RibbonDropdownTrigger = styled.div`\n  cursor: pointer;\n`;\n\nconst RibbonDropdownMenu = styled.ul`\n  position: absolute;\n  top: 100%;\n  left: 0;\n  list-style: none;\n  background-color: white;\n  opacity: 1;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  margin-top: 0.3rem;\n  padding: 0.5rem 0;\n  box-shadow: 0 2px 5px rgba(0,0,0,0.15);\n  z-index: 999;\n  width: max-content;\n  white-space: nowrap;\n`;\n\nconst DropdownItem = styled.li`\n  padding: 0.5rem 1rem;\n\n  button {\n    border: none;\n    background: none;\n    width: 100%;\n    text-align: left;\n    font-size: 0.9rem;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #f5f5f5;\n    }\n  }\n`;\n\nconst LayerTitle = styled.span`\nfont-size:0.8rem;\nfont-weight: bold;\n`\n\nconst DashboardText = styled.h1`\nmargin-left: 20px;\n`\n\nconst Ribbon = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  background-color: #f0f0f0;\n  padding: 0 20px;\n  border-radius: 5px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  max-width: 1000px;\n`;\n\nconst RibbonButton = styled.button`\n  background-color: transparent;\n  color: #333;\n  border: none;\n  padding: 10px 15px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.3s, color 0.3s;\n\n  &:hover {\n    background-color: #e0e0e0;\n    color: #000;\n  }\n`;\n\nconst Button = styled.button`\nbackground-color: ${(props) => (props.selected) ? 'rgba(0, 0, 0, 0.8)' : 'rgba(255, 255, 255, 0.9)'};\ncolor: ${(props) => (props.selected) ? 'white' : 'rgba(0, 0, 0, 0.9)'};\nfloat: left;\noutline: none;\ncursor: pointer;\npadding: 0.5rem 0.8rem;\ntransition: 0.3s;\nfont-size: 12px;\nfont-weight: 700;\nborder-top: 1px solid rgba(0,0,0,0.6);\nborder-bottom: 1px solid rgba(0,0,0,0.6);\nborder-left: none;\nborder-right: 1px solid rgba(0,0,0,0.6);\ndisplay: block;\n:first-child {\n    border-radius: 5px 0 0 5px;\n    border-left: 1px solid rgba(0,0,0,0.6);\n}\n:last-child {\n    border-radius: 0 5px 5px 0;\n    border-right: 1px solid rgba(0,0,0,0.6);\n}\nwidth: 25%;\n`\n\nconst ShowTransformsButton = styled.button`\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 0.5rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  background-color:rgb(212, 212, 212);\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color:rgb(200, 200, 200);\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Container = styled.div`\ndisplay: flex;\nwidth: 100vw;\nheight: 100vh;\n`\n\nconst LeftContent = styled.div`\nheight: 100%;\nwidth: calc(100% - 20rem);\n`\n\nconst MainContainer = styled.div`\ndisplay: flex;\nposition: relative;\nheight: 100%;\n`\n\nconst Header = styled.div`\nbackground-color: rgba(0,0,0,0.8);\npadding: 0.5rem 0 0.5rem 0.5rem;\n`\n\nconst HeaderText = styled.h1`\nmargin: 0;\nmargin-left: 1rem;\nfont-weight: 700;\nfont-size: 1.4em;\ncolor: rgba(0, 0, 0, 0.85);\ncolor: rgba(255, 255, 255, 0.9);\n`\n\nconst HeaderSmallText = styled.h2`\nmargin: 0;\nmargin-left: 1rem;\nfont-size: 0.85em;\nfont-weight: 300;\ncolor: rgba(0, 0, 0, 0.8);\ncolor: rgba(255, 255, 255, 0.9);\n`\n\nconst LeftContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex: 1;\n/* border: 1px solid rgba(0, 0, 0, 0.6);\nborder-radius: 5px; */\n/* margin-right: 1rem; */\nfont-size: 30px;\n`\n\nconst RightContainer = styled.div`\ndisplay: flex;\nwidth: 25rem;\nflex-direction: column;\n/* border: 1px solid rgba(0, 0, 0, 0.6); */\nborder-radius: 5px;\nfont-size: 30px;\npadding: 2rem 1rem 1rem 1rem;\n/* box-shadow: -5px 0px 10px 5px rgba(0,0,0,0.1); */\n`\n\nconst PanelHeader = styled.h3`\nmargin-bottom: 1.5rem;\nfont-size: 1.25rem;\nfont-weight: 600;\ncolor: #333;\nborder-bottom: 1px solid #ddd;\npadding-bottom: 0.5rem;\n`;\n\nconst WhiteContainer = styled.div`\ndisplay: flex;\nheight: 50%;\nbackground-color: #ffffff;\noverflow: auto;\npadding-bottom: 1rem;\n`\n\nconst TreeControl = styled.div`\ndisplay: flex;\nflex-direction: column;\nflex-shrink: 1;\nborder: 1px solid;\ntext-align: center;\npadding: 0.5rem;\n`\n\nconst TreeControlButton = styled.button`\nmargin: 0.5rem;\nwidth: 4rem;\n`\n\nconst Folders = styled.div`\n/* border: 1px solid rgba(0, 0, 0, 0.6); */\n/* border-radius: 5px; */\ntext-align: left;\nflex: 3;\npadding: 0.5rem;\noverflow: auto;\n`\n\nconst SomaContainer = styled.div`\ndisplay: flex;\nflex-shrink: 1;\nbackground-color: #ffffff;\noverflow: auto;\n`\nconst HeaderRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  font-weight: bold;\n  padding: 0.75rem 1rem;\n  border-bottom: 2px solid #ccc;\n`;\n\nconst LayerButton = styled.button`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  background-color: ${({ isActive }) => (isActive ? '#e6f7ff' : '#fff')};\n  border: 1px solid ${({ isActive }) => (isActive ? '#1890ff' : '#ddd')};\n  border-radius: 6px;\n  padding: 0.75rem 1rem;\n  font-size: 1rem;\n  margin-top: 0.8rem;\n  cursor: pointer;\n  transition: background-color 0.2s ease, box-shadow 0.2s ease;\n  text-align: left;\n\n  &:hover {\n    box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.15);\n  }\n\n  span {\n    font-weight: 500;\n    font-size: 0.9rem;\n  }\n\n  em {\n    font-size: 0.9rem;\n    color: #666;\n    font-style: normal;\n  }\n`;\n\n\n\nconst LoadingText = styled.p`\n  font-size: 1rem;\n  color: #888;\n  font-style: italic;\n`;\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}