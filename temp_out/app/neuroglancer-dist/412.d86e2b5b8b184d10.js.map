{"version":3,"file":"412.d86e2b5b8b184d10.js","sources":["webpack://neuroglancer/./src/sliceview/png/index.ts","webpack://neuroglancer/./src/sliceview/jxl/index.ts","webpack://neuroglancer/./src/sliceview/compresso/index.ts","webpack://neuroglancer/./src/async_computation/handler.ts","webpack://neuroglancer/./src/util/array.ts","webpack://neuroglancer/./src/sliceview/compressed_segmentation/encode_common.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation.ts","webpack://neuroglancer/./src/async_computation/index.ts","webpack://neuroglancer/./src/async_computation/encode_compressed_segmentation_request.ts","webpack://neuroglancer/./src/third_party/jpgjs/jpg.js","webpack://neuroglancer/./src/async_computation/decode_jpeg.ts","webpack://neuroglancer/./src/async_computation/decode_jpeg_request.ts","webpack://neuroglancer/./src/util/gzip.ts","webpack://neuroglancer/./src/async_computation/decode_png.ts","webpack://neuroglancer/./src/async_computation/decode_png_request.ts","webpack://neuroglancer/./src/async_computation/decode_blosc.ts","webpack://neuroglancer/./src/async_computation/decode_blosc_request.ts","webpack://neuroglancer/./src/async_computation/decode_zstd.ts","webpack://neuroglancer/./src/async_computation/decode_zstd_request.ts","webpack://neuroglancer/./src/async_computation/obj_mesh.ts","webpack://neuroglancer/./src/async_computation/obj_mesh_request.ts","webpack://neuroglancer/./src/async_computation/decode_jxl.ts","webpack://neuroglancer/./src/async_computation/decode_jxl_request.ts","webpack://neuroglancer/./src/async_computation/decode_compresso.ts","webpack://neuroglancer/./src/async_computation/decode_compresso_request.ts","webpack://neuroglancer/./src/datasource/vtk/parse.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh.ts","webpack://neuroglancer/./src/async_computation/vtk_mesh_request.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2022 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet pngModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getPngModulePromise() {\n  if (pngModulePromise === undefined) {\n    pngModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./libpng.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return pngModulePromise;\n}\n\nenum PngColorSpace {\n  GRAYSCALE = 0,\n  RGB = 2,\n  PALETTE = 3,\n  GRAYSCALE_ALPHA = 4,\n  RGBA = 6,\n}\n\n// header constants\nconst magicSpec = [137, 80, 78, 71, 13, 10, 26, 10];\nconst validHeaderCode = [\"I\", \"H\", \"D\", \"R\"];\n\n// not a full implementation of read header, just the parts we need\n// References:\n// 1. Overall PNG structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Structure.html\n// 2. Header structure: http://www.libpng.org/pub/png/spec/1.2/PNG-Chunks.html\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  dataWidth: number;\n  numChannels: number;\n} {\n  function arrayEqualTrucated(a: any, b: any): boolean {\n    return a.every((val: number, idx: number) => val === b[idx]);\n  }\n\n  if (buffer.length < 8 + 4) {\n    throw new Error(`png: Invalid image size: ${buffer.length}`);\n  }\n\n  // check for header for magic sequence\n  const validMagic = arrayEqualTrucated(magicSpec, buffer);\n  if (!validMagic) {\n    throw new Error(`png: didn't match magic numbers: ${buffer.slice(0, 8)}`);\n  }\n\n  // offset into IHDR chunk so we can read more naturally\n  const bufview = new DataView(buffer.buffer, magicSpec.length);\n  const chunkLength = bufview.getUint32(0, /*littleEndian=*/ false);\n  const chunkHeaderLength = 12; // len (4), code (4), CRC (4)\n\n  if (buffer.length < magicSpec.length + chunkLength + chunkHeaderLength) {\n    throw new Error(`png: Invalid image size: ${buffer.length}`);\n  }\n\n  const chunkCode = [4, 5, 6, 7].map((i) =>\n    String.fromCharCode(bufview.getUint8(i)),\n  );\n\n  if (!arrayEqualTrucated(chunkCode, validHeaderCode)) {\n    throw new Error(`png: Invalid header code (should be IHDR): ${chunkCode}`);\n  }\n\n  const sx = bufview.getUint32(8, /*littleEndian=*/ false);\n  const sy = bufview.getUint32(12, /*littleEndian=*/ false);\n  const bitDepth = bufview.getUint8(16);\n  const colorSpace = bufview.getUint8(17);\n  const compressionMethod = bufview.getUint8(18);\n  const filterMethod = bufview.getUint8(19);\n  const interlaceMethod = bufview.getUint8(20);\n\n  if (sx === 0 || sy === 0) {\n    throw new Error(\n      `png: 0 is not a valid width or height. width: ${sx} height: ${sy}`,\n    );\n  }\n  if (compressionMethod !== 0) {\n    throw new Error(\n      `png: Invalid compression method Only 0 is supported (DEFLATE). Got: ${compressionMethod}`,\n    );\n  }\n  if (filterMethod !== 0) {\n    throw new Error(\n      `png: Invalid filter method. Only 0 (adaptive filtering) is supported. Got: ${filterMethod}`,\n    );\n  }\n  if (interlaceMethod > 1) {\n    throw new Error(\n      `png: invalid interlace method. Only 0 (no interlace) and 1 (adam7) are supported. Got: ${interlaceMethod}`,\n    );\n  }\n\n  const validBitDepths = [1, 2, 4, 8, 16];\n  if (validBitDepths.indexOf(bitDepth) === -1) {\n    throw new Error(\n      `png: invalid bit depth. Got: ${bitDepth} Valid Depths: ${validBitDepths}`,\n    );\n  }\n\n  let dataWidth = bitDepth <= 8 ? 1 : 2;\n  let numChannels = 1;\n  if (colorSpace === PngColorSpace.GRAYSCALE) {\n    // do nothing, defaults are fine.\n  } else if (colorSpace === PngColorSpace.RGB) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGB colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.PALETTE) {\n    dataWidth = 1;\n    numChannels = 3;\n  } else if (colorSpace === PngColorSpace.RGBA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for RGBA colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 4;\n  } else if (colorSpace === PngColorSpace.GRAYSCALE_ALPHA) {\n    if (bitDepth !== 8 && bitDepth !== 16) {\n      throw new Error(\n        `png: invalid bit depth for grayscale + alpha channel colorspace. Got: ${bitDepth}`,\n      );\n    }\n    numChannels = 2;\n  } else {\n    throw new Error(`png: Invalid color space: ${colorSpace}`);\n  }\n\n  return { sx, sy, dataWidth, numChannels };\n}\n\nexport async function decompressPng(\n  buffer: Uint8Array,\n  width: number | undefined,\n  height: number | undefined,\n  area: number | undefined,\n  numComponents: number | undefined,\n  bytesPerPixel: number,\n  convertToGrayscale: boolean,\n): Promise<DecodedImage> {\n  const m = await getPngModulePromise();\n  let { sx, sy, dataWidth, numChannels } = readHeader(buffer);\n\n  if (convertToGrayscale) {\n    dataWidth = 1;\n    numChannels = 1;\n  }\n\n  if (\n    (width !== undefined && sx !== width) ||\n    (height !== undefined && sy !== height) ||\n    (area !== undefined && sx * sy !== area) ||\n    (numComponents !== undefined && numComponents !== numChannels) ||\n    bytesPerPixel !== dataWidth\n  ) {\n    throw new Error(\n      `png: Image decode parameters did not match expected chunk parameters.  ` +\n        `Expected: width: ${width} height: ${height} area: ${area} ` +\n        `channels: ${numComponents} bytes per pixel: ${bytesPerPixel}.  ` +\n        `Decoded:  width: ${sx} height: ${sy} channels: ${numChannels} ` +\n        `bytes per pixel: ${dataWidth}.  ` +\n        `Convert to Grayscale? ${convertToGrayscale}`,\n    );\n  }\n\n  const nbytes = sx * sy * dataWidth * numChannels;\n  if (nbytes < 0) {\n    throw new Error(\n      `png: Failed to decode png image size. image size: ${nbytes}`,\n    );\n  }\n\n  // heap must be referenced after creating bufPtr and imagePtr because\n  // memory growth can detatch the buffer.\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.png_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n    nbytes,\n    convertToGrayscale,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(`png: Failed to decode png image. decoder code: ${code}`);\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    let image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      nbytes,\n    );\n\n    if (numChannels !== 1) {\n      image = transposeArray2d(image, sx * sy, numChannels);\n    }\n\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return {\n      width: sx,\n      height: sy,\n      numComponents: numChannels,\n      uint8Array: image.slice(0),\n    };\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2024 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\n\nconst libraryEnv = {};\n\nlet jxlModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nasync function getJxlModulePromise() {\n  if (jxlModulePromise === undefined) {\n    jxlModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./jxl_decoder.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      return m;\n    })();\n  }\n  return jxlModulePromise;\n}\n\n// header constants\n// obtained from\n// // https://github.com/libjxl/libjxl/blob/8f22cb1fb98ed27ceee59887bd291ef4d277c89d/lib/jxl/decode.cc#L118-L130\nconst magicSpec = [\n  0,\n  0,\n  0,\n  0xc,\n  \"J\".charCodeAt(0),\n  \"X\".charCodeAt(0),\n  \"L\".charCodeAt(0),\n  \" \".charCodeAt(0),\n  0xd,\n  0xa,\n  0x87,\n  0xa,\n];\n\n// not a full implementation of read header, just the parts we need\nfunction checkHeader(buffer: Uint8Array) {\n  function arrayEqualTrucated(a: any, b: any): boolean {\n    return a.every((val: number, idx: number) => val === b[idx]);\n  }\n\n  const len = buffer.length;\n  const kCodestreamMarker = 0x0a;\n\n  if (len < 8 + 4) {\n    throw new Error(`jxl: Invalid image size: ${len}`);\n  }\n\n  // JPEG XL codestream: 0xff 0x0a\n  if (len >= 1 && buffer[0] === 0xff) {\n    if (len < 2) {\n      throw new Error(`jxl: Not enough bytes. Got: ${len}`);\n    } else if (buffer[1] === kCodestreamMarker) {\n      // valid codestream\n      return;\n    } else {\n      throw new Error(`jxl: Invalid codestream.`);\n    }\n  }\n\n  // JPEG XL container\n  // check for header for magic sequence\n  const validMagic = arrayEqualTrucated(magicSpec, buffer);\n  if (!validMagic) {\n    throw new Error(`jxl: didn't match magic numbers: ${buffer.slice(0, 12)}`);\n  }\n}\n\nexport async function decompressJxl(\n  buffer: Uint8Array,\n  area: number | undefined,\n  numComponents: number | undefined,\n  bytesPerPixel: number,\n): Promise<DecodedImage> {\n  const m = await getJxlModulePromise();\n  checkHeader(buffer);\n\n  area ||= 0;\n  numComponents ||= 1;\n\n  const nbytes = area * bytesPerPixel * numComponents;\n\n  const jxlImagePtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, jxlImagePtr);\n\n  let imagePtr = null;\n\n  try {\n    const width = (m.exports.width as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n    const height = (m.exports.height as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n\n    if (width <= 0 || height <= 0) {\n      throw new Error(\n        `jxl: Decoding failed. Width (${width}) and/or height (${height}) invalid.`,\n      );\n    }\n\n    if (area !== undefined && width * height !== area) {\n      throw new Error(\n        `jxl: Expected width and height (${width} x ${height}, ${width * height}) to match area: ${area}.`,\n      );\n    }\n\n    imagePtr = (m.exports.decode as Function)(\n      jxlImagePtr,\n      buffer.byteLength,\n      nbytes,\n    );\n\n    if (imagePtr === 0) {\n      throw new Error(\"jxl: Decoding failed. Null pointer returned.\");\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      nbytes,\n    );\n\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return {\n      width: width || 0,\n      height: height || 0,\n      numComponents: numComponents || 1,\n      uint8Array: image.slice(0),\n    };\n  } finally {\n    (m.exports.free as Function)(jxlImagePtr, buffer.byteLength);\n    if (imagePtr) {\n      (m.exports.free as Function)(imagePtr, nbytes);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2021 William Silvermsith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst libraryEnv = {\n  emscripten_notify_memory_growth: () => {},\n  proc_exit: (code: number) => {\n    throw `proc exit: ${code}`;\n  },\n};\n\nlet compressoModulePromise: Promise<WebAssembly.Instance> | undefined;\n\nfunction getCompressoModulePromise() {\n  if (compressoModulePromise === undefined) {\n    compressoModulePromise = (async () => {\n      const m = (\n        await WebAssembly.instantiateStreaming(\n          fetch(new URL(\"./compresso.wasm\", import.meta.url)),\n          {\n            env: libraryEnv,\n            wasi_snapshot_preview1: libraryEnv,\n          },\n        )\n      ).instance;\n      (m.exports._initialize as Function)();\n      return m;\n    })();\n  }\n  return compressoModulePromise;\n}\n\n// not a full implementation of read header, just the parts we need\nfunction readHeader(buffer: Uint8Array): {\n  sx: number;\n  sy: number;\n  sz: number;\n  dataWidth: number;\n} {\n  // check for header \"cpso\"\n  const magic =\n    buffer[0] === \"c\".charCodeAt(0) &&\n    buffer[1] === \"p\".charCodeAt(0) &&\n    buffer[2] === \"s\".charCodeAt(0) &&\n    buffer[3] === \"o\".charCodeAt(0);\n  if (!magic) {\n    throw new Error(\"compresso: didn't match magic numbers\");\n  }\n  const format = buffer[4];\n  if (format > 1) {\n    throw new Error(\"compresso: didn't match format version\");\n  }\n\n  const bufview = new DataView(buffer.buffer, 0);\n\n  const dataWidth = buffer[5];\n  const sx = bufview.getUint16(6, /*littleEndian=*/ true);\n  const sy = bufview.getUint16(8, /*littleEndian=*/ true);\n  const sz = bufview.getUint16(10, /*littleEndian=*/ true);\n\n  return { sx, sy, sz, dataWidth };\n}\n\nexport async function decompressCompresso(\n  buffer: Uint8Array,\n): Promise<Uint8Array<ArrayBuffer>> {\n  const m = await getCompressoModulePromise();\n\n  const { sx, sy, sz, dataWidth } = readHeader(buffer);\n  const voxels = sx * sy * sz;\n  const nbytes = voxels * dataWidth;\n\n  if (nbytes < 0) {\n    throw new Error(`Failed to decode compresso image. image size: ${nbytes}`);\n  }\n\n  // heap must be referenced after creating bufPtr because\n  // memory growth can detatch the buffer.\n  const imagePtr = (m.exports.malloc as Function)(nbytes);\n  const bufPtr = (m.exports.malloc as Function)(buffer.byteLength);\n  const heap = new Uint8Array((m.exports.memory as WebAssembly.Memory).buffer);\n  heap.set(buffer, bufPtr);\n\n  const code = (m.exports.compresso_decompress as Function)(\n    bufPtr,\n    buffer.byteLength,\n    imagePtr,\n  );\n\n  try {\n    if (code !== 0) {\n      throw new Error(\n        `Failed to decode compresso image. decoder code: ${code}`,\n      );\n    }\n\n    // Likewise, we reference memory.buffer instead of heap.buffer\n    // because memory growth during decompress could have detached\n    // the buffer.\n    const image = new Uint8Array(\n      (m.exports.memory as WebAssembly.Memory).buffer,\n      imagePtr,\n      voxels * dataWidth,\n    );\n    // copy the array so it can be memory managed by JS\n    // and we can free the emscripten buffer\n    return image.slice(0);\n  } finally {\n    (m.exports.free as Function)(bufPtr);\n    (m.exports.free as Function)(imagePtr);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { AsyncComputationSpec } from \"#src/async_computation/index.js\";\n\nconst handlers = new Map<\n  string,\n  (...args: any[]) => Promise<{ value: any; transfer?: Transferable[] }>\n>();\n\nfunction setupChannel(port: DedicatedWorkerGlobalScope) {\n  self.onmessage = async (msg: any) => {\n    const { t, id, args } = msg.data as { t: string; id: number; args: any[] };\n    try {\n      const handler = handlers.get(t)!;\n      if (handler === undefined) {\n        throw new Error(\n          `Internal error: async computation operation ${JSON.stringify(t)} is not registered.  Registered handlers: ${JSON.stringify(Array.from(handlers.keys()))}`,\n        );\n      }\n      const { value, transfer } = await handler(...args);\n      port.postMessage({ id, value }, { transfer });\n    } catch (error) {\n      port.postMessage({\n        id,\n        error,\n      });\n    }\n  };\n  // Notify that the worker is ready to receive messages.\n  self.postMessage(null);\n}\n\nsetupChannel(self as DedicatedWorkerGlobalScope);\n\nexport function registerAsyncComputation<\n  Signature extends (...args: any) => any,\n>(\n  request: AsyncComputationSpec<Signature>,\n  handler: (\n    ...args: Parameters<Signature>\n  ) => Promise<{ value: ReturnType<Signature>; transfer?: Transferable[] }>,\n) {\n  handlers.set(request.id, handler);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface WritableArrayLike<T> {\n  length: number;\n  [n: number]: T;\n}\n\n/**\n * Partitions array[start:end] such that all elements for which predicate\n * returns true are before the elements for which predicate returns false.\n *\n * predicate will be called exactly once for each element in array[start:end],\n * in order.\n *\n * @returns {number} The index of the first element for which predicate returns\n * false, or end if there is no such element.\n */\nexport function partitionArray<T>(\n  array: T[],\n  start: number,\n  end: number,\n  predicate: (x: T) => boolean,\n): number {\n  while (start < end) {\n    const x = array[start];\n    if (predicate(x)) {\n      ++start;\n      continue;\n    }\n    --end;\n    array[start] = array[end];\n    array[end] = x;\n  }\n  return end;\n}\n\nexport function filterArrayInplace<T>(\n  array: T[],\n  predicate: (x: T, index: number, array: T[]) => boolean,\n) {\n  const length = array.length;\n  let outIndex = 0;\n  for (let i = 0; i < length; ++i) {\n    if (predicate(array[i], i, array)) {\n      array[outIndex] = array[i];\n      ++outIndex;\n    }\n  }\n  array.length = outIndex;\n}\n\nexport type TypedNumberArrayConstructor<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> = (\n  | typeof Int8Array<TArrayBuffer>\n  | typeof Uint8Array<TArrayBuffer>\n  | typeof Int16Array<TArrayBuffer>\n  | typeof Uint16Array<TArrayBuffer>\n  | typeof Int32Array<TArrayBuffer>\n  | typeof Uint32Array<TArrayBuffer>\n  | typeof Float32Array<TArrayBuffer>\n  | typeof Float64Array<TArrayBuffer>\n) &\n  (TArrayBuffer extends ArrayBuffer\n    ? { new (count: number): TypedNumberArray<ArrayBuffer> }\n    : Record<string, never>);\n\nexport type TypedBigIntArrayConstructor<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> = (typeof BigUint64Array<TArrayBuffer> | typeof BigInt64Array<TArrayBuffer>) &\n  (TArrayBuffer extends ArrayBuffer\n    ? { new (count: number): TypedBigIntArray<ArrayBuffer> }\n    : Record<string, never>);\n\nexport type TypedArrayConstructor<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> =\n  | TypedNumberArrayConstructor<TArrayBuffer>\n  | TypedBigIntArrayConstructor<TArrayBuffer>;\n\nexport type TypedNumberArray<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> =\n  | Int8Array<TArrayBuffer>\n  | Uint8Array<TArrayBuffer>\n  | Int16Array<TArrayBuffer>\n  | Uint16Array<TArrayBuffer>\n  | Int32Array<TArrayBuffer>\n  | Uint32Array<TArrayBuffer>\n  | Float32Array<TArrayBuffer>\n  | Float64Array<TArrayBuffer>;\n\nexport type TypedBigIntArray<\n  TArrayBuffer extends ArrayBufferLike = ArrayBufferLike,\n> = BigInt64Array<TArrayBuffer> | BigUint64Array<TArrayBuffer>;\n\nexport type TypedArray<TArrayBuffer extends ArrayBufferLike = ArrayBufferLike> =\n  TypedNumberArray<TArrayBuffer> | TypedBigIntArray<TArrayBuffer>;\n\n/**\n * Returns an array of size newSize that starts with the contents of array.\n * Either returns array if it has the correct size, or a new array with zero\n * padding at the end.\n */\nexport function maybePadArray<\n  TArrayBuffer extends ArrayBufferLike,\n  T extends TypedNumberArray<TArrayBuffer>,\n>(array: T, newSize: number): T {\n  if (array.length === newSize) {\n    return array;\n  }\n  const newArray = new (<any>array.constructor)(newSize);\n  newArray.set(array);\n  return newArray;\n}\n\nexport function getFortranOrderStrides(\n  size: ArrayLike<number>,\n  baseStride = 1,\n) {\n  const length = size.length;\n  const strides = new Array<number>(length);\n  let stride = (strides[0] = baseStride);\n  for (let i = 1; i < length; ++i) {\n    stride *= size[i - 1];\n    strides[i] = stride;\n  }\n  return strides;\n}\n\n/**\n * Converts an array of shape [majorSize, minorSize] to\n * [minorSize, majorSize].\n */\nexport function transposeArray2d<T extends TypedNumberArray>(\n  array: T,\n  majorSize: number,\n  minorSize: number,\n): T {\n  const transpose = new (<any>array.constructor)(array.length);\n  for (let i = 0; i < majorSize * minorSize; i += minorSize) {\n    for (let j = 0; j < minorSize; j++) {\n      const index: number = i / minorSize;\n      transpose[j * majorSize + index] = array[i + j];\n    }\n  }\n  return transpose;\n}\n\nexport function tile2dArray<T extends TypedNumberArray>(\n  array: T,\n  majorDimension: number,\n  minorTiles: number,\n  majorTiles: number,\n) {\n  const minorDimension = array.length / majorDimension;\n  const length = array.length * minorTiles * majorTiles;\n  const result: T = new (<any>array.constructor)(length);\n  const minorTileStride = array.length * majorTiles;\n  const majorTileStride = majorDimension;\n  const minorStride = majorDimension * majorTiles;\n  for (let minor = 0; minor < minorDimension; ++minor) {\n    for (let major = 0; major < majorDimension; ++major) {\n      const inputValue = array[minor * majorDimension + major];\n      const baseOffset = minor * minorStride + major;\n      for (let minorTile = 0; minorTile < minorTiles; ++minorTile) {\n        for (let majorTile = 0; majorTile < majorTiles; ++majorTile) {\n          result[\n            minorTile * minorTileStride +\n              majorTile * majorTileStride +\n              baseOffset\n          ] = inputValue;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nexport function binarySearch<Hay, Needle>(\n  haystack: ArrayLike<Hay>,\n  needle: Needle,\n  compare: (a: Needle, b: Hay) => number,\n  low = 0,\n  high = haystack.length,\n): number {\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return ~low;\n}\n\n/**\n * Returns the index of the element in `haystack` that is closest to `needle`, according to\n * `compare`.  If there are multiple elements that are equally close, the index of the first such\n * element encountered is returned.  If `haystack` is empty, returns -1.\n */\nexport function findClosestMatchInSortedArray<T>(\n  haystack: ArrayLike<T>,\n  needle: T,\n  compare: (a: T, b: T) => number,\n  low = 0,\n  high = haystack.length,\n): number {\n  let bestIndex = -1;\n  let bestDistance = Infinity;\n  while (low < high) {\n    const mid = (low + high - 1) >> 1;\n    const compareResult = compare(needle, haystack[mid]);\n    if (compareResult > 0) {\n      low = mid + 1;\n    } else if (compareResult < 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n    const distance = Math.abs(compareResult);\n    if (distance < bestDistance) {\n      bestDistance = distance;\n      bestIndex = mid;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Returns the first index in `[begin, end)` for which `predicate` is `true`, or returns `end` if no\n * such index exists.\n *\n * For any index `i` in `(begin, end)`, it must be the case that `predicate(i) >= predicate(i - 1)`.\n */\nexport function binarySearchLowerBound(\n  begin: number,\n  end: number,\n  predicate: (index: number) => boolean,\n): number {\n  let count = end - begin;\n  while (count > 0) {\n    const step = Math.floor(count / 2);\n    const i = begin + step;\n    if (predicate(i)) {\n      count = step;\n    } else {\n      begin = i + 1;\n      count -= step + 1;\n    }\n  }\n  return begin;\n}\n\n/**\n * Returns an array of indices into `input` that equal (under `===`) `value`.\n */\nexport function findMatchingIndices<T>(input: T[], value: T) {\n  const out: number[] = [];\n  for (let i = 0, length = input.length; i < length; ++i) {\n    if (input[i] === value) {\n      out.push(i);\n    }\n  }\n  return out;\n}\n\n/**\n * Returns an array of the indices in `[0, ..., max)` not in `indices`.\n */\nexport function getIndicesComplement(indices: number[], max: number) {\n  const mask: boolean[] = [];\n  mask.length = max;\n  for (const i of indices) {\n    mask[i] = true;\n  }\n  return findMatchingIndices(mask, undefined);\n}\n\nexport function arraysEqual<T>(a: ArrayLike<T>, b: ArrayLike<T>) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function arraysEqualWithPredicate<T>(\n  a: ArrayLike<T>,\n  b: ArrayLike<T>,\n  elementsEqual: (a: T, b: T) => boolean = (a, b) => a === b,\n) {\n  const length = a.length;\n  if (b.length !== length) return false;\n  for (let i = 0; i < length; ++i) {\n    if (!elementsEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\n\nexport function getInsertPermutation(\n  n: number,\n  sourceIndex: number,\n  targetIndex: number,\n) {\n  const newToOld: number[] = [];\n  if (targetIndex === sourceIndex) {\n    for (let i = 0; i < n; ++i) {\n      newToOld[i] = i;\n    }\n    return newToOld;\n  }\n  newToOld[targetIndex] = sourceIndex;\n  for (let oldDim = 0, newDim = 0; oldDim < n; ) {\n    if (oldDim === sourceIndex) {\n      ++oldDim;\n      continue;\n    }\n    if (newDim === targetIndex) {\n      ++newDim;\n    }\n    newToOld[newDim++] = oldDim++;\n  }\n  return newToOld;\n}\n\nexport function scatterUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let sourceIndex = 0, length = indices.length;\n    sourceIndex < length;\n    ++sourceIndex\n  ) {\n    const destIndex = indices[sourceIndex];\n    if (destIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function gatherUpdate<\n  T,\n  Dest extends { [index: number]: T },\n  Source extends { readonly [index: number]: T },\n>(dest: Dest, source: Source, indices: ArrayLike<number>): Dest {\n  for (\n    let destIndex = 0, length = indices.length;\n    destIndex < length;\n    ++destIndex\n  ) {\n    const sourceIndex = indices[destIndex];\n    if (sourceIndex === -1) continue;\n    dest[destIndex] = source[sourceIndex];\n  }\n  return dest;\n}\n\nexport function transposeNestedArrays<T>(x: T[][]) {\n  const result: T[][] = [];\n  for (\n    let outerIndex = 0, outerLength = x.length;\n    outerIndex < outerLength;\n    ++outerIndex\n  ) {\n    const inner = x[outerIndex];\n    for (\n      let innerIndex = 0, innerLength = inner.length;\n      innerIndex < innerLength;\n      ++innerIndex\n    ) {\n      let resultInner = result[innerIndex];\n      if (resultInner === undefined) {\n        resultInner = result[innerIndex] = [];\n      }\n      resultInner.push(inner[innerIndex]);\n    }\n  }\n  return result;\n}\n\nexport interface ArraySpliceOp {\n  retainCount: number;\n  deleteCount: number;\n  insertCount: number;\n}\n\nexport function spliceArray<T>(\n  array: T[],\n  splices: readonly Readonly<ArraySpliceOp>[],\n) {\n  const parts: T[][] = [];\n  let origOffset = 0;\n  for (let i = 0, numSplices = splices.length; i < numSplices; ++i) {\n    const { retainCount, deleteCount, insertCount } = splices[i];\n    if (retainCount !== 0) {\n      parts.push(array.slice(origOffset, origOffset + retainCount));\n      origOffset += retainCount;\n    }\n    origOffset += deleteCount;\n    if (insertCount !== 0) {\n      parts.push(new Array<T>(insertCount));\n    }\n  }\n  const origLength = array.length;\n  if (origOffset !== origLength) {\n    parts.push(array.slice(origOffset));\n  }\n  return new Array(0).concat(...parts);\n}\n\nexport function getMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  compare: (a: T, b: T) => number,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount && newIndex < newCount) {\n    let c: number;\n    const oldValue = oldArray[oldIndex];\n    const newValue = newArray[newIndex];\n    c = compare(oldValue, newValue);\n    if (c === 0) {\n      let retainCount = 1;\n      ++oldIndex;\n      ++newIndex;\n      while (\n        oldIndex < oldCount &&\n        newIndex < newCount &&\n        (c = compare(oldArray[oldIndex], newArray[newIndex])) === 0\n      ) {\n        ++retainCount;\n        ++oldIndex;\n        ++newIndex;\n      }\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n      continue;\n    }\n    if (c < 0) {\n      let deleteCount = 1;\n      while (\n        ++oldIndex < oldCount &&\n        (c = compare(oldArray[oldIndex], newValue)) < 0\n      ) {\n        ++deleteCount;\n      }\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n      continue;\n    }\n    if (c > 0) {\n      let insertCount = 1;\n      while (\n        ++newIndex < newCount &&\n        (c = compare(oldValue, newArray[newIndex])) > 0\n      ) {\n        ++insertCount;\n      }\n      splices.push({ retainCount: 0, deleteCount: 0, insertCount });\n    }\n  }\n  if (oldIndex < oldCount || newIndex < newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: oldCount - oldIndex,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function getFixedOrderMergeSplices<T>(\n  oldArray: readonly T[],\n  newArray: readonly T[],\n  equal: (a: T, b: T) => boolean,\n): ArraySpliceOp[] {\n  const splices: ArraySpliceOp[] = [];\n  let oldIndex = 0;\n  let newIndex = 0;\n  const oldCount = oldArray.length;\n  const newCount = newArray.length;\n  while (oldIndex < oldCount) {\n    let retainCount = 0;\n    while (\n      oldIndex < oldCount &&\n      newIndex < newCount &&\n      equal(oldArray[oldIndex], newArray[newIndex])\n    ) {\n      ++retainCount;\n      ++oldIndex;\n      ++newIndex;\n    }\n    if (retainCount !== 0) {\n      splices.push({ retainCount, deleteCount: 0, insertCount: 0 });\n    }\n    let deleteCount = 0;\n    while (\n      oldIndex < oldCount &&\n      (newIndex === newCount || !equal(oldArray[oldIndex], newArray[newIndex]))\n    ) {\n      ++deleteCount;\n      ++oldIndex;\n    }\n    if (deleteCount !== 0) {\n      splices.push({ retainCount: 0, deleteCount, insertCount: 0 });\n    }\n  }\n  if (newIndex !== newCount) {\n    splices.push({\n      retainCount: 0,\n      deleteCount: 0,\n      insertCount: newCount - newIndex,\n    });\n  }\n  return splices;\n}\n\nexport function mergeSequences(\n  aCount: number,\n  bCount: number,\n  compare: (a: number, b: number) => number,\n  aCallback: (a: number) => void,\n  bCallback: (b: number) => void,\n  abCallback: (a: number, b: number) => void,\n) {\n  let a = 0;\n  let b = 0;\n  if (aCount !== 0 && bCount !== 0) {\n    while (true) {\n      const x = compare(a, b);\n      if (x < 0) {\n        aCallback(a);\n        if (++a === aCount) break;\n      } else if (x > 0) {\n        bCallback(b);\n        if (++b === bCount) break;\n      } else {\n        abCallback(a, b);\n        ++a;\n        ++b;\n        if (a === aCount || b === bCount) break;\n      }\n    }\n  }\n  while (a < aCount) {\n    aCallback(a);\n    ++a;\n  }\n  while (b < bCount) {\n    bCallback(b);\n    ++b;\n  }\n}\n\nexport class TypedArrayBuilder<T extends TypedArray<ArrayBuffer>> {\n  data: T;\n  length: number = 0;\n  constructor(cls: { new (count: number): T }, initialCapacity: number = 16) {\n    this.data = new cls(initialCapacity);\n  }\n\n  resize(newLength: number) {\n    const { data } = this;\n    if (newLength > data.length) {\n      const newData = new (data.constructor as { new (count: number): T })(\n        Math.max(newLength, data.length * 2),\n      );\n      newData.set(data.subarray(0, this.length) as any);\n      this.data = newData;\n    }\n    this.length = newLength;\n  }\n\n  get view(): T {\n    return this.data.subarray(0, this.length) as T;\n  }\n\n  shrinkToFit() {\n    this.data = this.data.slice(0, length) as T;\n  }\n\n  clear() {\n    this.length = 0;\n  }\n\n  appendArray(other: ArrayLike<T extends TypedBigIntArray ? bigint : number>) {\n    const { length } = this;\n    this.resize(length + other.length);\n    this.data.set(other as any, length);\n  }\n\n  eraseRange(start: number, end: number) {\n    this.data.copyWithin(start, end, this.length);\n    this.length -= end - start;\n  }\n}\n","// DO NOT EDIT.  Generated from templates/sliceview/compressed_segmentation/encode_common.template.ts.\n/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { TypedArrayBuilder } from \"#src/util/array.js\";\nimport { getFortranOrderStrides } from \"#src/util/array.js\";\n\nexport const BLOCK_HEADER_SIZE = 2;\n\nexport function newCache() {\n  return new Map<string, number>();\n}\n\nconst writeEncodedRepresentation = new Function(\n  \"outputData\",\n  \"outputOffset\",\n  \"encodingBuffer\",\n  \"indexBuffer\",\n  \"encodedBits\",\n  \"encodedSize32Bits\",\n  (() => {\n    let code = \"switch (encodedBits) { case 0: break;\";\n    for (const encodedBits of [1, 2, 4, 8, 16, 32]) {\n      code += `case ${encodedBits}:`;\n      code += `for (let wordIndex = 0, elementIndex = 0; wordIndex < encodedSize32Bits; ++wordIndex) {let word = 0;`;\n      const elementsPer32Bits = 32 / encodedBits;\n      for (let element = 0; element < elementsPer32Bits; ++element) {\n        code += `word |= indexBuffer[encodingBuffer[elementIndex + ${element}]] << (${element * encodedBits});`;\n      }\n      code += `outputData[outputOffset + wordIndex] = word;elementIndex += ${elementsPer32Bits};`;\n      code += `} break;`;\n    }\n    code += \"}\";\n    return code;\n  })(),\n) as (\n  outputData: Uint32Array,\n  outputOffset: number,\n  encodingBuffer: Uint32Array,\n  indexBuffer: Uint32Array,\n  encodedBits: number,\n  encodedSize32Bits: number,\n) => void;\n\ntype ValueTableCache = Map<string, number>;\n\nexport function writeBlock(\n  output: TypedArrayBuilder<Uint32Array<ArrayBuffer>>,\n  baseOffset: number,\n  cache: ValueTableCache,\n  numBlockElements: number,\n  numUniqueValues: number,\n  valuesBuffer2: Uint32Array,\n  encodingBuffer: Uint32Array,\n  indexBuffer2: Uint32Array,\n  uint32sPerElement: number,\n): [number, number] {\n  let encodedBits: number;\n  if (numUniqueValues === 1) {\n    encodedBits = 0;\n  } else {\n    encodedBits = 1;\n    while (1 << encodedBits < numUniqueValues) {\n      encodedBits *= 2;\n    }\n  }\n  const encodedSize32bits = Math.ceil((encodedBits * numBlockElements) / 32);\n\n  const encodedValueBaseOffset = output.length;\n  let elementsToWrite = encodedSize32bits;\n\n  let writeTable = false;\n  const key = valuesBuffer2\n    .subarray(0, numUniqueValues * uint32sPerElement)\n    .join();\n  let tableOffset = cache.get(key);\n\n  if (tableOffset === undefined) {\n    writeTable = true;\n    elementsToWrite += numUniqueValues * uint32sPerElement;\n    tableOffset = encodedValueBaseOffset + encodedSize32bits - baseOffset;\n    cache.set(key, tableOffset);\n  }\n\n  output.resize(encodedValueBaseOffset + elementsToWrite);\n  const outputData = output.data;\n\n  writeEncodedRepresentation(\n    outputData,\n    encodedValueBaseOffset,\n    encodingBuffer,\n    indexBuffer2,\n    encodedBits,\n    encodedSize32bits,\n  );\n\n  // Write table\n  if (writeTable) {\n    let curOutputOff = encodedValueBaseOffset + encodedSize32bits;\n    for (\n      let i = 0, length = numUniqueValues * uint32sPerElement;\n      i < length;\n      ++i\n    ) {\n      outputData[curOutputOff++] = valuesBuffer2[i];\n    }\n  }\n  return [encodedBits, tableOffset];\n}\n\nexport function encodeChannel<T extends number | bigint>(\n  output: TypedArrayBuilder<Uint32Array<ArrayBuffer>>,\n  blockSize: ArrayLike<number>,\n  rawData: { length: number; [index: number]: T },\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides: ArrayLike<number> = getFortranOrderStrides(volumeSize, 1),\n) {\n  // Maps a sorted list of table entries in the form <low>,<high>,<low>,<high>,... to the table\n  // offset relative to baseOffset.\n  const cache = newCache();\n  const gridSize = new Array<number>(3);\n  let blockIndexSize = BLOCK_HEADER_SIZE;\n  for (let i = 0; i < 3; ++i) {\n    const curGridSize = (gridSize[i] = Math.ceil(volumeSize[i] / blockSize[i]));\n    blockIndexSize *= curGridSize;\n  }\n  const gx = gridSize[0],\n    gy = gridSize[1],\n    gz = gridSize[2];\n  const xSize = volumeSize[0],\n    ySize = volumeSize[1],\n    zSize = volumeSize[2];\n  const xBlockSize = blockSize[0],\n    yBlockSize = blockSize[1],\n    zBlockSize = blockSize[2];\n  const baseOffset = output.length;\n  let headerOffset = baseOffset;\n  const actualSize = [0, 0, 0];\n  output.resize(baseOffset + blockIndexSize);\n  const sx = inputStrides[0],\n    sy = inputStrides[1],\n    sz = inputStrides[2];\n  for (let bz = 0; bz < gz; ++bz) {\n    actualSize[2] = Math.min(zBlockSize, zSize - bz * zBlockSize);\n    for (let by = 0; by < gy; ++by) {\n      actualSize[1] = Math.min(yBlockSize, ySize - by * yBlockSize);\n      for (let bx = 0; bx < gx; ++bx) {\n        actualSize[0] = Math.min(xBlockSize, xSize - bx * xBlockSize);\n        const inputOffset =\n          bz * zBlockSize * sz + by * yBlockSize * sy + bx * xBlockSize * sx;\n        const encodedValueBaseOffset = output.length - baseOffset;\n        const [encodedBits, tableOffset] = encodeBlock(\n          rawData,\n          baseInputOffset + inputOffset,\n          inputStrides,\n          blockSize,\n          actualSize,\n          baseOffset,\n          cache,\n          output,\n        );\n        const outputData = output.data;\n        outputData[headerOffset++] = tableOffset | (encodedBits << 24);\n        outputData[headerOffset++] = encodedValueBaseOffset;\n      }\n    }\n  }\n}\n\nexport function encodeChannels<T extends number | bigint>(\n  output: TypedArrayBuilder<Uint32Array<ArrayBuffer>>,\n  blockSize: ArrayLike<number>,\n  rawData: { length: number; [index: number]: T },\n  volumeSize: ArrayLike<number>,\n  baseInputOffset: number = 0,\n  inputStrides: ArrayLike<number> = getFortranOrderStrides(volumeSize, 1),\n) {\n  const channelOffsetOutputBase = output.length;\n  const numChannels = volumeSize[3];\n  output.resize(channelOffsetOutputBase + numChannels);\n  for (let channel = 0; channel < numChannels; ++channel) {\n    output.data[channelOffsetOutputBase + channel] = output.length;\n    encodeChannel(\n      output,\n      blockSize,\n      rawData,\n      volumeSize,\n      baseInputOffset + inputStrides[3] * channel,\n      inputStrides,\n    );\n  }\n}\n\nlet tempEncodingBuffer: Uint32Array = new Uint32Array(0);\nlet tempValuesBuffer1u32: Uint32Array = tempEncodingBuffer;\nlet tempValuesBuffer2u32: Uint32Array = tempEncodingBuffer;\nlet tempValuesBuffer1u64: BigUint64Array = new BigUint64Array();\nlet tempValuesBuffer2u64: BigUint64Array = tempValuesBuffer1u64;\nlet tempIndexBuffer1: Uint32Array = tempEncodingBuffer;\nlet tempIndexBuffer2: Uint32Array = tempEncodingBuffer;\n\nexport function encodeBlock<T extends number | bigint>(\n  rawData: { length: number; [index: number]: T },\n  inputOffset: number,\n  inputStrides: ArrayLike<number>,\n  blockSize: ArrayLike<number>,\n  actualSize: ArrayLike<number>,\n  baseOffset: number,\n  cache: Map<string, number>,\n  output: TypedArrayBuilder<Uint32Array<ArrayBuffer>>,\n): [number, number] {\n  const ax = actualSize[0],\n    ay = actualSize[1],\n    az = actualSize[2];\n  const bx = blockSize[0],\n    by = blockSize[1],\n    bz = blockSize[2];\n  const sx = inputStrides[0];\n  let sy = inputStrides[1],\n    sz = inputStrides[2];\n  sz -= sy * ay;\n  sy -= sx * ax;\n  if (ax * ay * az === 0) {\n    return [0, 0];\n  }\n\n  const numBlockElements = bx * by * bz + 31; // Add padding elements.\n  if (tempEncodingBuffer.length < numBlockElements) {\n    tempEncodingBuffer = new Uint32Array(numBlockElements);\n    tempIndexBuffer1 = new Uint32Array(numBlockElements);\n    tempIndexBuffer2 = new Uint32Array(numBlockElements);\n  }\n\n  let valuesBuffer1: { length: number; [index: number]: T };\n  let valuesBuffer2: { length: number; [index: number]: T };\n  const tempValuesLength =\n    Math.ceil(\n      (numBlockElements * (rawData instanceof Uint32Array ? 1 : 2)) / 2,\n    ) * 2;\n  if (tempValuesBuffer1u32.length < tempValuesLength) {\n    tempValuesBuffer1u32 = new Uint32Array(tempValuesLength);\n    tempValuesBuffer2u32 = new Uint32Array(tempValuesLength);\n    tempValuesBuffer1u64 = new BigUint64Array(tempValuesBuffer1u32.buffer);\n    tempValuesBuffer2u64 = new BigUint64Array(tempValuesBuffer2u32.buffer);\n  }\n  if (rawData instanceof Uint32Array) {\n    valuesBuffer1 = tempValuesBuffer1u32 as any;\n    valuesBuffer2 = tempValuesBuffer2u32 as any;\n  } else {\n    valuesBuffer1 = tempValuesBuffer1u64 as any;\n    valuesBuffer2 = tempValuesBuffer2u64 as any;\n  }\n\n  const encodingBuffer = tempEncodingBuffer.subarray(0, numBlockElements);\n  encodingBuffer.fill(0);\n  const indexBuffer1 = tempIndexBuffer1;\n  const indexBuffer2 = tempIndexBuffer2;\n\n  let noAdjacentDuplicateIndex = 0;\n  {\n    let prev: T = rawData[inputOffset];\n    if (!prev) {\n      ++prev;\n    } else {\n      --prev;\n    }\n    let curInputOff = inputOffset;\n    let blockElementIndex = 0;\n    const bsy = bx - ax;\n    const bsz = bx * by - bx * ay;\n    for (let z = 0; z < az; ++z, curInputOff += sz, blockElementIndex += bsz) {\n      for (\n        let y = 0;\n        y < ay;\n        ++y, curInputOff += sy, blockElementIndex += bsy\n      ) {\n        for (let x = 0; x < ax; ++x, curInputOff += sx) {\n          const value = rawData[curInputOff];\n          if (value !== prev) {\n            prev = valuesBuffer1[noAdjacentDuplicateIndex] = value;\n            indexBuffer1[noAdjacentDuplicateIndex] = noAdjacentDuplicateIndex++;\n          }\n          encodingBuffer[blockElementIndex++] = noAdjacentDuplicateIndex;\n        }\n      }\n    }\n  }\n\n  indexBuffer1.subarray(0, noAdjacentDuplicateIndex).sort((a, b) => {\n    const aValue = valuesBuffer1[a];\n    const bValue = valuesBuffer1[b];\n    return aValue < bValue ? -1 : aValue > bValue ? 1 : 0;\n  });\n\n  let numUniqueValues = -1;\n  {\n    let prev: T = valuesBuffer1[indexBuffer1[0]];\n    if (!prev) {\n      ++prev;\n    } else {\n      --prev;\n    }\n    for (let i = 0; i < noAdjacentDuplicateIndex; ++i) {\n      const index = indexBuffer1[i];\n      const value = valuesBuffer1[index];\n      if (value !== prev) {\n        ++numUniqueValues;\n        prev = valuesBuffer2[numUniqueValues] = value;\n      }\n      indexBuffer2[index + 1] = numUniqueValues;\n    }\n    ++numUniqueValues;\n  }\n\n  return writeBlock(\n    output,\n    baseOffset,\n    cache,\n    bx * by * bz,\n    numUniqueValues,\n    tempValuesBuffer2u32,\n    encodingBuffer,\n    indexBuffer2,\n    rawData instanceof Uint32Array ? 1 : 2,\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  encodeCompressedSegmentationUint32,\n  encodeCompressedSegmentationUint64,\n} from \"#src/async_computation/encode_compressed_segmentation_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { encodeChannels as encodeChannelsUint32 } from \"#src/sliceview/compressed_segmentation/encode_uint32.js\";\nimport { encodeChannels as encodeChannelsUint64 } from \"#src/sliceview/compressed_segmentation/encode_uint64.js\";\nimport { TypedArrayBuilder } from \"#src/util/array.js\";\n\nconst tempBuffer = new TypedArrayBuilder(Uint32Array, 20000);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint32,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint32(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n\nregisterAsyncComputation(\n  encodeCompressedSegmentationUint64,\n  async (rawData, shape, blockSize) => {\n    tempBuffer.clear();\n    encodeChannelsUint64(tempBuffer, blockSize, rawData, shape);\n    return { value: tempBuffer.view };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Interface for defining transcode operations.\n */\n\nexport interface AsyncComputationSpec<Signature extends (...args: any) => any> {\n  id: string;\n  t?: Signature;\n}\n\n/**\n * Declares an asynchronous operation.\n */\nexport function asyncComputation<Signature extends (...args: any) => any>(\n  id: string,\n): AsyncComputationSpec<Signature> {\n  return { id };\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const encodeCompressedSegmentationUint32 = asyncComputation<\n  (\n    rawData: Uint32Array<ArrayBuffer>,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint32\");\n\nexport const encodeCompressedSegmentationUint64 = asyncComputation<\n  (\n    rawData: Uint32Array<ArrayBuffer>,\n    shape: ArrayLike<number>,\n    blockSize: ArrayLike<number>,\n  ) => Uint32Array\n>(\"encodeCompressedSegmentationUint64\");\n","/**\n * @license\n * Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction loadURLasArrayBuffer(path, callback) {\n  if (path.indexOf(\"data:\") === 0) {\n    var offset = path.indexOf(\"base64,\") + 7;\n    var data = atob(path.substring(offset));\n    var arr = new Uint8Array(data.length);\n    for (var i = data.length - 1; i >= 0; i--) {\n      arr[i] = data.charCodeAt(i);\n    }\n    callback(arr.buffer);\n    return;\n  }\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", path, true);\n  xhr.responseType = \"arraybuffer\";\n  xhr.onload = function () {\n    callback(xhr.response);\n  };\n  xhr.send(null);\n}\n\nvar JpegImage = (function jpegImage() {\n  function JpegImage() {\n    this._src = null;\n    this._parser = new PDFJS.JpegImage();\n    this.onload = null;\n  }\n  JpegImage.prototype = {\n    get src() {\n      return this._src;\n    },\n    set src(value) {\n      this.load(value);\n    },\n    get width() {\n      return this._parser.width;\n    },\n    get height() {\n      return this._parser.height;\n    },\n    load: function load(path) {\n      this._src = path;\n      loadURLasArrayBuffer(\n        path,\n        function (buffer) {\n          this.parse(new Uint8Array(buffer));\n          if (this.onload) {\n            this.onload();\n          }\n        }.bind(this),\n      );\n    },\n    parse: function (data) {\n      this._parser.parse(data);\n    },\n    getData: function (width, height) {\n      return this._parser.getData(width, height, false);\n    },\n    copyToImageData: function copyToImageData(imageData) {\n      if (this._parser.numComponents === 2 || this._parser.numComponents > 4) {\n        throw new Error(\"Unsupported amount of components\");\n      }\n      var width = imageData.width,\n        height = imageData.height;\n      var imageDataBytes = width * height * 4;\n      var imageDataArray = imageData.data;\n      var i, j;\n      if (this._parser.numComponents === 1) {\n        var values = this._parser.getData(width, height, false);\n        for (i = 0, j = 0; i < imageDataBytes; ) {\n          var value = values[j++];\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = value;\n          imageDataArray[i++] = 255;\n        }\n        return;\n      }\n      var rgb = this._parser.getData(width, height, true);\n      for (i = 0, j = 0; i < imageDataBytes; ) {\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = rgb[j++];\n        imageDataArray[i++] = 255;\n      }\n    },\n  };\n  return JpegImage;\n})();\n\nvar PDFJS;\n\n(function (PDFJS) {\n  \"use strict\";\n  var JpegImage = (function jpegImage() {\n    var dctZigZag = new Uint8Array([\n      0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33,\n      40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43,\n      36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53,\n      60, 61, 54, 47, 55, 62, 63,\n    ]);\n    var dctCos1 = 4017;\n    var dctSin1 = 799;\n    var dctCos3 = 3406;\n    var dctSin3 = 2276;\n    var dctCos6 = 1567;\n    var dctSin6 = 3784;\n    var dctSqrt2 = 5793;\n    var dctSqrt1d2 = 2896;\n    function constructor() {}\n    function buildHuffmanTable(codeLengths, values) {\n      var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n      while (length > 0 && !codeLengths[length - 1]) {\n        length--;\n      }\n      code.push({\n        children: [],\n        index: 0,\n      });\n      var p = code[0],\n        q;\n      for (i = 0; i < length; i++) {\n        for (j = 0; j < codeLengths[i]; j++) {\n          p = code.pop();\n          p.children[p.index] = values[k];\n          while (p.index > 0) {\n            p = code.pop();\n          }\n          p.index++;\n          code.push(p);\n          while (code.length <= i) {\n            code.push(\n              (q = {\n                children: [],\n                index: 0,\n              }),\n            );\n            p.children[p.index] = q.children;\n            p = q;\n          }\n          k++;\n        }\n        if (i + 1 < length) {\n          code.push(\n            (q = {\n              children: [],\n              index: 0,\n            }),\n          );\n          p.children[p.index] = q.children;\n          p = q;\n        }\n      }\n      return code[0].children;\n    }\n    function getBlockBufferOffset(component, row, col) {\n      return 64 * ((component.blocksPerLine + 1) * row + col);\n    }\n    function decodeScan(\n      data,\n      offset,\n      frame,\n      components,\n      resetInterval,\n      spectralStart,\n      spectralEnd,\n      successivePrev,\n      successive,\n    ) {\n      var precision = frame.precision;\n      var samplesPerLine = frame.samplesPerLine;\n      var scanLines = frame.scanLines;\n      var mcusPerLine = frame.mcusPerLine;\n      var progressive = frame.progressive;\n      var maxH = frame.maxH,\n        maxV = frame.maxV;\n      var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n      function readBit() {\n        if (bitsCount > 0) {\n          bitsCount--;\n          return (bitsData >> bitsCount) & 1;\n        }\n        bitsData = data[offset++];\n        if (bitsData === 255) {\n          var nextByte = data[offset++];\n          if (nextByte) {\n            throw (\n              \"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16)\n            );\n          }\n        }\n        bitsCount = 7;\n        return bitsData >>> 7;\n      }\n      function decodeHuffman(tree) {\n        var node = tree;\n        while (true) {\n          node = node[readBit()];\n          if (typeof node === \"number\") {\n            return node;\n          }\n          if (typeof node !== \"object\") {\n            throw \"invalid huffman sequence\";\n          }\n        }\n      }\n      function receive(length) {\n        var n = 0;\n        while (length > 0) {\n          n = (n << 1) | readBit();\n          length--;\n        }\n        return n;\n      }\n      function receiveAndExtend(length) {\n        if (length === 1) {\n          return readBit() === 1 ? 1 : -1;\n        }\n        var n = receive(length);\n        if (n >= 1 << (length - 1)) {\n          return n;\n        }\n        return n + (-1 << length) + 1;\n      }\n      function decodeBaseline(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t);\n        component.blockData[offset] = component.pred += diff;\n        var k = 1;\n        while (k < 64) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] = receiveAndExtend(s);\n          k++;\n        }\n      }\n      function decodeDCFirst(component, offset) {\n        var t = decodeHuffman(component.huffmanTableDC);\n        var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n        component.blockData[offset] = component.pred += diff;\n      }\n      function decodeDCSuccessive(component, offset) {\n        component.blockData[offset] |= readBit() << successive;\n      }\n      var eobrun = 0;\n      function decodeACFirst(component, offset) {\n        if (eobrun > 0) {\n          eobrun--;\n          return;\n        }\n        var k = spectralStart,\n          e = spectralEnd;\n        while (k <= e) {\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15,\n            r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r) - 1;\n              break;\n            }\n            k += 16;\n            continue;\n          }\n          k += r;\n          var z = dctZigZag[k];\n          component.blockData[offset + z] =\n            receiveAndExtend(s) * (1 << successive);\n          k++;\n        }\n      }\n      var successiveACState = 0,\n        successiveACNextValue;\n      function decodeACSuccessive(component, offset) {\n        var k = spectralStart;\n        var e = spectralEnd;\n        var r = 0;\n        var s;\n        var rs;\n        while (k <= e) {\n          var z = dctZigZag[k];\n          switch (successiveACState) {\n            case 0:\n              rs = decodeHuffman(component.huffmanTableAC);\n              s = rs & 15;\n              r = rs >> 4;\n              if (s === 0) {\n                if (r < 15) {\n                  eobrun = receive(r) + (1 << r);\n                  successiveACState = 4;\n                } else {\n                  r = 16;\n                  successiveACState = 1;\n                }\n              } else {\n                if (s !== 1) {\n                  throw \"invalid ACn encoding\";\n                }\n                successiveACNextValue = receiveAndExtend(s);\n                successiveACState = r ? 2 : 3;\n              }\n              continue;\n\n            case 1:\n            case 2:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                r--;\n                if (r === 0) {\n                  successiveACState = successiveACState === 2 ? 3 : 0;\n                }\n              }\n              break;\n\n            case 3:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              } else {\n                component.blockData[offset + z] =\n                  successiveACNextValue << successive;\n                successiveACState = 0;\n              }\n              break;\n\n            case 4:\n              if (component.blockData[offset + z]) {\n                component.blockData[offset + z] += readBit() << successive;\n              }\n              break;\n          }\n          k++;\n        }\n        if (successiveACState === 4) {\n          eobrun--;\n          if (eobrun === 0) {\n            successiveACState = 0;\n          }\n        }\n      }\n      function decodeMcu(component, decode, mcu, row, col) {\n        var mcuRow = (mcu / mcusPerLine) | 0;\n        var mcuCol = mcu % mcusPerLine;\n        var blockRow = mcuRow * component.v + row;\n        var blockCol = mcuCol * component.h + col;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      function decodeBlock(component, decode, mcu) {\n        var blockRow = (mcu / component.blocksPerLine) | 0;\n        var blockCol = mcu % component.blocksPerLine;\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        decode(component, offset);\n      }\n      var componentsLength = components.length;\n      var component, i, j, k, n;\n      var decodeFn;\n      if (progressive) {\n        if (spectralStart === 0) {\n          decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n        } else {\n          decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n        }\n      } else {\n        decodeFn = decodeBaseline;\n      }\n      var mcu = 0,\n        marker;\n      var mcuExpected;\n      if (componentsLength === 1) {\n        mcuExpected =\n          components[0].blocksPerLine * components[0].blocksPerColumn;\n      } else {\n        mcuExpected = mcusPerLine * frame.mcusPerColumn;\n      }\n      if (!resetInterval) {\n        resetInterval = mcuExpected;\n      }\n      var h, v;\n      while (mcu < mcuExpected) {\n        for (i = 0; i < componentsLength; i++) {\n          components[i].pred = 0;\n        }\n        eobrun = 0;\n        if (componentsLength === 1) {\n          component = components[0];\n          for (n = 0; n < resetInterval; n++) {\n            decodeBlock(component, decodeFn, mcu);\n            mcu++;\n          }\n        } else {\n          for (n = 0; n < resetInterval; n++) {\n            for (i = 0; i < componentsLength; i++) {\n              component = components[i];\n              h = component.h;\n              v = component.v;\n              for (j = 0; j < v; j++) {\n                for (k = 0; k < h; k++) {\n                  decodeMcu(component, decodeFn, mcu, j, k);\n                }\n              }\n            }\n            mcu++;\n          }\n        }\n        bitsCount = 0;\n        marker = (data[offset] << 8) | data[offset + 1];\n        if (marker <= 65280) {\n          throw \"marker was not found\";\n        }\n        if (marker >= 65488 && marker <= 65495) {\n          offset += 2;\n        } else {\n          break;\n        }\n      }\n      return offset - startOffset;\n    }\n    function quantizeAndInverse(component, blockBufferOffset, p) {\n      var qt = component.quantizationTable,\n        blockData = component.blockData;\n      var v0, v1, v2, v3, v4, v5, v6, v7;\n      var p0, p1, p2, p3, p4, p5, p6, p7;\n      var t;\n      for (var row = 0; row < 64; row += 8) {\n        p0 = blockData[blockBufferOffset + row];\n        p1 = blockData[blockBufferOffset + row + 1];\n        p2 = blockData[blockBufferOffset + row + 2];\n        p3 = blockData[blockBufferOffset + row + 3];\n        p4 = blockData[blockBufferOffset + row + 4];\n        p5 = blockData[blockBufferOffset + row + 5];\n        p6 = blockData[blockBufferOffset + row + 6];\n        p7 = blockData[blockBufferOffset + row + 7];\n        p0 *= qt[row];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 512) >> 10;\n          p[row] = t;\n          p[row + 1] = t;\n          p[row + 2] = t;\n          p[row + 3] = t;\n          p[row + 4] = t;\n          p[row + 5] = t;\n          p[row + 6] = t;\n          p[row + 7] = t;\n          continue;\n        }\n        p1 *= qt[row + 1];\n        p2 *= qt[row + 2];\n        p3 *= qt[row + 3];\n        p4 *= qt[row + 4];\n        p5 *= qt[row + 5];\n        p6 *= qt[row + 6];\n        p7 *= qt[row + 7];\n        v0 = (dctSqrt2 * p0 + 128) >> 8;\n        v1 = (dctSqrt2 * p4 + 128) >> 8;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 128) >> 8;\n        v5 = p3 << 4;\n        v6 = p5 << 4;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p[row] = v0 + v7;\n        p[row + 7] = v0 - v7;\n        p[row + 1] = v1 + v6;\n        p[row + 6] = v1 - v6;\n        p[row + 2] = v2 + v5;\n        p[row + 5] = v2 - v5;\n        p[row + 3] = v3 + v4;\n        p[row + 4] = v3 - v4;\n      }\n      for (var col = 0; col < 8; ++col) {\n        p0 = p[col];\n        p1 = p[col + 8];\n        p2 = p[col + 16];\n        p3 = p[col + 24];\n        p4 = p[col + 32];\n        p5 = p[col + 40];\n        p6 = p[col + 48];\n        p7 = p[col + 56];\n        if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n          t = (dctSqrt2 * p0 + 8192) >> 14;\n          t = t < -2040 ? 0 : t >= 2024 ? 255 : (t + 2056) >> 4;\n          blockData[blockBufferOffset + col] = t;\n          blockData[blockBufferOffset + col + 8] = t;\n          blockData[blockBufferOffset + col + 16] = t;\n          blockData[blockBufferOffset + col + 24] = t;\n          blockData[blockBufferOffset + col + 32] = t;\n          blockData[blockBufferOffset + col + 40] = t;\n          blockData[blockBufferOffset + col + 48] = t;\n          blockData[blockBufferOffset + col + 56] = t;\n          continue;\n        }\n        v0 = (dctSqrt2 * p0 + 2048) >> 12;\n        v1 = (dctSqrt2 * p4 + 2048) >> 12;\n        v2 = p2;\n        v3 = p6;\n        v4 = (dctSqrt1d2 * (p1 - p7) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p1 + p7) + 2048) >> 12;\n        v5 = p3;\n        v6 = p5;\n        v0 = ((v0 + v1 + 1) >> 1) + 4112;\n        v1 = v0 - v1;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = v4 - v6;\n        v7 = (v7 + v5 + 1) >> 1;\n        v5 = v7 - v5;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = v0 - v3;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = v1 - v2;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n        p0 = v0 + v7;\n        p7 = v0 - v7;\n        p1 = v1 + v6;\n        p6 = v1 - v6;\n        p2 = v2 + v5;\n        p5 = v2 - v5;\n        p3 = v3 + v4;\n        p4 = v3 - v4;\n        p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n        p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n        p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n        p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n        p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n        p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n        p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n        p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n        blockData[blockBufferOffset + col] = p0;\n        blockData[blockBufferOffset + col + 8] = p1;\n        blockData[blockBufferOffset + col + 16] = p2;\n        blockData[blockBufferOffset + col + 24] = p3;\n        blockData[blockBufferOffset + col + 32] = p4;\n        blockData[blockBufferOffset + col + 40] = p5;\n        blockData[blockBufferOffset + col + 48] = p6;\n        blockData[blockBufferOffset + col + 56] = p7;\n      }\n    }\n    function buildComponentData(frame, component) {\n      var blocksPerLine = component.blocksPerLine;\n      var blocksPerColumn = component.blocksPerColumn;\n      var computationBuffer = new Int16Array(64);\n      for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n        for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n          var offset = getBlockBufferOffset(component, blockRow, blockCol);\n          quantizeAndInverse(component, offset, computationBuffer);\n        }\n      }\n      return component.blockData;\n    }\n    function clamp0to255(a) {\n      return a <= 0 ? 0 : a >= 255 ? 255 : a;\n    }\n    constructor.prototype = {\n      parse: function parse(data) {\n        function readUint16() {\n          var value = (data[offset] << 8) | data[offset + 1];\n          offset += 2;\n          return value;\n        }\n        function readDataBlock() {\n          var length = readUint16();\n          var array = data.subarray(offset, offset + length - 2);\n          offset += array.length;\n          return array;\n        }\n        function prepareComponents(frame) {\n          var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n          var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n          for (var i = 0; i < frame.components.length; i++) {\n            component = frame.components[i];\n            var blocksPerLine = Math.ceil(\n              (Math.ceil(frame.samplesPerLine / 8) * component.h) / frame.maxH,\n            );\n            var blocksPerColumn = Math.ceil(\n              (Math.ceil(frame.scanLines / 8) * component.v) / frame.maxV,\n            );\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksBufferSize =\n              64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n            component.blockData = new Int16Array(blocksBufferSize);\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n          }\n          frame.mcusPerLine = mcusPerLine;\n          frame.mcusPerColumn = mcusPerColumn;\n        }\n        var offset = 0,\n          length = data.length;\n        var jfif = null;\n        var adobe = null;\n        var pixels = null;\n        var frame, resetInterval;\n        var quantizationTables = [];\n        var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n        var fileMarker = readUint16();\n        if (fileMarker !== 65496) {\n          throw \"SOI not found\";\n        }\n        fileMarker = readUint16();\n        while (fileMarker !== 65497) {\n          var i, j, l;\n          switch (fileMarker) {\n            case 65504:\n            case 65505:\n            case 65506:\n            case 65507:\n            case 65508:\n            case 65509:\n            case 65510:\n            case 65511:\n            case 65512:\n            case 65513:\n            case 65514:\n            case 65515:\n            case 65516:\n            case 65517:\n            case 65518:\n            case 65519:\n            case 65534:\n              var appData = readDataBlock();\n              if (fileMarker === 65504) {\n                if (\n                  appData[0] === 74 &&\n                  appData[1] === 70 &&\n                  appData[2] === 73 &&\n                  appData[3] === 70 &&\n                  appData[4] === 0\n                ) {\n                  jfif = {\n                    version: {\n                      major: appData[5],\n                      minor: appData[6],\n                    },\n                    densityUnits: appData[7],\n                    xDensity: (appData[8] << 8) | appData[9],\n                    yDensity: (appData[10] << 8) | appData[11],\n                    thumbWidth: appData[12],\n                    thumbHeight: appData[13],\n                    thumbData: appData.subarray(\n                      14,\n                      14 + 3 * appData[12] * appData[13],\n                    ),\n                  };\n                }\n              }\n              if (fileMarker === 65518) {\n                if (\n                  appData[0] === 65 &&\n                  appData[1] === 100 &&\n                  appData[2] === 111 &&\n                  appData[3] === 98 &&\n                  appData[4] === 101 &&\n                  appData[5] === 0\n                ) {\n                  adobe = {\n                    version: appData[6],\n                    flags0: (appData[7] << 8) | appData[8],\n                    flags1: (appData[9] << 8) | appData[10],\n                    transformCode: appData[11],\n                  };\n                }\n              }\n              break;\n\n            case 65499:\n              var quantizationTablesLength = readUint16();\n              var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n              var z;\n              while (offset < quantizationTablesEnd) {\n                var quantizationTableSpec = data[offset++];\n                var tableData = new Uint16Array(64);\n                if (quantizationTableSpec >> 4 === 0) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = data[offset++];\n                  }\n                } else if (quantizationTableSpec >> 4 === 1) {\n                  for (j = 0; j < 64; j++) {\n                    z = dctZigZag[j];\n                    tableData[z] = readUint16();\n                  }\n                } else {\n                  throw \"DQT: invalid table spec\";\n                }\n                quantizationTables[quantizationTableSpec & 15] = tableData;\n              }\n              break;\n\n            case 65472:\n            case 65473:\n            case 65474:\n              if (frame) {\n                throw \"Only single frame JPEGs supported\";\n              }\n              readUint16();\n              frame = {};\n              frame.extended = fileMarker === 65473;\n              frame.progressive = fileMarker === 65474;\n              frame.precision = data[offset++];\n              frame.scanLines = readUint16();\n              frame.samplesPerLine = readUint16();\n              frame.components = [];\n              frame.componentIds = {};\n              var componentsCount = data[offset++],\n                componentId;\n              var maxH = 0,\n                maxV = 0;\n              for (i = 0; i < componentsCount; i++) {\n                componentId = data[offset];\n                var h = data[offset + 1] >> 4;\n                var v = data[offset + 1] & 15;\n                if (maxH < h) {\n                  maxH = h;\n                }\n                if (maxV < v) {\n                  maxV = v;\n                }\n                var qId = data[offset + 2];\n                l = frame.components.push({\n                  h: h,\n                  v: v,\n                  quantizationTable: quantizationTables[qId],\n                });\n                frame.componentIds[componentId] = l - 1;\n                offset += 3;\n              }\n              frame.maxH = maxH;\n              frame.maxV = maxV;\n              prepareComponents(frame);\n              break;\n\n            case 65476:\n              var huffmanLength = readUint16();\n              for (i = 2; i < huffmanLength; ) {\n                var huffmanTableSpec = data[offset++];\n                var codeLengths = new Uint8Array(16);\n                var codeLengthSum = 0;\n                for (j = 0; j < 16; j++, offset++) {\n                  codeLengthSum += codeLengths[j] = data[offset];\n                }\n                var huffmanValues = new Uint8Array(codeLengthSum);\n                for (j = 0; j < codeLengthSum; j++, offset++) {\n                  huffmanValues[j] = data[offset];\n                }\n                i += 17 + codeLengthSum;\n                (huffmanTableSpec >> 4 === 0\n                  ? huffmanTablesDC\n                  : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(\n                  codeLengths,\n                  huffmanValues,\n                );\n              }\n              break;\n\n            case 65501:\n              readUint16();\n              resetInterval = readUint16();\n              break;\n\n            case 65498:\n              var scanLength = readUint16();\n              var selectorsCount = data[offset++];\n              var components = [],\n                component;\n              for (i = 0; i < selectorsCount; i++) {\n                var componentIndex = frame.componentIds[data[offset++]];\n                component = frame.components[componentIndex];\n                var tableSpec = data[offset++];\n                component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n                component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n                components.push(component);\n              }\n              var spectralStart = data[offset++];\n              var spectralEnd = data[offset++];\n              var successiveApproximation = data[offset++];\n              var processed = decodeScan(\n                data,\n                offset,\n                frame,\n                components,\n                resetInterval,\n                spectralStart,\n                spectralEnd,\n                successiveApproximation >> 4,\n                successiveApproximation & 15,\n              );\n              offset += processed;\n              break;\n\n            case 65535:\n              if (data[offset] !== 255) {\n                offset--;\n              }\n              break;\n\n            default:\n              if (\n                data[offset - 3] === 255 &&\n                data[offset - 2] >= 192 &&\n                data[offset - 2] <= 254\n              ) {\n                offset -= 3;\n                break;\n              }\n              throw \"unknown JPEG marker \" + fileMarker.toString(16);\n          }\n          fileMarker = readUint16();\n        }\n        this.width = frame.samplesPerLine;\n        this.height = frame.scanLines;\n        this.jfif = jfif;\n        this.adobe = adobe;\n        this.components = [];\n        for (i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          this.components.push({\n            output: buildComponentData(frame, component),\n            scaleX: component.h / frame.maxH,\n            scaleY: component.v / frame.maxV,\n            blocksPerLine: component.blocksPerLine,\n            blocksPerColumn: component.blocksPerColumn,\n          });\n        }\n        this.numComponents = this.components.length;\n      },\n      _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n        var scaleX = this.width / width,\n          scaleY = this.height / height;\n        var component, componentScaleX, componentScaleY, blocksPerScanline;\n        var x, y, i, j, k;\n        var index;\n        var offset = 0;\n        var output;\n        var numComponents = this.components.length;\n        var dataLength = width * height * numComponents;\n        var data = new Uint8Array(dataLength);\n        var xScaleBlockOffset = new Uint32Array(width);\n        var mask3LSB = 4294967288;\n        for (i = 0; i < numComponents; i++) {\n          component = this.components[i];\n          componentScaleX = component.scaleX * scaleX;\n          componentScaleY = component.scaleY * scaleY;\n          offset = i;\n          output = component.output;\n          blocksPerScanline = (component.blocksPerLine + 1) << 3;\n          for (x = 0; x < width; x++) {\n            j = 0 | (x * componentScaleX);\n            xScaleBlockOffset[x] = ((j & mask3LSB) << 3) | (j & 7);\n          }\n          for (y = 0; y < height; y++) {\n            j = 0 | (y * componentScaleY);\n            index = (blocksPerScanline * (j & mask3LSB)) | ((j & 7) << 3);\n            for (x = 0; x < width; x++) {\n              data[offset] = output[index + xScaleBlockOffset[x]];\n              offset += numComponents;\n            }\n          }\n        }\n        var transform = this.decodeTransform;\n        if (transform) {\n          for (i = 0; i < dataLength; ) {\n            for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n              data[i] = ((data[i] * transform[k]) >> 8) + transform[k + 1];\n            }\n          }\n        }\n        return data;\n      },\n      _isColorConversionNeeded: function isColorConversionNeeded() {\n        if (this.adobe && this.adobe.transformCode) {\n          return true;\n        } else if (this.numComponents === 3) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      _convertYccToRgb: function convertYccToRgb(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 3) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n          data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n          data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertYcckToRgb: function convertYcckToRgb(data) {\n        var Y, Cb, Cr, k;\n        var offset = 0;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          k = data[i + 3];\n          var r =\n            -122.67195406894 +\n            Cb *\n              (-660635669420364e-19 * Cb +\n                0.000437130475926232 * Cr -\n                54080610064599e-18 * Y +\n                0.00048449797120281 * k -\n                0.154362151871126) +\n            Cr *\n              (-0.000957964378445773 * Cr +\n                0.000817076911346625 * Y -\n                0.00477271405408747 * k +\n                1.53380253221734) +\n            Y *\n              (0.000961250184130688 * Y -\n                0.00266257332283933 * k +\n                0.48357088451265) +\n            k * (-0.000336197177618394 * k + 0.484791561490776);\n          var g =\n            107.268039397724 +\n            Cb *\n              (219927104525741e-19 * Cb -\n                0.000640992018297945 * Cr +\n                0.000659397001245577 * Y +\n                0.000426105652938837 * k -\n                0.176491792462875) +\n            Cr *\n              (-0.000778269941513683 * Cr +\n                0.00130872261408275 * Y +\n                0.000770482631801132 * k -\n                0.151051492775562) +\n            Y *\n              (0.00126935368114843 * Y -\n                0.00265090189010898 * k +\n                0.25802910206845) +\n            k * (-0.000318913117588328 * k - 0.213742400323665);\n          var b =\n            -20.810012546947 +\n            Cb *\n              (-0.000570115196973677 * Cb -\n                263409051004589e-19 * Cr +\n                0.0020741088115012 * Y -\n                0.00288260236853442 * k +\n                0.814272968359295) +\n            Cr *\n              (-153496057440975e-19 * Cr -\n                0.000132689043961446 * Y +\n                0.000560833691242812 * k -\n                0.195152027534049) +\n            Y *\n              (0.00174418132927582 * Y -\n                0.00255243321439347 * k +\n                0.116935020465145) +\n            k * (-0.000343531996510555 * k + 0.24165260232407);\n          data[offset++] = clamp0to255(r);\n          data[offset++] = clamp0to255(g);\n          data[offset++] = clamp0to255(b);\n        }\n        return data;\n      },\n      _convertYcckToCmyk: function convertYcckToCmyk(data) {\n        var Y, Cb, Cr;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          Y = data[i];\n          Cb = data[i + 1];\n          Cr = data[i + 2];\n          data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n          data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n          data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n        }\n        return data;\n      },\n      _convertCmykToRgb: function convertCmykToRgb(data) {\n        var c, m, y, k;\n        var offset = 0;\n        var min = -255 * 255 * 255;\n        var scale = 1 / 255 / 255;\n        for (var i = 0, length = data.length; i < length; i += 4) {\n          c = data[i];\n          m = data[i + 1];\n          y = data[i + 2];\n          k = data[i + 3];\n          var r =\n            c *\n              (-4.387332384609988 * c +\n                54.48615194189176 * m +\n                18.82290502165302 * y +\n                212.25662451639585 * k -\n                72734.4411664936) +\n            m *\n              (1.7149763477362134 * m -\n                5.6096736904047315 * y -\n                17.873870861415444 * k -\n                1401.7366389350734) +\n            y *\n              (-2.5217340131683033 * y -\n                21.248923337353073 * k +\n                4465.541406466231) -\n            k * (21.86122147463605 * k + 48317.86113160301);\n          var g =\n            c *\n              (8.841041422036149 * c +\n                60.118027045597366 * m +\n                6.871425592049007 * y +\n                31.159100130055922 * k -\n                20220.756542821975) +\n            m *\n              (-15.310361306967817 * m +\n                17.575251261109482 * y +\n                131.35250912493976 * k -\n                48691.05921601825) +\n            y *\n              (4.444339102852739 * y +\n                9.8632861493405 * k -\n                6341.191035517494) -\n            k * (20.737325471181034 * k + 47890.15695978492);\n          var b =\n            c *\n              (0.8842522430003296 * c +\n                8.078677503112928 * m +\n                30.89978309703729 * y -\n                0.23883238689178934 * k -\n                3616.812083916688) +\n            m *\n              (10.49593273432072 * m +\n                63.02378494754052 * y +\n                50.606957656360734 * k -\n                28620.90484698408) +\n            y *\n              (0.03296041114873217 * y +\n                115.60384449646641 * k -\n                49363.43385999684) -\n            k * (22.33816807309886 * k + 45932.16563550634);\n          data[offset++] = r >= 0 ? 255 : r <= min ? 0 : (255 + r * scale) | 0;\n          data[offset++] = g >= 0 ? 255 : g <= min ? 0 : (255 + g * scale) | 0;\n          data[offset++] = b >= 0 ? 255 : b <= min ? 0 : (255 + b * scale) | 0;\n        }\n        return data;\n      },\n      getData: function getData(width, height, forceRGBoutput) {\n        if (this.numComponents > 4) {\n          throw \"Unsupported color mode\";\n        }\n        var data = this._getLinearizedBlockData(width, height);\n        if (this.numComponents === 3) {\n          return this._convertYccToRgb(data);\n        } else if (this.numComponents === 4) {\n          if (this._isColorConversionNeeded()) {\n            if (forceRGBoutput) {\n              return this._convertYcckToRgb(data);\n            } else {\n              return this._convertYcckToCmyk(data);\n            }\n          } else if (forceRGBoutput) {\n            return this._convertCmykToRgb(data);\n          }\n        }\n        return data;\n      },\n    };\n    return constructor;\n  })();\n  (\"use strict\");\n  var ArithmeticDecoder = (function ArithmeticDecoderClosure() {\n    var QeTable = [\n      {\n        qe: 22017,\n        nmps: 1,\n        nlps: 1,\n        switchFlag: 1,\n      },\n      {\n        qe: 13313,\n        nmps: 2,\n        nlps: 6,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 3,\n        nlps: 9,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 4,\n        nlps: 12,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 5,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 38,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 7,\n        nlps: 6,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 8,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 9,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 10,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 11,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 12,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 13,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 29,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 15,\n        nlps: 14,\n        switchFlag: 1,\n      },\n      {\n        qe: 21505,\n        nmps: 16,\n        nlps: 14,\n        switchFlag: 0,\n      },\n      {\n        qe: 20737,\n        nmps: 17,\n        nlps: 15,\n        switchFlag: 0,\n      },\n      {\n        qe: 18433,\n        nmps: 18,\n        nlps: 16,\n        switchFlag: 0,\n      },\n      {\n        qe: 14337,\n        nmps: 19,\n        nlps: 17,\n        switchFlag: 0,\n      },\n      {\n        qe: 13313,\n        nmps: 20,\n        nlps: 18,\n        switchFlag: 0,\n      },\n      {\n        qe: 12289,\n        nmps: 21,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 10241,\n        nmps: 22,\n        nlps: 19,\n        switchFlag: 0,\n      },\n      {\n        qe: 9217,\n        nmps: 23,\n        nlps: 20,\n        switchFlag: 0,\n      },\n      {\n        qe: 8705,\n        nmps: 24,\n        nlps: 21,\n        switchFlag: 0,\n      },\n      {\n        qe: 7169,\n        nmps: 25,\n        nlps: 22,\n        switchFlag: 0,\n      },\n      {\n        qe: 6145,\n        nmps: 26,\n        nlps: 23,\n        switchFlag: 0,\n      },\n      {\n        qe: 5633,\n        nmps: 27,\n        nlps: 24,\n        switchFlag: 0,\n      },\n      {\n        qe: 5121,\n        nmps: 28,\n        nlps: 25,\n        switchFlag: 0,\n      },\n      {\n        qe: 4609,\n        nmps: 29,\n        nlps: 26,\n        switchFlag: 0,\n      },\n      {\n        qe: 4353,\n        nmps: 30,\n        nlps: 27,\n        switchFlag: 0,\n      },\n      {\n        qe: 2753,\n        nmps: 31,\n        nlps: 28,\n        switchFlag: 0,\n      },\n      {\n        qe: 2497,\n        nmps: 32,\n        nlps: 29,\n        switchFlag: 0,\n      },\n      {\n        qe: 2209,\n        nmps: 33,\n        nlps: 30,\n        switchFlag: 0,\n      },\n      {\n        qe: 1313,\n        nmps: 34,\n        nlps: 31,\n        switchFlag: 0,\n      },\n      {\n        qe: 1089,\n        nmps: 35,\n        nlps: 32,\n        switchFlag: 0,\n      },\n      {\n        qe: 673,\n        nmps: 36,\n        nlps: 33,\n        switchFlag: 0,\n      },\n      {\n        qe: 545,\n        nmps: 37,\n        nlps: 34,\n        switchFlag: 0,\n      },\n      {\n        qe: 321,\n        nmps: 38,\n        nlps: 35,\n        switchFlag: 0,\n      },\n      {\n        qe: 273,\n        nmps: 39,\n        nlps: 36,\n        switchFlag: 0,\n      },\n      {\n        qe: 133,\n        nmps: 40,\n        nlps: 37,\n        switchFlag: 0,\n      },\n      {\n        qe: 73,\n        nmps: 41,\n        nlps: 38,\n        switchFlag: 0,\n      },\n      {\n        qe: 37,\n        nmps: 42,\n        nlps: 39,\n        switchFlag: 0,\n      },\n      {\n        qe: 21,\n        nmps: 43,\n        nlps: 40,\n        switchFlag: 0,\n      },\n      {\n        qe: 9,\n        nmps: 44,\n        nlps: 41,\n        switchFlag: 0,\n      },\n      {\n        qe: 5,\n        nmps: 45,\n        nlps: 42,\n        switchFlag: 0,\n      },\n      {\n        qe: 1,\n        nmps: 45,\n        nlps: 43,\n        switchFlag: 0,\n      },\n      {\n        qe: 22017,\n        nmps: 46,\n        nlps: 46,\n        switchFlag: 0,\n      },\n    ];\n    function ArithmeticDecoder(data, start, end) {\n      this.data = data;\n      this.bp = start;\n      this.dataEnd = end;\n      this.chigh = data[start];\n      this.clow = 0;\n      this.byteIn();\n      this.chigh = ((this.chigh << 7) & 65535) | ((this.clow >> 9) & 127);\n      this.clow = (this.clow << 7) & 65535;\n      this.ct -= 7;\n      this.a = 32768;\n    }\n    ArithmeticDecoder.prototype = {\n      byteIn: function ArithmeticDecoder_byteIn() {\n        var data = this.data;\n        var bp = this.bp;\n        if (data[bp] === 255) {\n          var b1 = data[bp + 1];\n          if (b1 > 143) {\n            this.clow += 65280;\n            this.ct = 8;\n          } else {\n            bp++;\n            this.clow += data[bp] << 9;\n            this.ct = 7;\n            this.bp = bp;\n          }\n        } else {\n          bp++;\n          this.clow += bp < this.dataEnd ? data[bp] << 8 : 65280;\n          this.ct = 8;\n          this.bp = bp;\n        }\n        if (this.clow > 65535) {\n          this.chigh += this.clow >> 16;\n          this.clow &= 65535;\n        }\n      },\n      readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n        var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n        var qeTableIcx = QeTable[cx_index];\n        var qeIcx = qeTableIcx.qe;\n        var d;\n        var a = this.a - qeIcx;\n        if (this.chigh < qeIcx) {\n          if (a < qeIcx) {\n            a = qeIcx;\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          } else {\n            a = qeIcx;\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          }\n        } else {\n          this.chigh -= qeIcx;\n          if ((a & 32768) !== 0) {\n            this.a = a;\n            return cx_mps;\n          }\n          if (a < qeIcx) {\n            d = 1 ^ cx_mps;\n            if (qeTableIcx.switchFlag === 1) {\n              cx_mps = d;\n            }\n            cx_index = qeTableIcx.nlps;\n          } else {\n            d = cx_mps;\n            cx_index = qeTableIcx.nmps;\n          }\n        }\n        do {\n          if (this.ct === 0) {\n            this.byteIn();\n          }\n          a <<= 1;\n          this.chigh = ((this.chigh << 1) & 65535) | ((this.clow >> 15) & 1);\n          this.clow = (this.clow << 1) & 65535;\n          this.ct--;\n        } while ((a & 32768) === 0);\n        this.a = a;\n        contexts[pos] = (cx_index << 1) | cx_mps;\n        return d;\n      },\n    };\n    return ArithmeticDecoder;\n  })();\n  (\"use strict\");\n  var JpxImage = (function JpxImageClosure() {\n    var SubbandsGainLog2 = {\n      LL: 0,\n      LH: 1,\n      HL: 1,\n      HH: 2,\n    };\n    function JpxImage() {\n      this.failOnCorruptedImage = false;\n    }\n    JpxImage.prototype = {\n      parse: function JpxImage_parse(data) {\n        var head = readUint16(data, 0);\n        if (head === 65359) {\n          this.parseCodestream(data, 0, data.length);\n          return;\n        }\n        var position = 0,\n          length = data.length;\n        while (position < length) {\n          var headerSize = 8;\n          var lbox = readUint32(data, position);\n          var tbox = readUint32(data, position + 4);\n          position += headerSize;\n          if (lbox === 1) {\n            lbox =\n              readUint32(data, position) * 4294967296 +\n              readUint32(data, position + 4);\n            position += 8;\n            headerSize += 8;\n          }\n          if (lbox === 0) {\n            lbox = length - position + headerSize;\n          }\n          if (lbox < headerSize) {\n            throw new Error(\"JPX Error: Invalid box field size\");\n          }\n          var dataLength = lbox - headerSize;\n          var jumpDataLength = true;\n          switch (tbox) {\n            case 1785737832:\n              jumpDataLength = false;\n              break;\n\n            case 1668246642:\n              var method = data[position];\n              var precedence = data[position + 1];\n              var approximation = data[position + 2];\n              if (method === 1) {\n                var colorspace = readUint32(data, position + 3);\n                switch (colorspace) {\n                  case 16:\n                  case 17:\n                  case 18:\n                    break;\n\n                  default:\n                    warn(\"Unknown colorspace \" + colorspace);\n                    break;\n                }\n              } else if (method === 2) {\n                info(\"ICC profile not supported\");\n              }\n              break;\n\n            case 1785737827:\n              this.parseCodestream(data, position, position + dataLength);\n              break;\n\n            case 1783636e3:\n              if (218793738 !== readUint32(data, position)) {\n                warn(\"Invalid JP2 signature\");\n              }\n              break;\n\n            case 1783634458:\n            case 1718909296:\n            case 1920099697:\n            case 1919251232:\n            case 1768449138:\n              break;\n\n            default:\n              var headerType = String.fromCharCode(\n                (tbox >> 24) & 255,\n                (tbox >> 16) & 255,\n                (tbox >> 8) & 255,\n                tbox & 255,\n              );\n              warn(\"Unsupported header type \" + tbox + \" (\" + headerType + \")\");\n              break;\n          }\n          if (jumpDataLength) {\n            position += dataLength;\n          }\n        }\n      },\n      parseImageProperties: function JpxImage_parseImageProperties(stream) {\n        var newByte = stream.getByte();\n        while (newByte >= 0) {\n          var oldByte = newByte;\n          newByte = stream.getByte();\n          var code = (oldByte << 8) | newByte;\n          if (code === 65361) {\n            stream.skip(4);\n            var Xsiz = stream.getInt32() >>> 0;\n            var Ysiz = stream.getInt32() >>> 0;\n            var XOsiz = stream.getInt32() >>> 0;\n            var YOsiz = stream.getInt32() >>> 0;\n            stream.skip(16);\n            var Csiz = stream.getUint16();\n            this.width = Xsiz - XOsiz;\n            this.height = Ysiz - YOsiz;\n            this.componentsCount = Csiz;\n            this.bitsPerComponent = 8;\n            return;\n          }\n        }\n        throw new Error(\"JPX Error: No size marker found in JPX stream\");\n      },\n      parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n        var context = {};\n        try {\n          var doNotRecover = false;\n          var position = start;\n          while (position + 1 < end) {\n            var code = readUint16(data, position);\n            position += 2;\n            var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n            switch (code) {\n              case 65359:\n                context.mainHeader = true;\n                break;\n\n              case 65497:\n                break;\n\n              case 65361:\n                length = readUint16(data, position);\n                var siz = {};\n                siz.Xsiz = readUint32(data, position + 4);\n                siz.Ysiz = readUint32(data, position + 8);\n                siz.XOsiz = readUint32(data, position + 12);\n                siz.YOsiz = readUint32(data, position + 16);\n                siz.XTsiz = readUint32(data, position + 20);\n                siz.YTsiz = readUint32(data, position + 24);\n                siz.XTOsiz = readUint32(data, position + 28);\n                siz.YTOsiz = readUint32(data, position + 32);\n                var componentsCount = readUint16(data, position + 36);\n                siz.Csiz = componentsCount;\n                var components = [];\n                j = position + 38;\n                for (var i = 0; i < componentsCount; i++) {\n                  var component = {\n                    precision: (data[j] & 127) + 1,\n                    isSigned: !!(data[j] & 128),\n                    XRsiz: data[j + 1],\n                    YRsiz: data[j + 1],\n                  };\n                  calculateComponentDimensions(component, siz);\n                  components.push(component);\n                }\n                context.SIZ = siz;\n                context.components = components;\n                calculateTileGrids(context, components);\n                context.QCC = [];\n                context.COC = [];\n                break;\n\n              case 65372:\n                length = readUint16(data, position);\n                var qcd = {};\n                j = position + 2;\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcd.noQuantization = spqcdSize === 8;\n                qcd.scalarExpounded = scalarExpounded;\n                qcd.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  var spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcd.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCD = qcd;\n                } else {\n                  context.currentTile.QCD = qcd;\n                  context.currentTile.QCC = [];\n                }\n                break;\n\n              case 65373:\n                length = readUint16(data, position);\n                var qcc = {};\n                j = position + 2;\n                var cqcc;\n                if (context.SIZ.Csiz < 257) {\n                  cqcc = data[j++];\n                } else {\n                  cqcc = readUint16(data, j);\n                  j += 2;\n                }\n                sqcd = data[j++];\n                switch (sqcd & 31) {\n                  case 0:\n                    spqcdSize = 8;\n                    scalarExpounded = true;\n                    break;\n\n                  case 1:\n                    spqcdSize = 16;\n                    scalarExpounded = false;\n                    break;\n\n                  case 2:\n                    spqcdSize = 16;\n                    scalarExpounded = true;\n                    break;\n\n                  default:\n                    throw new Error(\"JPX Error: Invalid SQcd value \" + sqcd);\n                }\n                qcc.noQuantization = spqcdSize === 8;\n                qcc.scalarExpounded = scalarExpounded;\n                qcc.guardBits = sqcd >> 5;\n                spqcds = [];\n                while (j < length + position) {\n                  spqcd = {};\n                  if (spqcdSize === 8) {\n                    spqcd.epsilon = data[j++] >> 3;\n                    spqcd.mu = 0;\n                  } else {\n                    spqcd.epsilon = data[j] >> 3;\n                    spqcd.mu = ((data[j] & 7) << 8) | data[j + 1];\n                    j += 2;\n                  }\n                  spqcds.push(spqcd);\n                }\n                qcc.SPqcds = spqcds;\n                if (context.mainHeader) {\n                  context.QCC[cqcc] = qcc;\n                } else {\n                  context.currentTile.QCC[cqcc] = qcc;\n                }\n                break;\n\n              case 65362:\n                length = readUint16(data, position);\n                var cod = {};\n                j = position + 2;\n                var scod = data[j++];\n                cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n                cod.sopMarkerUsed = !!(scod & 2);\n                cod.ephMarkerUsed = !!(scod & 4);\n                cod.progressionOrder = data[j++];\n                cod.layersCount = readUint16(data, j);\n                j += 2;\n                cod.multipleComponentTransform = data[j++];\n                cod.decompositionLevelsCount = data[j++];\n                cod.xcb = (data[j++] & 15) + 2;\n                cod.ycb = (data[j++] & 15) + 2;\n                var blockStyle = data[j++];\n                cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n                cod.resetContextProbabilities = !!(blockStyle & 2);\n                cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n                cod.verticalyStripe = !!(blockStyle & 8);\n                cod.predictableTermination = !!(blockStyle & 16);\n                cod.segmentationSymbolUsed = !!(blockStyle & 32);\n                cod.reversibleTransformation = data[j++];\n                if (cod.entropyCoderWithCustomPrecincts) {\n                  var precinctsSizes = [];\n                  while (j < length + position) {\n                    var precinctsSize = data[j++];\n                    precinctsSizes.push({\n                      PPx: precinctsSize & 15,\n                      PPy: precinctsSize >> 4,\n                    });\n                  }\n                  cod.precinctsSizes = precinctsSizes;\n                }\n                var unsupported = [];\n                if (cod.selectiveArithmeticCodingBypass) {\n                  unsupported.push(\"selectiveArithmeticCodingBypass\");\n                }\n                if (cod.resetContextProbabilities) {\n                  unsupported.push(\"resetContextProbabilities\");\n                }\n                if (cod.terminationOnEachCodingPass) {\n                  unsupported.push(\"terminationOnEachCodingPass\");\n                }\n                if (cod.verticalyStripe) {\n                  unsupported.push(\"verticalyStripe\");\n                }\n                if (cod.predictableTermination) {\n                  unsupported.push(\"predictableTermination\");\n                }\n                if (unsupported.length > 0) {\n                  doNotRecover = true;\n                  throw new Error(\n                    \"JPX Error: Unsupported COD options (\" +\n                      unsupported.join(\", \") +\n                      \")\",\n                  );\n                }\n                if (context.mainHeader) {\n                  context.COD = cod;\n                } else {\n                  context.currentTile.COD = cod;\n                  context.currentTile.COC = [];\n                }\n                break;\n\n              case 65424:\n                length = readUint16(data, position);\n                tile = {};\n                tile.index = readUint16(data, position + 2);\n                tile.length = readUint32(data, position + 4);\n                tile.dataEnd = tile.length + position - 2;\n                tile.partIndex = data[position + 8];\n                tile.partsCount = data[position + 9];\n                context.mainHeader = false;\n                if (tile.partIndex === 0) {\n                  tile.COD = context.COD;\n                  tile.COC = context.COC.slice(0);\n                  tile.QCD = context.QCD;\n                  tile.QCC = context.QCC.slice(0);\n                }\n                context.currentTile = tile;\n                break;\n\n              case 65427:\n                tile = context.currentTile;\n                if (tile.partIndex === 0) {\n                  initializeTile(context, tile.index);\n                  buildPackets(context);\n                }\n                length = tile.dataEnd - position;\n                parseTilePackets(context, data, position, length);\n                break;\n\n              case 65365:\n              case 65367:\n              case 65368:\n              case 65380:\n                length = readUint16(data, position);\n                break;\n\n              case 65363:\n                throw new Error(\n                  \"JPX Error: Codestream code 0xFF53 (COC) is \" +\n                    \"not implemented\",\n                );\n\n              default:\n                throw new Error(\n                  \"JPX Error: Unknown codestream code: \" + code.toString(16),\n                );\n            }\n            position += length;\n          }\n        } catch (e) {\n          if (doNotRecover || this.failOnCorruptedImage) {\n            throw e;\n          } else {\n            warn(\"Trying to recover from \" + e.message);\n          }\n        }\n        this.tiles = transformComponents(context);\n        this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n        this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n        this.componentsCount = context.SIZ.Csiz;\n      },\n    };\n    function calculateComponentDimensions(component, siz) {\n      component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n      component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n      component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n      component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n      component.width = component.x1 - component.x0;\n      component.height = component.y1 - component.y0;\n    }\n    function calculateTileGrids(context, components) {\n      var siz = context.SIZ;\n      var tile,\n        tiles = [];\n      var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n      var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n      for (var q = 0; q < numYtiles; q++) {\n        for (var p = 0; p < numXtiles; p++) {\n          tile = {};\n          tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n          tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n          tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n          tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n          tile.width = tile.tx1 - tile.tx0;\n          tile.height = tile.ty1 - tile.ty0;\n          tile.components = [];\n          tiles.push(tile);\n        }\n      }\n      context.tiles = tiles;\n      var componentsCount = siz.Csiz;\n      for (var i = 0, ii = componentsCount; i < ii; i++) {\n        var component = components[i];\n        for (var j = 0, jj = tiles.length; j < jj; j++) {\n          var tileComponent = {};\n          tile = tiles[j];\n          tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n          tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n          tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n          tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n          tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n          tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n          tile.components[i] = tileComponent;\n        }\n      }\n    }\n    function getBlocksDimensions(context, component, r) {\n      var codOrCoc = component.codingStyleParameters;\n      var result = {};\n      if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n        result.PPx = 15;\n        result.PPy = 15;\n      } else {\n        result.PPx = codOrCoc.precinctsSizes[r].PPx;\n        result.PPy = codOrCoc.precinctsSizes[r].PPy;\n      }\n      result.xcb_ =\n        r > 0\n          ? Math.min(codOrCoc.xcb, result.PPx - 1)\n          : Math.min(codOrCoc.xcb, result.PPx);\n      result.ycb_ =\n        r > 0\n          ? Math.min(codOrCoc.ycb, result.PPy - 1)\n          : Math.min(codOrCoc.ycb, result.PPy);\n      return result;\n    }\n    function buildPrecincts(context, resolution, dimensions) {\n      var precinctWidth = 1 << dimensions.PPx;\n      var precinctHeight = 1 << dimensions.PPy;\n      var isZeroRes = resolution.resLevel === 0;\n      var precinctWidthInSubband = 1 << (dimensions.PPx + (isZeroRes ? 0 : -1));\n      var precinctHeightInSubband =\n        1 << (dimensions.PPy + (isZeroRes ? 0 : -1));\n      var numprecinctswide =\n        resolution.trx1 > resolution.trx0\n          ? Math.ceil(resolution.trx1 / precinctWidth) -\n            Math.floor(resolution.trx0 / precinctWidth)\n          : 0;\n      var numprecinctshigh =\n        resolution.try1 > resolution.try0\n          ? Math.ceil(resolution.try1 / precinctHeight) -\n            Math.floor(resolution.try0 / precinctHeight)\n          : 0;\n      var numprecincts = numprecinctswide * numprecinctshigh;\n      resolution.precinctParameters = {\n        precinctWidth: precinctWidth,\n        precinctHeight: precinctHeight,\n        numprecinctswide: numprecinctswide,\n        numprecinctshigh: numprecinctshigh,\n        numprecincts: numprecincts,\n        precinctWidthInSubband: precinctWidthInSubband,\n        precinctHeightInSubband: precinctHeightInSubband,\n      };\n    }\n    function buildCodeblocks(context, subband, dimensions) {\n      var xcb_ = dimensions.xcb_;\n      var ycb_ = dimensions.ycb_;\n      var codeblockWidth = 1 << xcb_;\n      var codeblockHeight = 1 << ycb_;\n      var cbx0 = subband.tbx0 >> xcb_;\n      var cby0 = subband.tby0 >> ycb_;\n      var cbx1 = (subband.tbx1 + codeblockWidth - 1) >> xcb_;\n      var cby1 = (subband.tby1 + codeblockHeight - 1) >> ycb_;\n      var precinctParameters = subband.resolution.precinctParameters;\n      var codeblocks = [];\n      var precincts = [];\n      var i, j, codeblock, precinctNumber;\n      for (j = cby0; j < cby1; j++) {\n        for (i = cbx0; i < cbx1; i++) {\n          codeblock = {\n            cbx: i,\n            cby: j,\n            tbx0: codeblockWidth * i,\n            tby0: codeblockHeight * j,\n            tbx1: codeblockWidth * (i + 1),\n            tby1: codeblockHeight * (j + 1),\n          };\n          codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n          codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n          codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n          codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n          var pi = Math.floor(\n            (codeblock.tbx0_ - subband.tbx0) /\n              precinctParameters.precinctWidthInSubband,\n          );\n          var pj = Math.floor(\n            (codeblock.tby0_ - subband.tby0) /\n              precinctParameters.precinctHeightInSubband,\n          );\n          precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n          codeblock.precinctNumber = precinctNumber;\n          codeblock.subbandType = subband.type;\n          codeblock.Lblock = 3;\n          if (\n            codeblock.tbx1_ <= codeblock.tbx0_ ||\n            codeblock.tby1_ <= codeblock.tby0_\n          ) {\n            continue;\n          }\n          codeblocks.push(codeblock);\n          var precinct = precincts[precinctNumber];\n          if (precinct !== undefined) {\n            if (i < precinct.cbxMin) {\n              precinct.cbxMin = i;\n            } else if (i > precinct.cbxMax) {\n              precinct.cbxMax = i;\n            }\n            if (j < precinct.cbyMin) {\n              precinct.cbxMin = j;\n            } else if (j > precinct.cbyMax) {\n              precinct.cbyMax = j;\n            }\n          } else {\n            precincts[precinctNumber] = precinct = {\n              cbxMin: i,\n              cbyMin: j,\n              cbxMax: i,\n              cbyMax: j,\n            };\n          }\n          codeblock.precinct = precinct;\n        }\n      }\n      subband.codeblockParameters = {\n        codeblockWidth: xcb_,\n        codeblockHeight: ycb_,\n        numcodeblockwide: cbx1 - cbx0 + 1,\n        numcodeblockhigh: cby1 - cby0 + 1,\n      };\n      subband.codeblocks = codeblocks;\n      subband.precincts = precincts;\n    }\n    function createPacket(resolution, precinctNumber, layerNumber) {\n      var precinctCodeblocks = [];\n      var subbands = resolution.subbands;\n      for (var i = 0, ii = subbands.length; i < ii; i++) {\n        var subband = subbands[i];\n        var codeblocks = subband.codeblocks;\n        for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n          var codeblock = codeblocks[j];\n          if (codeblock.precinctNumber !== precinctNumber) {\n            continue;\n          }\n          precinctCodeblocks.push(codeblock);\n        }\n      }\n      return {\n        layerNumber: layerNumber,\n        codeblocks: precinctCodeblocks,\n      };\n    }\n    function LayerResolutionComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; l < layersCount; l++) {\n          for (; r <= maxDecompositionLevelsCount; r++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          r = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionLayerComponentPositionIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var maxDecompositionLevelsCount = 0;\n      for (var q = 0; q < componentsCount; q++) {\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          tile.components[q].codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; l < layersCount; l++) {\n            for (; i < componentsCount; i++) {\n              var component = tile.components[i];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              for (; k < numprecincts; ) {\n                var packet = createPacket(resolution, k, l);\n                k++;\n                return packet;\n              }\n              k = 0;\n            }\n            i = 0;\n          }\n          l = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ResolutionPositionComponentLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var l, r, c, p;\n      var maxDecompositionLevelsCount = 0;\n      for (c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        maxDecompositionLevelsCount = Math.max(\n          maxDecompositionLevelsCount,\n          component.codingStyleParameters.decompositionLevelsCount,\n        );\n      }\n      var maxNumPrecinctsInLevel = new Int32Array(\n        maxDecompositionLevelsCount + 1,\n      );\n      for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n        var maxNumPrecincts = 0;\n        for (c = 0; c < componentsCount; ++c) {\n          var resolutions = tile.components[c].resolutions;\n          if (r < resolutions.length) {\n            maxNumPrecincts = Math.max(\n              maxNumPrecincts,\n              resolutions[r].precinctParameters.numprecincts,\n            );\n          }\n        }\n        maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n      }\n      l = 0;\n      r = 0;\n      c = 0;\n      p = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; p < maxNumPrecinctsInLevel[r]; p++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              if (\n                r > component.codingStyleParameters.decompositionLevelsCount\n              ) {\n                continue;\n              }\n              var resolution = component.resolutions[r];\n              var numprecincts = resolution.precinctParameters.numprecincts;\n              if (p >= numprecincts) {\n                continue;\n              }\n              for (; l < layersCount; ) {\n                var packet = createPacket(resolution, p, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            c = 0;\n          }\n          p = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function PositionComponentResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var precinctsIterationSizes = precinctsSizes;\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; c < componentsCount; c++) {\n              var component = tile.components[c];\n              var decompositionLevelsCount =\n                component.codingStyleParameters.decompositionLevelsCount;\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale =\n                  precinctsSizes.components[c].resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            c = 0;\n          }\n          px = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function ComponentPositionResolutionLayerIterator(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var layersCount = tile.codingStyleDefaultParameters.layersCount;\n      var componentsCount = siz.Csiz;\n      var precinctsSizes = getPrecinctSizesInImageScale(tile);\n      var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n      this.nextPacket = function JpxImage_nextPacket() {\n        for (; c < componentsCount; ++c) {\n          var component = tile.components[c];\n          var precinctsIterationSizes = precinctsSizes.components[c];\n          var decompositionLevelsCount =\n            component.codingStyleParameters.decompositionLevelsCount;\n          for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n            for (; px < precinctsIterationSizes.maxNumWide; px++) {\n              for (; r <= decompositionLevelsCount; r++) {\n                var resolution = component.resolutions[r];\n                var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n                var k = getPrecinctIndexIfExist(\n                  px,\n                  py,\n                  sizeInImageScale,\n                  precinctsIterationSizes,\n                  resolution,\n                );\n                if (k === null) {\n                  continue;\n                }\n                for (; l < layersCount; ) {\n                  var packet = createPacket(resolution, k, l);\n                  l++;\n                  return packet;\n                }\n                l = 0;\n              }\n              r = 0;\n            }\n            px = 0;\n          }\n          py = 0;\n        }\n        throw new Error(\"JPX Error: Out of packets\");\n      };\n    }\n    function getPrecinctIndexIfExist(\n      pxIndex,\n      pyIndex,\n      sizeInImageScale,\n      precinctIterationSizes,\n      resolution,\n    ) {\n      var posX = pxIndex * precinctIterationSizes.minWidth;\n      var posY = pyIndex * precinctIterationSizes.minHeight;\n      if (\n        posX % sizeInImageScale.width !== 0 ||\n        posY % sizeInImageScale.height !== 0\n      ) {\n        return null;\n      }\n      var startPrecinctRowIndex =\n        (posY / sizeInImageScale.width) *\n        resolution.precinctParameters.numprecinctswide;\n      return posX / sizeInImageScale.height + startPrecinctRowIndex;\n    }\n    function getPrecinctSizesInImageScale(tile) {\n      var componentsCount = tile.components.length;\n      var minWidth = Number.MAX_VALUE;\n      var minHeight = Number.MAX_VALUE;\n      var maxNumWide = 0;\n      var maxNumHigh = 0;\n      var sizePerComponent = new Array(componentsCount);\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var sizePerResolution = new Array(decompositionLevelsCount + 1);\n        var minWidthCurrentComponent = Number.MAX_VALUE;\n        var minHeightCurrentComponent = Number.MAX_VALUE;\n        var maxNumWideCurrentComponent = 0;\n        var maxNumHighCurrentComponent = 0;\n        var scale = 1;\n        for (var r = decompositionLevelsCount; r >= 0; --r) {\n          var resolution = component.resolutions[r];\n          var widthCurrentResolution =\n            scale * resolution.precinctParameters.precinctWidth;\n          var heightCurrentResolution =\n            scale * resolution.precinctParameters.precinctHeight;\n          minWidthCurrentComponent = Math.min(\n            minWidthCurrentComponent,\n            widthCurrentResolution,\n          );\n          minHeightCurrentComponent = Math.min(\n            minHeightCurrentComponent,\n            heightCurrentResolution,\n          );\n          maxNumWideCurrentComponent = Math.max(\n            maxNumWideCurrentComponent,\n            resolution.precinctParameters.numprecinctswide,\n          );\n          maxNumHighCurrentComponent = Math.max(\n            maxNumHighCurrentComponent,\n            resolution.precinctParameters.numprecinctshigh,\n          );\n          sizePerResolution[r] = {\n            width: widthCurrentResolution,\n            height: heightCurrentResolution,\n          };\n          scale <<= 1;\n        }\n        minWidth = Math.min(minWidth, minWidthCurrentComponent);\n        minHeight = Math.min(minHeight, minHeightCurrentComponent);\n        maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n        maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n        sizePerComponent[c] = {\n          resolutions: sizePerResolution,\n          minWidth: minWidthCurrentComponent,\n          minHeight: minHeightCurrentComponent,\n          maxNumWide: maxNumWideCurrentComponent,\n          maxNumHigh: maxNumHighCurrentComponent,\n        };\n      }\n      return {\n        components: sizePerComponent,\n        minWidth: minWidth,\n        minHeight: minHeight,\n        maxNumWide: maxNumWide,\n        maxNumHigh: maxNumHigh,\n      };\n    }\n    function buildPackets(context) {\n      var siz = context.SIZ;\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var componentsCount = siz.Csiz;\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var decompositionLevelsCount =\n          component.codingStyleParameters.decompositionLevelsCount;\n        var resolutions = [];\n        var subbands = [];\n        for (var r = 0; r <= decompositionLevelsCount; r++) {\n          var blocksDimensions = getBlocksDimensions(context, component, r);\n          var resolution = {};\n          var scale = 1 << (decompositionLevelsCount - r);\n          resolution.trx0 = Math.ceil(component.tcx0 / scale);\n          resolution.try0 = Math.ceil(component.tcy0 / scale);\n          resolution.trx1 = Math.ceil(component.tcx1 / scale);\n          resolution.try1 = Math.ceil(component.tcy1 / scale);\n          resolution.resLevel = r;\n          buildPrecincts(context, resolution, blocksDimensions);\n          resolutions.push(resolution);\n          var subband;\n          if (r === 0) {\n            subband = {};\n            subband.type = \"LL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / scale);\n            subband.tby0 = Math.ceil(component.tcy0 / scale);\n            subband.tbx1 = Math.ceil(component.tcx1 / scale);\n            subband.tby1 = Math.ceil(component.tcy1 / scale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolution.subbands = [subband];\n          } else {\n            var bscale = 1 << (decompositionLevelsCount - r + 1);\n            var resolutionSubbands = [];\n            subband = {};\n            subband.type = \"HL\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"LH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            subband = {};\n            subband.type = \"HH\";\n            subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n            subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n            subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n            subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n            subband.resolution = resolution;\n            buildCodeblocks(context, subband, blocksDimensions);\n            subbands.push(subband);\n            resolutionSubbands.push(subband);\n            resolution.subbands = resolutionSubbands;\n          }\n        }\n        component.resolutions = resolutions;\n        component.subbands = subbands;\n      }\n      var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n      switch (progressionOrder) {\n        case 0:\n          tile.packetsIterator = new LayerResolutionComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 1:\n          tile.packetsIterator = new ResolutionLayerComponentPositionIterator(\n            context,\n          );\n          break;\n\n        case 2:\n          tile.packetsIterator = new ResolutionPositionComponentLayerIterator(\n            context,\n          );\n          break;\n\n        case 3:\n          tile.packetsIterator = new PositionComponentResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        case 4:\n          tile.packetsIterator = new ComponentPositionResolutionLayerIterator(\n            context,\n          );\n          break;\n\n        default:\n          throw new Error(\n            \"JPX Error: Unsupported progression order \" + progressionOrder,\n          );\n      }\n    }\n    function parseTilePackets(context, data, offset, dataLength) {\n      var position = 0;\n      var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n      function readBits(count) {\n        while (bufferSize < count) {\n          var b = data[offset + position];\n          position++;\n          if (skipNextBit) {\n            buffer = (buffer << 7) | b;\n            bufferSize += 7;\n            skipNextBit = false;\n          } else {\n            buffer = (buffer << 8) | b;\n            bufferSize += 8;\n          }\n          if (b === 255) {\n            skipNextBit = true;\n          }\n        }\n        bufferSize -= count;\n        return (buffer >>> bufferSize) & ((1 << count) - 1);\n      }\n      function skipMarkerIfEqual(value) {\n        if (\n          data[offset + position - 1] === 255 &&\n          data[offset + position] === value\n        ) {\n          skipBytes(1);\n          return true;\n        } else if (\n          data[offset + position] === 255 &&\n          data[offset + position + 1] === value\n        ) {\n          skipBytes(2);\n          return true;\n        }\n        return false;\n      }\n      function skipBytes(count) {\n        position += count;\n      }\n      function alignToByte() {\n        bufferSize = 0;\n        if (skipNextBit) {\n          position++;\n          skipNextBit = false;\n        }\n      }\n      function readCodingpasses() {\n        if (readBits(1) === 0) {\n          return 1;\n        }\n        if (readBits(1) === 0) {\n          return 2;\n        }\n        var value = readBits(2);\n        if (value < 3) {\n          return value + 3;\n        }\n        value = readBits(5);\n        if (value < 31) {\n          return value + 6;\n        }\n        value = readBits(7);\n        return value + 37;\n      }\n      var tileIndex = context.currentTile.index;\n      var tile = context.tiles[tileIndex];\n      var sopMarkerUsed = context.COD.sopMarkerUsed;\n      var ephMarkerUsed = context.COD.ephMarkerUsed;\n      var packetsIterator = tile.packetsIterator;\n      while (position < dataLength) {\n        alignToByte();\n        if (sopMarkerUsed && skipMarkerIfEqual(145)) {\n          skipBytes(4);\n        }\n        var packet = packetsIterator.nextPacket();\n        if (!readBits(1)) {\n          continue;\n        }\n        var layerNumber = packet.layerNumber;\n        var queue = [],\n          codeblock;\n        for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n          codeblock = packet.codeblocks[i];\n          var precinct = codeblock.precinct;\n          var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n          var codeblockRow = codeblock.cby - precinct.cbyMin;\n          var codeblockIncluded = false;\n          var firstTimeInclusion = false;\n          var valueReady;\n          if (codeblock[\"included\"] !== undefined) {\n            codeblockIncluded = !!readBits(1);\n          } else {\n            precinct = codeblock.precinct;\n            var inclusionTree, zeroBitPlanesTree;\n            if (precinct[\"inclusionTree\"] !== undefined) {\n              inclusionTree = precinct.inclusionTree;\n            } else {\n              var width = precinct.cbxMax - precinct.cbxMin + 1;\n              var height = precinct.cbyMax - precinct.cbyMin + 1;\n              inclusionTree = new InclusionTree(width, height, layerNumber);\n              zeroBitPlanesTree = new TagTree(width, height);\n              precinct.inclusionTree = inclusionTree;\n              precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n            }\n            if (\n              inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)\n            ) {\n              while (true) {\n                if (readBits(1)) {\n                  valueReady = !inclusionTree.nextLevel();\n                  if (valueReady) {\n                    codeblock.included = true;\n                    codeblockIncluded = firstTimeInclusion = true;\n                    break;\n                  }\n                } else {\n                  inclusionTree.incrementValue(layerNumber);\n                  break;\n                }\n              }\n            }\n          }\n          if (!codeblockIncluded) {\n            continue;\n          }\n          if (firstTimeInclusion) {\n            zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n            zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !zeroBitPlanesTree.nextLevel();\n                if (valueReady) {\n                  break;\n                }\n              } else {\n                zeroBitPlanesTree.incrementValue();\n              }\n            }\n            codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n          }\n          var codingpasses = readCodingpasses();\n          while (readBits(1)) {\n            codeblock.Lblock++;\n          }\n          var codingpassesLog2 = log2(codingpasses);\n          var bits =\n            (codingpasses < 1 << codingpassesLog2\n              ? codingpassesLog2 - 1\n              : codingpassesLog2) + codeblock.Lblock;\n          var codedDataLength = readBits(bits);\n          queue.push({\n            codeblock: codeblock,\n            codingpasses: codingpasses,\n            dataLength: codedDataLength,\n          });\n        }\n        alignToByte();\n        if (ephMarkerUsed) {\n          skipMarkerIfEqual(146);\n        }\n        while (queue.length > 0) {\n          var packetItem = queue.shift();\n          codeblock = packetItem.codeblock;\n          if (codeblock[\"data\"] === undefined) {\n            codeblock.data = [];\n          }\n          codeblock.data.push({\n            data: data,\n            start: offset + position,\n            end: offset + position + packetItem.dataLength,\n            codingpasses: packetItem.codingpasses,\n          });\n          position += packetItem.dataLength;\n        }\n      }\n      return position;\n    }\n    function copyCoefficients(\n      coefficients,\n      levelWidth,\n      levelHeight,\n      subband,\n      delta,\n      mb,\n      reversible,\n      segmentationSymbolUsed,\n    ) {\n      var x0 = subband.tbx0;\n      var y0 = subband.tby0;\n      var width = subband.tbx1 - subband.tbx0;\n      var codeblocks = subband.codeblocks;\n      var right = subband.type.charAt(0) === \"H\" ? 1 : 0;\n      var bottom = subband.type.charAt(1) === \"H\" ? levelWidth : 0;\n      for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n        var codeblock = codeblocks[i];\n        var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n        var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n        if (blockWidth === 0 || blockHeight === 0) {\n          continue;\n        }\n        if (codeblock[\"data\"] === undefined) {\n          continue;\n        }\n        var bitModel, currentCodingpassType;\n        bitModel = new BitModel(\n          blockWidth,\n          blockHeight,\n          codeblock.subbandType,\n          codeblock.zeroBitPlanes,\n          mb,\n        );\n        currentCodingpassType = 2;\n        var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n        var j, jj, dataItem;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          totalLength += dataItem.end - dataItem.start;\n          codingpasses += dataItem.codingpasses;\n        }\n        var encodedData = new Uint8Array(totalLength);\n        var position = 0;\n        for (j = 0, jj = data.length; j < jj; j++) {\n          dataItem = data[j];\n          var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n          encodedData.set(chunk, position);\n          position += chunk.length;\n        }\n        var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n        bitModel.setDecoder(decoder);\n        for (j = 0; j < codingpasses; j++) {\n          switch (currentCodingpassType) {\n            case 0:\n              bitModel.runSignificancePropogationPass();\n              break;\n\n            case 1:\n              bitModel.runMagnitudeRefinementPass();\n              break;\n\n            case 2:\n              bitModel.runCleanupPass();\n              if (segmentationSymbolUsed) {\n                bitModel.checkSegmentationSymbol();\n              }\n              break;\n          }\n          currentCodingpassType = (currentCodingpassType + 1) % 3;\n        }\n        var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n        var sign = bitModel.coefficentsSign;\n        var magnitude = bitModel.coefficentsMagnitude;\n        var bitsDecoded = bitModel.bitsDecoded;\n        var magnitudeCorrection = reversible ? 0 : 0.5;\n        var k, n, nb;\n        position = 0;\n        var interleave = subband.type !== \"LL\";\n        for (j = 0; j < blockHeight; j++) {\n          var row = (offset / width) | 0;\n          var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n          for (k = 0; k < blockWidth; k++) {\n            n = magnitude[position];\n            if (n !== 0) {\n              n = (n + magnitudeCorrection) * delta;\n              if (sign[position] !== 0) {\n                n = -n;\n              }\n              nb = bitsDecoded[position];\n              var pos = interleave ? levelOffset + (offset << 1) : offset;\n              if (reversible && nb >= mb) {\n                coefficients[pos] = n;\n              } else {\n                coefficients[pos] = n * (1 << (mb - nb));\n              }\n            }\n            offset++;\n            position++;\n          }\n          offset += width - blockWidth;\n        }\n      }\n    }\n    function transformTile(context, tile, c) {\n      var component = tile.components[c];\n      var codingStyleParameters = component.codingStyleParameters;\n      var quantizationParameters = component.quantizationParameters;\n      var decompositionLevelsCount =\n        codingStyleParameters.decompositionLevelsCount;\n      var spqcds = quantizationParameters.SPqcds;\n      var scalarExpounded = quantizationParameters.scalarExpounded;\n      var guardBits = quantizationParameters.guardBits;\n      var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n      var precision = context.components[c].precision;\n      var reversible = codingStyleParameters.reversibleTransformation;\n      var transform = reversible\n        ? new ReversibleTransform()\n        : new IrreversibleTransform();\n      var subbandCoefficients = [];\n      var b = 0;\n      for (var i = 0; i <= decompositionLevelsCount; i++) {\n        var resolution = component.resolutions[i];\n        var width = resolution.trx1 - resolution.trx0;\n        var height = resolution.try1 - resolution.try0;\n        var coefficients = new Float32Array(width * height);\n        for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n          var mu, epsilon;\n          if (!scalarExpounded) {\n            mu = spqcds[0].mu;\n            epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n          } else {\n            mu = spqcds[b].mu;\n            epsilon = spqcds[b].epsilon;\n            b++;\n          }\n          var subband = resolution.subbands[j];\n          var gainLog2 = SubbandsGainLog2[subband.type];\n          var delta = reversible\n            ? 1\n            : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n          var mb = guardBits + epsilon - 1;\n          copyCoefficients(\n            coefficients,\n            width,\n            height,\n            subband,\n            delta,\n            mb,\n            reversible,\n            segmentationSymbolUsed,\n          );\n        }\n        subbandCoefficients.push({\n          width: width,\n          height: height,\n          items: coefficients,\n        });\n      }\n      var result = transform.calculate(\n        subbandCoefficients,\n        component.tcx0,\n        component.tcy0,\n      );\n      return {\n        left: component.tcx0,\n        top: component.tcy0,\n        width: result.width,\n        height: result.height,\n        items: result.items,\n      };\n    }\n    function transformComponents(context) {\n      var siz = context.SIZ;\n      var components = context.components;\n      var componentsCount = siz.Csiz;\n      var resultImages = [];\n      for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n        var tile = context.tiles[i];\n        var transformedTiles = [];\n        var c;\n        for (c = 0; c < componentsCount; c++) {\n          transformedTiles[c] = transformTile(context, tile, c);\n        }\n        var tile0 = transformedTiles[0];\n        var out = new Uint8Array(tile0.items.length * componentsCount);\n        var result = {\n          left: tile0.left,\n          top: tile0.top,\n          width: tile0.width,\n          height: tile0.height,\n          items: out,\n        };\n        var shift, offset, max, min, maxK;\n        var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2,\n          r,\n          g,\n          b,\n          k,\n          val;\n        if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n          var fourComponents = componentsCount === 4;\n          var y0items = transformedTiles[0].items;\n          var y1items = transformedTiles[1].items;\n          var y2items = transformedTiles[2].items;\n          var y3items = fourComponents ? transformedTiles[3].items : null;\n          shift = components[0].precision - 8;\n          offset = (128 << shift) + 0.5;\n          max = 255 * (1 << shift);\n          maxK = max * 0.5;\n          min = -maxK;\n          var component0 = tile.components[0];\n          var alpha01 = componentsCount - 3;\n          jj = y0items.length;\n          if (!component0.codingStyleParameters.reversibleTransformation) {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              r = y0 + 1.402 * y2;\n              g = y0 - 0.34413 * y1 - 0.71414 * y2;\n              b = y0 + 1.772 * y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          } else {\n            for (j = 0; j < jj; j++, pos += alpha01) {\n              y0 = y0items[j] + offset;\n              y1 = y1items[j];\n              y2 = y2items[j];\n              g = y0 - ((y2 + y1) >> 2);\n              r = g + y2;\n              b = g + y1;\n              out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n              out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n              out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n            }\n          }\n          if (fourComponents) {\n            for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n              k = y3items[j];\n              out[pos] = k <= min ? 0 : k >= maxK ? 255 : (k + offset) >> shift;\n            }\n          }\n        } else {\n          for (c = 0; c < componentsCount; c++) {\n            var items = transformedTiles[c].items;\n            shift = components[c].precision - 8;\n            offset = (128 << shift) + 0.5;\n            max = 127.5 * (1 << shift);\n            min = -max;\n            for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n              val = items[j];\n              out[pos] =\n                val <= min ? 0 : val >= max ? 255 : (val + offset) >> shift;\n              pos += componentsCount;\n            }\n          }\n        }\n        resultImages.push(result);\n      }\n      return resultImages;\n    }\n    function initializeTile(context, tileIndex) {\n      var siz = context.SIZ;\n      var componentsCount = siz.Csiz;\n      var tile = context.tiles[tileIndex];\n      for (var c = 0; c < componentsCount; c++) {\n        var component = tile.components[c];\n        var qcdOrQcc =\n          context.currentTile.QCC[c] !== undefined\n            ? context.currentTile.QCC[c]\n            : context.currentTile.QCD;\n        component.quantizationParameters = qcdOrQcc;\n        var codOrCoc =\n          context.currentTile.COC[c] !== undefined\n            ? context.currentTile.COC[c]\n            : context.currentTile.COD;\n        component.codingStyleParameters = codOrCoc;\n      }\n      tile.codingStyleDefaultParameters = context.currentTile.COD;\n    }\n    var TagTree = (function TagTreeClosure() {\n      function TagTree(width, height) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var level = {\n            width: width,\n            height: height,\n            items: [],\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      TagTree.prototype = {\n        reset: function TagTree_reset(i, j) {\n          var currentLevel = 0,\n            value = 0,\n            level;\n          while (currentLevel < this.levels.length) {\n            level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            if (level.items[index] !== undefined) {\n              value = level.items[index];\n              break;\n            }\n            level.index = index;\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          currentLevel--;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          this.currentLevel = currentLevel;\n          delete this.value;\n        },\n        incrementValue: function TagTree_incrementValue() {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index]++;\n        },\n        nextLevel: function TagTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          currentLevel--;\n          if (currentLevel < 0) {\n            this.value = value;\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return TagTree;\n    })();\n    var InclusionTree = (function InclusionTreeClosure() {\n      function InclusionTree(width, height, defaultValue) {\n        var levelsLength = log2(Math.max(width, height)) + 1;\n        this.levels = [];\n        for (var i = 0; i < levelsLength; i++) {\n          var items = new Uint8Array(width * height);\n          for (var j = 0, jj = items.length; j < jj; j++) {\n            items[j] = defaultValue;\n          }\n          var level = {\n            width: width,\n            height: height,\n            items: items,\n          };\n          this.levels.push(level);\n          width = Math.ceil(width / 2);\n          height = Math.ceil(height / 2);\n        }\n      }\n      InclusionTree.prototype = {\n        reset: function InclusionTree_reset(i, j, stopValue) {\n          var currentLevel = 0;\n          while (currentLevel < this.levels.length) {\n            var level = this.levels[currentLevel];\n            var index = i + j * level.width;\n            level.index = index;\n            var value = level.items[index];\n            if (value === 255) {\n              break;\n            }\n            if (value > stopValue) {\n              this.currentLevel = currentLevel;\n              this.propagateValues();\n              return false;\n            }\n            i >>= 1;\n            j >>= 1;\n            currentLevel++;\n          }\n          this.currentLevel = currentLevel - 1;\n          return true;\n        },\n        incrementValue: function InclusionTree_incrementValue(stopValue) {\n          var level = this.levels[this.currentLevel];\n          level.items[level.index] = stopValue + 1;\n          this.propagateValues();\n        },\n        propagateValues: function InclusionTree_propagateValues() {\n          var levelIndex = this.currentLevel;\n          var level = this.levels[levelIndex];\n          var currentValue = level.items[level.index];\n          while (--levelIndex >= 0) {\n            level = this.levels[levelIndex];\n            level.items[level.index] = currentValue;\n          }\n        },\n        nextLevel: function InclusionTree_nextLevel() {\n          var currentLevel = this.currentLevel;\n          var level = this.levels[currentLevel];\n          var value = level.items[level.index];\n          level.items[level.index] = 255;\n          currentLevel--;\n          if (currentLevel < 0) {\n            return false;\n          }\n          this.currentLevel = currentLevel;\n          level = this.levels[currentLevel];\n          level.items[level.index] = value;\n          return true;\n        },\n      };\n      return InclusionTree;\n    })();\n    var BitModel = (function BitModelClosure() {\n      var UNIFORM_CONTEXT = 17;\n      var RUNLENGTH_CONTEXT = 18;\n      var LLAndLHContextsLabel = new Uint8Array([\n        0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0,\n        2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0,\n        4, 7, 8,\n      ]);\n      var HLContextLabel = new Uint8Array([\n        0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0,\n        2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0,\n        8, 8, 8,\n      ]);\n      var HHContextLabel = new Uint8Array([\n        0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0,\n        5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0,\n        8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0,\n        8, 8, 8,\n      ]);\n      function BitModel(width, height, subband, zeroBitPlanes, mb) {\n        this.width = width;\n        this.height = height;\n        this.contextLabelTable =\n          subband === \"HH\"\n            ? HHContextLabel\n            : subband === \"HL\"\n              ? HLContextLabel\n              : LLAndLHContextsLabel;\n        var coefficientCount = width * height;\n        this.neighborsSignificance = new Uint8Array(coefficientCount);\n        this.coefficentsSign = new Uint8Array(coefficientCount);\n        this.coefficentsMagnitude =\n          mb > 14\n            ? new Uint32Array(coefficientCount)\n            : mb > 6\n              ? new Uint16Array(coefficientCount)\n              : new Uint8Array(coefficientCount);\n        this.processingFlags = new Uint8Array(coefficientCount);\n        var bitsDecoded = new Uint8Array(coefficientCount);\n        if (zeroBitPlanes !== 0) {\n          for (var i = 0; i < coefficientCount; i++) {\n            bitsDecoded[i] = zeroBitPlanes;\n          }\n        }\n        this.bitsDecoded = bitsDecoded;\n        this.reset();\n      }\n      BitModel.prototype = {\n        setDecoder: function BitModel_setDecoder(decoder) {\n          this.decoder = decoder;\n        },\n        reset: function BitModel_reset() {\n          this.contexts = new Int8Array(19);\n          this.contexts[0] = (4 << 1) | 0;\n          this.contexts[UNIFORM_CONTEXT] = (46 << 1) | 0;\n          this.contexts[RUNLENGTH_CONTEXT] = (3 << 1) | 0;\n        },\n        setNeighborsSignificance: function BitModel_setNeighborsSignificance(\n          row,\n          column,\n          index,\n        ) {\n          var neighborsSignificance = this.neighborsSignificance;\n          var width = this.width,\n            height = this.height;\n          var left = column > 0;\n          var right = column + 1 < width;\n          var i;\n          if (row > 0) {\n            i = index - width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (row + 1 < height) {\n            i = index + width;\n            if (left) {\n              neighborsSignificance[i - 1] += 16;\n            }\n            if (right) {\n              neighborsSignificance[i + 1] += 16;\n            }\n            neighborsSignificance[i] += 4;\n          }\n          if (left) {\n            neighborsSignificance[index - 1] += 1;\n          }\n          if (right) {\n            neighborsSignificance[index + 1] += 1;\n          }\n          neighborsSignificance[index] |= 128;\n        },\n        runSignificancePropogationPass:\n          function BitModel_runSignificancePropogationPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var coefficentsSign = this.coefficentsSign;\n            var neighborsSignificance = this.neighborsSignificance;\n            var processingFlags = this.processingFlags;\n            var contexts = this.contexts;\n            var labels = this.contextLabelTable;\n            var bitsDecoded = this.bitsDecoded;\n            var processedInverseMask = ~1;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            for (var i0 = 0; i0 < height; i0 += 4) {\n              for (var j = 0; j < width; j++) {\n                var index = i0 * width + j;\n                for (var i1 = 0; i1 < 4; i1++, index += width) {\n                  var i = i0 + i1;\n                  if (i >= height) {\n                    break;\n                  }\n                  processingFlags[index] &= processedInverseMask;\n                  if (\n                    coefficentsMagnitude[index] ||\n                    !neighborsSignificance[index]\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = labels[neighborsSignificance[index]];\n                  var decision = decoder.readBit(contexts, contextLabel);\n                  if (decision) {\n                    var sign = this.decodeSignBit(i, j, index);\n                    coefficentsSign[index] = sign;\n                    coefficentsMagnitude[index] = 1;\n                    this.setNeighborsSignificance(i, j, index);\n                    processingFlags[index] |= firstMagnitudeBitMask;\n                  }\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n          var width = this.width,\n            height = this.height;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contribution, sign0, sign1, significance1;\n          var contextLabel, decoded;\n          significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n          if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n            sign1 = coefficentsSign[index + 1];\n            if (significance1) {\n              sign0 = coefficentsSign[index - 1];\n              contribution = 1 - sign1 - sign0;\n            } else {\n              contribution = 1 - sign1 - sign1;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign0 - sign0;\n          } else {\n            contribution = 0;\n          }\n          var horizontalContribution = 3 * contribution;\n          significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n          if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n            sign1 = coefficentsSign[index + width];\n            if (significance1) {\n              sign0 = coefficentsSign[index - width];\n              contribution = 1 - sign1 - sign0 + horizontalContribution;\n            } else {\n              contribution = 1 - sign1 - sign1 + horizontalContribution;\n            }\n          } else if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign0 - sign0 + horizontalContribution;\n          } else {\n            contribution = horizontalContribution;\n          }\n          if (contribution >= 0) {\n            contextLabel = 9 + contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel);\n          } else {\n            contextLabel = 9 - contribution;\n            decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n          }\n          return decoded;\n        },\n        runMagnitudeRefinementPass:\n          function BitModel_runMagnitudeRefinementPass() {\n            var decoder = this.decoder;\n            var width = this.width,\n              height = this.height;\n            var coefficentsMagnitude = this.coefficentsMagnitude;\n            var neighborsSignificance = this.neighborsSignificance;\n            var contexts = this.contexts;\n            var bitsDecoded = this.bitsDecoded;\n            var processingFlags = this.processingFlags;\n            var processedMask = 1;\n            var firstMagnitudeBitMask = 2;\n            var length = width * height;\n            var width4 = width * 4;\n            for (\n              var index0 = 0, indexNext;\n              index0 < length;\n              index0 = indexNext\n            ) {\n              indexNext = Math.min(length, index0 + width4);\n              for (var j = 0; j < width; j++) {\n                for (\n                  var index = index0 + j;\n                  index < indexNext;\n                  index += width\n                ) {\n                  if (\n                    !coefficentsMagnitude[index] ||\n                    (processingFlags[index] & processedMask) !== 0\n                  ) {\n                    continue;\n                  }\n                  var contextLabel = 16;\n                  if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                    processingFlags[index] ^= firstMagnitudeBitMask;\n                    var significance = neighborsSignificance[index] & 127;\n                    contextLabel = significance === 0 ? 15 : 14;\n                  }\n                  var bit = decoder.readBit(contexts, contextLabel);\n                  coefficentsMagnitude[index] =\n                    (coefficentsMagnitude[index] << 1) | bit;\n                  bitsDecoded[index]++;\n                  processingFlags[index] |= processedMask;\n                }\n              }\n            }\n          },\n        runCleanupPass: function BitModel_runCleanupPass() {\n          var decoder = this.decoder;\n          var width = this.width,\n            height = this.height;\n          var neighborsSignificance = this.neighborsSignificance;\n          var coefficentsMagnitude = this.coefficentsMagnitude;\n          var coefficentsSign = this.coefficentsSign;\n          var contexts = this.contexts;\n          var labels = this.contextLabelTable;\n          var bitsDecoded = this.bitsDecoded;\n          var processingFlags = this.processingFlags;\n          var processedMask = 1;\n          var firstMagnitudeBitMask = 2;\n          var oneRowDown = width;\n          var twoRowsDown = width * 2;\n          var threeRowsDown = width * 3;\n          var iNext;\n          for (var i0 = 0; i0 < height; i0 = iNext) {\n            iNext = Math.min(i0 + 4, height);\n            var indexBase = i0 * width;\n            var checkAllEmpty = i0 + 3 < height;\n            for (var j = 0; j < width; j++) {\n              var index0 = indexBase + j;\n              var allEmpty =\n                checkAllEmpty &&\n                processingFlags[index0] === 0 &&\n                processingFlags[index0 + oneRowDown] === 0 &&\n                processingFlags[index0 + twoRowsDown] === 0 &&\n                processingFlags[index0 + threeRowsDown] === 0 &&\n                neighborsSignificance[index0] === 0 &&\n                neighborsSignificance[index0 + oneRowDown] === 0 &&\n                neighborsSignificance[index0 + twoRowsDown] === 0 &&\n                neighborsSignificance[index0 + threeRowsDown] === 0;\n              var i1 = 0,\n                index = index0;\n              var i = i0,\n                sign;\n              if (allEmpty) {\n                var hasSignificantCoefficent = decoder.readBit(\n                  contexts,\n                  RUNLENGTH_CONTEXT,\n                );\n                if (!hasSignificantCoefficent) {\n                  bitsDecoded[index0]++;\n                  bitsDecoded[index0 + oneRowDown]++;\n                  bitsDecoded[index0 + twoRowsDown]++;\n                  bitsDecoded[index0 + threeRowsDown]++;\n                  continue;\n                }\n                i1 =\n                  (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n                  decoder.readBit(contexts, UNIFORM_CONTEXT);\n                if (i1 !== 0) {\n                  i = i0 + i1;\n                  index += i1 * width;\n                }\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n                index = index0;\n                for (var i2 = i0; i2 <= i; i2++, index += width) {\n                  bitsDecoded[index]++;\n                }\n                i1++;\n              }\n              for (i = i0 + i1; i < iNext; i++, index += width) {\n                if (\n                  coefficentsMagnitude[index] ||\n                  (processingFlags[index] & processedMask) !== 0\n                ) {\n                  continue;\n                }\n                var contextLabel = labels[neighborsSignificance[index]];\n                var decision = decoder.readBit(contexts, contextLabel);\n                if (decision === 1) {\n                  sign = this.decodeSignBit(i, j, index);\n                  coefficentsSign[index] = sign;\n                  coefficentsMagnitude[index] = 1;\n                  this.setNeighborsSignificance(i, j, index);\n                  processingFlags[index] |= firstMagnitudeBitMask;\n                }\n                bitsDecoded[index]++;\n              }\n            }\n          }\n        },\n        checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n          var decoder = this.decoder;\n          var contexts = this.contexts;\n          var symbol =\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 3) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 2) |\n            (decoder.readBit(contexts, UNIFORM_CONTEXT) << 1) |\n            decoder.readBit(contexts, UNIFORM_CONTEXT);\n          if (symbol !== 10) {\n            throw new Error(\"JPX Error: Invalid segmentation symbol\");\n          }\n        },\n      };\n      return BitModel;\n    })();\n    var Transform = (function TransformClosure() {\n      function Transform() {}\n      Transform.prototype.calculate = function transformCalculate(\n        subbands,\n        u0,\n        v0,\n      ) {\n        var ll = subbands[0];\n        for (var i = 1, ii = subbands.length; i < ii; i++) {\n          ll = this.iterate(ll, subbands[i], u0, v0);\n        }\n        return ll;\n      };\n      Transform.prototype.extend = function extend(buffer, offset, size) {\n        var i1 = offset - 1,\n          j1 = offset + 1;\n        var i2 = offset + size - 2,\n          j2 = offset + size;\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1--] = buffer[j1++];\n        buffer[j2++] = buffer[i2--];\n        buffer[i1] = buffer[j1];\n        buffer[j2] = buffer[i2];\n      };\n      Transform.prototype.iterate = function Transform_iterate(\n        ll,\n        hl_lh_hh,\n        u0,\n        v0,\n      ) {\n        var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n        var width = hl_lh_hh.width;\n        var height = hl_lh_hh.height;\n        var items = hl_lh_hh.items;\n        var i, j, k, l, u, v;\n        for (k = 0, i = 0; i < llHeight; i++) {\n          l = i * 2 * width;\n          for (j = 0; j < llWidth; j++, k++, l += 2) {\n            items[l] = llItems[k];\n          }\n        }\n        llItems = ll.items = null;\n        var bufferPadding = 4;\n        var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n        if (width === 1) {\n          if ((u0 & 1) !== 0) {\n            for (v = 0, k = 0; v < height; v++, k += width) {\n              items[k] *= 0.5;\n            }\n          }\n        } else {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n            this.extend(rowBuffer, bufferPadding, width);\n            this.filter(rowBuffer, bufferPadding, width);\n            items.set(\n              rowBuffer.subarray(bufferPadding, bufferPadding + width),\n              k,\n            );\n          }\n        }\n        var numBuffers = 16;\n        var colBuffers = [];\n        for (i = 0; i < numBuffers; i++) {\n          colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n        }\n        var b,\n          currentBuffer = 0;\n        ll = bufferPadding + height;\n        if (height === 1) {\n          if ((v0 & 1) !== 0) {\n            for (u = 0; u < width; u++) {\n              items[u] *= 0.5;\n            }\n          }\n        } else {\n          for (u = 0; u < width; u++) {\n            if (currentBuffer === 0) {\n              numBuffers = Math.min(width - u, numBuffers);\n              for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  colBuffers[b][l] = items[k + b];\n                }\n              }\n              currentBuffer = numBuffers;\n            }\n            currentBuffer--;\n            var buffer = colBuffers[currentBuffer];\n            this.extend(buffer, bufferPadding, height);\n            this.filter(buffer, bufferPadding, height);\n            if (currentBuffer === 0) {\n              k = u - numBuffers + 1;\n              for (l = bufferPadding; l < ll; k += width, l++) {\n                for (b = 0; b < numBuffers; b++) {\n                  items[k + b] = colBuffers[b][l];\n                }\n              }\n            }\n          }\n        }\n        return {\n          width: width,\n          height: height,\n          items: items,\n        };\n      };\n      return Transform;\n    })();\n    var IrreversibleTransform = (function IrreversibleTransformClosure() {\n      function IrreversibleTransform() {\n        Transform.call(this);\n      }\n      IrreversibleTransform.prototype = Object.create(Transform.prototype);\n      IrreversibleTransform.prototype.filter =\n        function irreversibleTransformFilter(x, offset, length) {\n          var len = length >> 1;\n          offset = offset | 0;\n          var j, n, current, next;\n          var alpha = -1.586134342059924;\n          var beta = -0.052980118572961;\n          var gamma = 0.882911075530934;\n          var delta = 0.443506852043971;\n          var K = 1.230174104914001;\n          var K_ = 1 / K;\n          j = offset - 3;\n          for (n = len + 4; n--; j += 2) {\n            x[j] *= K_;\n          }\n          j = offset - 2;\n          current = delta * x[j - 1];\n          for (n = len + 3; n--; j += 2) {\n            next = delta * x[j + 1];\n            x[j] = K * x[j] - current - next;\n            if (n--) {\n              j += 2;\n              current = delta * x[j + 1];\n              x[j] = K * x[j] - current - next;\n            } else {\n              break;\n            }\n          }\n          j = offset - 1;\n          current = gamma * x[j - 1];\n          for (n = len + 2; n--; j += 2) {\n            next = gamma * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = gamma * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          j = offset;\n          current = beta * x[j - 1];\n          for (n = len + 1; n--; j += 2) {\n            next = beta * x[j + 1];\n            x[j] -= current + next;\n            if (n--) {\n              j += 2;\n              current = beta * x[j + 1];\n              x[j] -= current + next;\n            } else {\n              break;\n            }\n          }\n          if (len !== 0) {\n            j = offset + 1;\n            current = alpha * x[j - 1];\n            for (n = len; n--; j += 2) {\n              next = alpha * x[j + 1];\n              x[j] -= current + next;\n              if (n--) {\n                j += 2;\n                current = alpha * x[j + 1];\n                x[j] -= current + next;\n              } else {\n                break;\n              }\n            }\n          }\n        };\n      return IrreversibleTransform;\n    })();\n    var ReversibleTransform = (function ReversibleTransformClosure() {\n      function ReversibleTransform() {\n        Transform.call(this);\n      }\n      ReversibleTransform.prototype = Object.create(Transform.prototype);\n      ReversibleTransform.prototype.filter = function reversibleTransformFilter(\n        x,\n        offset,\n        length,\n      ) {\n        var len = length >> 1;\n        offset = offset | 0;\n        var j, n;\n        for (j = offset, n = len + 1; n--; j += 2) {\n          x[j] -= (x[j - 1] + x[j + 1] + 2) >> 2;\n        }\n        for (j = offset + 1, n = len; n--; j += 2) {\n          x[j] += (x[j - 1] + x[j + 1]) >> 1;\n        }\n      };\n      return ReversibleTransform;\n    })();\n    return JpxImage;\n  })();\n  (\"use strict\");\n  var Jbig2Image = (function Jbig2ImageClosure() {\n    function ContextCache() {}\n    ContextCache.prototype = {\n      getContexts: function (id) {\n        if (id in this) {\n          return this[id];\n        }\n        return (this[id] = new Int8Array(1 << 16));\n      },\n    };\n    function DecodingContext(data, start, end) {\n      this.data = data;\n      this.start = start;\n      this.end = end;\n    }\n    DecodingContext.prototype = {\n      get decoder() {\n        var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n        return shadow(this, \"decoder\", decoder);\n      },\n      get contextCache() {\n        var cache = new ContextCache();\n        return shadow(this, \"contextCache\", cache);\n      },\n    };\n    function decodeInteger(contextCache, procedure, decoder) {\n      var contexts = contextCache.getContexts(procedure);\n      var prev = 1;\n      function readBits(length) {\n        var v = 0;\n        for (var i = 0; i < length; i++) {\n          var bit = decoder.readBit(contexts, prev);\n          prev =\n            prev < 256 ? (prev << 1) | bit : (((prev << 1) | bit) & 511) | 256;\n          v = (v << 1) | bit;\n        }\n        return v >>> 0;\n      }\n      var sign = readBits(1);\n      var value = readBits(1)\n        ? readBits(1)\n          ? readBits(1)\n            ? readBits(1)\n              ? readBits(1)\n                ? readBits(32) + 4436\n                : readBits(12) + 340\n              : readBits(8) + 84\n            : readBits(6) + 20\n          : readBits(4) + 4\n        : readBits(2);\n      return sign === 0 ? value : value > 0 ? -value : null;\n    }\n    function decodeIAID(contextCache, decoder, codeLength) {\n      var contexts = contextCache.getContexts(\"IAID\");\n      var prev = 1;\n      for (var i = 0; i < codeLength; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = (prev << 1) | bit;\n      }\n      if (codeLength < 31) {\n        return prev & ((1 << codeLength) - 1);\n      }\n      return prev & 2147483647;\n    }\n    var SegmentTypes = [\n      \"SymbolDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateTextRegion\",\n      null,\n      \"ImmediateTextRegion\",\n      \"ImmediateLosslessTextRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"patternDictionary\",\n      null,\n      null,\n      null,\n      \"IntermediateHalftoneRegion\",\n      null,\n      \"ImmediateHalftoneRegion\",\n      \"ImmediateLosslessHalftoneRegion\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"IntermediateGenericRegion\",\n      null,\n      \"ImmediateGenericRegion\",\n      \"ImmediateLosslessGenericRegion\",\n      \"IntermediateGenericRefinementRegion\",\n      null,\n      \"ImmediateGenericRefinementRegion\",\n      \"ImmediateLosslessGenericRefinementRegion\",\n      null,\n      null,\n      null,\n      null,\n      \"PageInformation\",\n      \"EndOfPage\",\n      \"EndOfStripe\",\n      \"EndOfFile\",\n      \"Profiles\",\n      \"Tables\",\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      null,\n      \"Extension\",\n    ];\n    var CodingTemplates = [\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: 2,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: 2,\n          y: -1,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -1,\n          y: -2,\n        },\n        {\n          x: 0,\n          y: -2,\n        },\n        {\n          x: 1,\n          y: -2,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n      [\n        {\n          x: -3,\n          y: -1,\n        },\n        {\n          x: -2,\n          y: -1,\n        },\n        {\n          x: -1,\n          y: -1,\n        },\n        {\n          x: 0,\n          y: -1,\n        },\n        {\n          x: 1,\n          y: -1,\n        },\n        {\n          x: -4,\n          y: 0,\n        },\n        {\n          x: -3,\n          y: 0,\n        },\n        {\n          x: -2,\n          y: 0,\n        },\n        {\n          x: -1,\n          y: 0,\n        },\n      ],\n    ];\n    var RefinementTemplates = [\n      {\n        coding: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: -1,\n            y: 1,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n      {\n        coding: [\n          {\n            x: -1,\n            y: -1,\n          },\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: 1,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n        ],\n        reference: [\n          {\n            x: 0,\n            y: -1,\n          },\n          {\n            x: -1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 0,\n          },\n          {\n            x: 1,\n            y: 0,\n          },\n          {\n            x: 0,\n            y: 1,\n          },\n          {\n            x: 1,\n            y: 1,\n          },\n        ],\n      },\n    ];\n    var ReusedContexts = [39717, 1941, 229, 405];\n    var RefinementReusedContexts = [32, 8];\n    function decodeBitmapTemplate0(width, height, decodingContext) {\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n      var OLD_PIXEL_MASK = 31735;\n      for (i = 0; i < height; i++) {\n        row = bitmap[i] = new Uint8Array(width);\n        row1 = i < 1 ? row : bitmap[i - 1];\n        row2 = i < 2 ? row : bitmap[i - 2];\n        contextLabel =\n          (row2[0] << 13) |\n          (row2[1] << 12) |\n          (row2[2] << 11) |\n          (row1[0] << 7) |\n          (row1[1] << 6) |\n          (row1[2] << 5) |\n          (row1[3] << 4);\n        for (j = 0; j < width; j++) {\n          row[j] = pixel = decoder.readBit(contexts, contextLabel);\n          contextLabel =\n            ((contextLabel & OLD_PIXEL_MASK) << 1) |\n            (j + 3 < width ? row2[j + 3] << 11 : 0) |\n            (j + 4 < width ? row1[j + 4] << 4 : 0) |\n            pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeBitmap(\n      mmr,\n      width,\n      height,\n      templateIndex,\n      prediction,\n      skip,\n      at,\n      decodingContext,\n    ) {\n      if (mmr) {\n        error(\"JBIG2 error: MMR encoding is not supported\");\n      }\n      if (\n        templateIndex === 0 &&\n        !skip &&\n        !prediction &&\n        at.length === 4 &&\n        at[0].x === 3 &&\n        at[0].y === -1 &&\n        at[1].x === -3 &&\n        at[1].y === -1 &&\n        at[2].x === 2 &&\n        at[2].y === -2 &&\n        at[3].x === -2 &&\n        at[3].y === -2\n      ) {\n        return decodeBitmapTemplate0(width, height, decodingContext);\n      }\n      var useskip = !!skip;\n      var template = CodingTemplates[templateIndex].concat(at);\n      template.sort(function (a, b) {\n        return a.y - b.y || a.x - b.x;\n      });\n      var templateLength = template.length;\n      var templateX = new Int8Array(templateLength);\n      var templateY = new Int8Array(templateLength);\n      var changingTemplateEntries = [];\n      var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n      var c, k;\n      for (k = 0; k < templateLength; k++) {\n        templateX[k] = template[k].x;\n        templateY[k] = template[k].y;\n        minX = Math.min(minX, template[k].x);\n        maxX = Math.max(maxX, template[k].x);\n        minY = Math.min(minY, template[k].y);\n        if (\n          k < templateLength - 1 &&\n          template[k].y === template[k + 1].y &&\n          template[k].x === template[k + 1].x - 1\n        ) {\n          reuseMask |= 1 << (templateLength - 1 - k);\n        } else {\n          changingTemplateEntries.push(k);\n        }\n      }\n      var changingEntriesLength = changingTemplateEntries.length;\n      var changingTemplateX = new Int8Array(changingEntriesLength);\n      var changingTemplateY = new Int8Array(changingEntriesLength);\n      var changingTemplateBit = new Uint16Array(changingEntriesLength);\n      for (c = 0; c < changingEntriesLength; c++) {\n        k = changingTemplateEntries[c];\n        changingTemplateX[c] = template[k].x;\n        changingTemplateY[c] = template[k].y;\n        changingTemplateBit[c] = 1 << (templateLength - 1 - k);\n      }\n      var sbb_left = -minX;\n      var sbb_top = -minY;\n      var sbb_right = width - maxX;\n      var pseudoPixelContext = ReusedContexts[templateIndex];\n      var row = new Uint8Array(width);\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GB\");\n      var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            bitmap.push(row);\n            continue;\n          }\n        }\n        row = new Uint8Array(row);\n        bitmap.push(row);\n        for (j = 0; j < width; j++) {\n          if (useskip && skip[i][j]) {\n            row[j] = 0;\n            continue;\n          }\n          if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n            contextLabel = (contextLabel << 1) & reuseMask;\n            for (k = 0; k < changingEntriesLength; k++) {\n              i0 = i + changingTemplateY[k];\n              j0 = j + changingTemplateX[k];\n              bit = bitmap[i0][j0];\n              if (bit) {\n                bit = changingTemplateBit[k];\n                contextLabel |= bit;\n              }\n            }\n          } else {\n            contextLabel = 0;\n            shift = templateLength - 1;\n            for (k = 0; k < templateLength; k++, shift--) {\n              j0 = j + templateX[k];\n              if (j0 >= 0 && j0 < width) {\n                i0 = i + templateY[k];\n                if (i0 >= 0) {\n                  bit = bitmap[i0][j0];\n                  if (bit) {\n                    contextLabel |= bit << shift;\n                  }\n                }\n              }\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeRefinement(\n      width,\n      height,\n      templateIndex,\n      referenceBitmap,\n      offsetX,\n      offsetY,\n      prediction,\n      at,\n      decodingContext,\n    ) {\n      var codingTemplate = RefinementTemplates[templateIndex].coding;\n      if (templateIndex === 0) {\n        codingTemplate = codingTemplate.concat([at[0]]);\n      }\n      var codingTemplateLength = codingTemplate.length;\n      var codingTemplateX = new Int32Array(codingTemplateLength);\n      var codingTemplateY = new Int32Array(codingTemplateLength);\n      var k;\n      for (k = 0; k < codingTemplateLength; k++) {\n        codingTemplateX[k] = codingTemplate[k].x;\n        codingTemplateY[k] = codingTemplate[k].y;\n      }\n      var referenceTemplate = RefinementTemplates[templateIndex].reference;\n      if (templateIndex === 0) {\n        referenceTemplate = referenceTemplate.concat([at[1]]);\n      }\n      var referenceTemplateLength = referenceTemplate.length;\n      var referenceTemplateX = new Int32Array(referenceTemplateLength);\n      var referenceTemplateY = new Int32Array(referenceTemplateLength);\n      for (k = 0; k < referenceTemplateLength; k++) {\n        referenceTemplateX[k] = referenceTemplate[k].x;\n        referenceTemplateY[k] = referenceTemplate[k].y;\n      }\n      var referenceWidth = referenceBitmap[0].length;\n      var referenceHeight = referenceBitmap.length;\n      var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n      var bitmap = [];\n      var decoder = decodingContext.decoder;\n      var contexts = decodingContext.contextCache.getContexts(\"GR\");\n      var ltp = 0;\n      for (var i = 0; i < height; i++) {\n        if (prediction) {\n          var sltp = decoder.readBit(contexts, pseudoPixelContext);\n          ltp ^= sltp;\n          if (ltp) {\n            error(\"JBIG2 error: prediction is not supported\");\n          }\n        }\n        var row = new Uint8Array(width);\n        bitmap.push(row);\n        for (var j = 0; j < width; j++) {\n          var i0, j0;\n          var contextLabel = 0;\n          for (k = 0; k < codingTemplateLength; k++) {\n            i0 = i + codingTemplateY[k];\n            j0 = j + codingTemplateX[k];\n            if (i0 < 0 || j0 < 0 || j0 >= width) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | bitmap[i0][j0];\n            }\n          }\n          for (k = 0; k < referenceTemplateLength; k++) {\n            i0 = i + referenceTemplateY[k] + offsetY;\n            j0 = j + referenceTemplateX[k] + offsetX;\n            if (\n              i0 < 0 ||\n              i0 >= referenceHeight ||\n              j0 < 0 ||\n              j0 >= referenceWidth\n            ) {\n              contextLabel <<= 1;\n            } else {\n              contextLabel = (contextLabel << 1) | referenceBitmap[i0][j0];\n            }\n          }\n          var pixel = decoder.readBit(contexts, contextLabel);\n          row[j] = pixel;\n        }\n      }\n      return bitmap;\n    }\n    function decodeSymbolDictionary(\n      huffman,\n      refinement,\n      symbols,\n      numberOfNewSymbols,\n      numberOfExportedSymbols,\n      huffmanTables,\n      templateIndex,\n      at,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var newSymbols = [];\n      var currentHeight = 0;\n      var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      while (newSymbols.length < numberOfNewSymbols) {\n        var deltaHeight = decodeInteger(contextCache, \"IADH\", decoder);\n        currentHeight += deltaHeight;\n        var currentWidth = 0;\n        var totalWidth = 0;\n        while (true) {\n          var deltaWidth = decodeInteger(contextCache, \"IADW\", decoder);\n          if (deltaWidth === null) {\n            break;\n          }\n          currentWidth += deltaWidth;\n          totalWidth += currentWidth;\n          var bitmap;\n          if (refinement) {\n            var numberOfInstances = decodeInteger(\n              contextCache,\n              \"IAAI\",\n              decoder,\n            );\n            if (numberOfInstances > 1) {\n              bitmap = decodeTextRegion(\n                huffman,\n                refinement,\n                currentWidth,\n                currentHeight,\n                0,\n                numberOfInstances,\n                1,\n                symbols.concat(newSymbols),\n                symbolCodeLength,\n                0,\n                0,\n                1,\n                0,\n                huffmanTables,\n                refinementTemplateIndex,\n                refinementAt,\n                decodingContext,\n              );\n            } else {\n              var symbolId = decodeIAID(\n                contextCache,\n                decoder,\n                symbolCodeLength,\n              );\n              var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n              var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n              var symbol =\n                symbolId < symbols.length\n                  ? symbols[symbolId]\n                  : newSymbols[symbolId - symbols.length];\n              bitmap = decodeRefinement(\n                currentWidth,\n                currentHeight,\n                refinementTemplateIndex,\n                symbol,\n                rdx,\n                rdy,\n                false,\n                refinementAt,\n                decodingContext,\n              );\n            }\n          } else {\n            bitmap = decodeBitmap(\n              false,\n              currentWidth,\n              currentHeight,\n              templateIndex,\n              false,\n              null,\n              at,\n              decodingContext,\n            );\n          }\n          newSymbols.push(bitmap);\n        }\n      }\n      var exportedSymbols = [];\n      var flags = [],\n        currentFlag = false;\n      var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n      while (flags.length < totalSymbolsLength) {\n        var runLength = decodeInteger(contextCache, \"IAEX\", decoder);\n        while (runLength--) {\n          flags.push(currentFlag);\n        }\n        currentFlag = !currentFlag;\n      }\n      for (var i = 0, ii = symbols.length; i < ii; i++) {\n        if (flags[i]) {\n          exportedSymbols.push(symbols[i]);\n        }\n      }\n      for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n        if (flags[i]) {\n          exportedSymbols.push(newSymbols[j]);\n        }\n      }\n      return exportedSymbols;\n    }\n    function decodeTextRegion(\n      huffman,\n      refinement,\n      width,\n      height,\n      defaultPixelValue,\n      numberOfSymbolInstances,\n      stripSize,\n      inputSymbols,\n      symbolCodeLength,\n      transposed,\n      dsOffset,\n      referenceCorner,\n      combinationOperator,\n      huffmanTables,\n      refinementTemplateIndex,\n      refinementAt,\n      decodingContext,\n    ) {\n      if (huffman) {\n        error(\"JBIG2 error: huffman is not supported\");\n      }\n      var bitmap = [];\n      var i, row;\n      for (i = 0; i < height; i++) {\n        row = new Uint8Array(width);\n        if (defaultPixelValue) {\n          for (var j = 0; j < width; j++) {\n            row[j] = defaultPixelValue;\n          }\n        }\n        bitmap.push(row);\n      }\n      var decoder = decodingContext.decoder;\n      var contextCache = decodingContext.contextCache;\n      var stripT = -decodeInteger(contextCache, \"IADT\", decoder);\n      var firstS = 0;\n      i = 0;\n      while (i < numberOfSymbolInstances) {\n        var deltaT = decodeInteger(contextCache, \"IADT\", decoder);\n        stripT += deltaT;\n        var deltaFirstS = decodeInteger(contextCache, \"IAFS\", decoder);\n        firstS += deltaFirstS;\n        var currentS = firstS;\n        do {\n          var currentT =\n            stripSize === 1 ? 0 : decodeInteger(contextCache, \"IAIT\", decoder);\n          var t = stripSize * stripT + currentT;\n          var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n          var applyRefinement =\n            refinement && decodeInteger(contextCache, \"IARI\", decoder);\n          var symbolBitmap = inputSymbols[symbolId];\n          var symbolWidth = symbolBitmap[0].length;\n          var symbolHeight = symbolBitmap.length;\n          if (applyRefinement) {\n            var rdw = decodeInteger(contextCache, \"IARDW\", decoder);\n            var rdh = decodeInteger(contextCache, \"IARDH\", decoder);\n            var rdx = decodeInteger(contextCache, \"IARDX\", decoder);\n            var rdy = decodeInteger(contextCache, \"IARDY\", decoder);\n            symbolWidth += rdw;\n            symbolHeight += rdh;\n            symbolBitmap = decodeRefinement(\n              symbolWidth,\n              symbolHeight,\n              refinementTemplateIndex,\n              symbolBitmap,\n              (rdw >> 1) + rdx,\n              (rdh >> 1) + rdy,\n              false,\n              refinementAt,\n              decodingContext,\n            );\n          }\n          var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n          var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n          var s2, t2, symbolRow;\n          if (transposed) {\n            for (s2 = 0; s2 < symbolHeight; s2++) {\n              row = bitmap[offsetS + s2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[s2];\n              var maxWidth = Math.min(width - offsetT, symbolWidth);\n              switch (combinationOperator) {\n                case 0:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] |= symbolRow[t2];\n                  }\n                  break;\n\n                case 2:\n                  for (t2 = 0; t2 < maxWidth; t2++) {\n                    row[offsetT + t2] ^= symbolRow[t2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolHeight - 1;\n          } else {\n            for (t2 = 0; t2 < symbolHeight; t2++) {\n              row = bitmap[offsetT + t2];\n              if (!row) {\n                continue;\n              }\n              symbolRow = symbolBitmap[t2];\n              switch (combinationOperator) {\n                case 0:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] |= symbolRow[s2];\n                  }\n                  break;\n\n                case 2:\n                  for (s2 = 0; s2 < symbolWidth; s2++) {\n                    row[offsetS + s2] ^= symbolRow[s2];\n                  }\n                  break;\n\n                default:\n                  error(\n                    \"JBIG2 error: operator \" +\n                      combinationOperator +\n                      \" is not supported\",\n                  );\n              }\n            }\n            currentS += symbolWidth - 1;\n          }\n          i++;\n          var deltaS = decodeInteger(contextCache, \"IADS\", decoder);\n          if (deltaS === null) {\n            break;\n          }\n          currentS += deltaS + dsOffset;\n        } while (true);\n      }\n      return bitmap;\n    }\n    function readSegmentHeader(data, start) {\n      var segmentHeader = {};\n      segmentHeader.number = readUint32(data, start);\n      var flags = data[start + 4];\n      var segmentType = flags & 63;\n      if (!SegmentTypes[segmentType]) {\n        error(\"JBIG2 error: invalid segment type: \" + segmentType);\n      }\n      segmentHeader.type = segmentType;\n      segmentHeader.typeName = SegmentTypes[segmentType];\n      segmentHeader.deferredNonRetain = !!(flags & 128);\n      var pageAssociationFieldSize = !!(flags & 64);\n      var referredFlags = data[start + 5];\n      var referredToCount = (referredFlags >> 5) & 7;\n      var retainBits = [referredFlags & 31];\n      var position = start + 6;\n      if (referredFlags === 7) {\n        referredToCount = readUint32(data, position - 1) & 536870911;\n        position += 3;\n        var bytes = (referredToCount + 7) >> 3;\n        retainBits[0] = data[position++];\n        while (--bytes > 0) {\n          retainBits.push(data[position++]);\n        }\n      } else if (referredFlags === 5 || referredFlags === 6) {\n        error(\"JBIG2 error: invalid referred-to flags\");\n      }\n      segmentHeader.retainBits = retainBits;\n      var referredToSegmentNumberSize =\n        segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n      var referredTo = [];\n      var i, ii;\n      for (i = 0; i < referredToCount; i++) {\n        var number =\n          referredToSegmentNumberSize === 1\n            ? data[position]\n            : referredToSegmentNumberSize === 2\n              ? readUint16(data, position)\n              : readUint32(data, position);\n        referredTo.push(number);\n        position += referredToSegmentNumberSize;\n      }\n      segmentHeader.referredTo = referredTo;\n      if (!pageAssociationFieldSize) {\n        segmentHeader.pageAssociation = data[position++];\n      } else {\n        segmentHeader.pageAssociation = readUint32(data, position);\n        position += 4;\n      }\n      segmentHeader.length = readUint32(data, position);\n      position += 4;\n      if (segmentHeader.length === 4294967295) {\n        if (segmentType === 38) {\n          var genericRegionInfo = readRegionSegmentInformation(data, position);\n          var genericRegionSegmentFlags =\n            data[position + RegionSegmentInformationFieldLength];\n          var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n          var searchPatternLength = 6;\n          var searchPattern = new Uint8Array(searchPatternLength);\n          if (!genericRegionMmr) {\n            searchPattern[0] = 255;\n            searchPattern[1] = 172;\n          }\n          searchPattern[2] = (genericRegionInfo.height >>> 24) & 255;\n          searchPattern[3] = (genericRegionInfo.height >> 16) & 255;\n          searchPattern[4] = (genericRegionInfo.height >> 8) & 255;\n          searchPattern[5] = genericRegionInfo.height & 255;\n          for (i = position, ii = data.length; i < ii; i++) {\n            var j = 0;\n            while (\n              j < searchPatternLength &&\n              searchPattern[j] === data[i + j]\n            ) {\n              j++;\n            }\n            if (j === searchPatternLength) {\n              segmentHeader.length = i + searchPatternLength;\n              break;\n            }\n          }\n          if (segmentHeader.length === 4294967295) {\n            error(\"JBIG2 error: segment end was not found\");\n          }\n        } else {\n          error(\"JBIG2 error: invalid unknown segment length\");\n        }\n      }\n      segmentHeader.headerEnd = position;\n      return segmentHeader;\n    }\n    function readSegments(header, data, start, end) {\n      var segments = [];\n      var position = start;\n      while (position < end) {\n        var segmentHeader = readSegmentHeader(data, position);\n        position = segmentHeader.headerEnd;\n        var segment = {\n          header: segmentHeader,\n          data: data,\n        };\n        if (!header.randomAccess) {\n          segment.start = position;\n          position += segmentHeader.length;\n          segment.end = position;\n        }\n        segments.push(segment);\n        if (segmentHeader.type === 51) {\n          break;\n        }\n      }\n      if (header.randomAccess) {\n        for (var i = 0, ii = segments.length; i < ii; i++) {\n          segments[i].start = position;\n          position += segments[i].header.length;\n          segments[i].end = position;\n        }\n      }\n      return segments;\n    }\n    function readRegionSegmentInformation(data, start) {\n      return {\n        width: readUint32(data, start),\n        height: readUint32(data, start + 4),\n        x: readUint32(data, start + 8),\n        y: readUint32(data, start + 12),\n        combinationOperator: data[start + 16] & 7,\n      };\n    }\n    var RegionSegmentInformationFieldLength = 17;\n    function processSegment(segment, visitor) {\n      var header = segment.header;\n      var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n      var args, at, i, atLength;\n      switch (header.type) {\n        case 0:\n          var dictionary = {};\n          var dictionaryFlags = readUint16(data, position);\n          dictionary.huffman = !!(dictionaryFlags & 1);\n          dictionary.refinement = !!(dictionaryFlags & 2);\n          dictionary.huffmanDHSelector = (dictionaryFlags >> 2) & 3;\n          dictionary.huffmanDWSelector = (dictionaryFlags >> 4) & 3;\n          dictionary.bitmapSizeSelector = (dictionaryFlags >> 6) & 1;\n          dictionary.aggregationInstancesSelector = (dictionaryFlags >> 7) & 1;\n          dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n          dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n          dictionary.template = (dictionaryFlags >> 10) & 3;\n          dictionary.refinementTemplate = (dictionaryFlags >> 12) & 1;\n          position += 2;\n          if (!dictionary.huffman) {\n            atLength = dictionary.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.at = at;\n          }\n          if (dictionary.refinement && !dictionary.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            dictionary.refinementAt = at;\n          }\n          dictionary.numberOfExportedSymbols = readUint32(data, position);\n          position += 4;\n          dictionary.numberOfNewSymbols = readUint32(data, position);\n          position += 4;\n          args = [\n            dictionary,\n            header.number,\n            header.referredTo,\n            data,\n            position,\n            end,\n          ];\n          break;\n\n        case 6:\n        case 7:\n          var textRegion = {};\n          textRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var textRegionSegmentFlags = readUint16(data, position);\n          position += 2;\n          textRegion.huffman = !!(textRegionSegmentFlags & 1);\n          textRegion.refinement = !!(textRegionSegmentFlags & 2);\n          textRegion.stripSize = 1 << ((textRegionSegmentFlags >> 2) & 3);\n          textRegion.referenceCorner = (textRegionSegmentFlags >> 4) & 3;\n          textRegion.transposed = !!(textRegionSegmentFlags & 64);\n          textRegion.combinationOperator = (textRegionSegmentFlags >> 7) & 3;\n          textRegion.defaultPixelValue = (textRegionSegmentFlags >> 9) & 1;\n          textRegion.dsOffset = (textRegionSegmentFlags << 17) >> 27;\n          textRegion.refinementTemplate = (textRegionSegmentFlags >> 15) & 1;\n          if (textRegion.huffman) {\n            var textRegionHuffmanFlags = readUint16(data, position);\n            position += 2;\n            textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n            textRegion.huffmanDS = (textRegionHuffmanFlags >> 2) & 3;\n            textRegion.huffmanDT = (textRegionHuffmanFlags >> 4) & 3;\n            textRegion.huffmanRefinementDW = (textRegionHuffmanFlags >> 6) & 3;\n            textRegion.huffmanRefinementDH = (textRegionHuffmanFlags >> 8) & 3;\n            textRegion.huffmanRefinementDX = (textRegionHuffmanFlags >> 10) & 3;\n            textRegion.huffmanRefinementDY = (textRegionHuffmanFlags >> 12) & 3;\n            textRegion.huffmanRefinementSizeSelector = !!(\n              textRegionHuffmanFlags & 14\n            );\n          }\n          if (textRegion.refinement && !textRegion.refinementTemplate) {\n            at = [];\n            for (i = 0; i < 2; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            textRegion.refinementAt = at;\n          }\n          textRegion.numberOfSymbolInstances = readUint32(data, position);\n          position += 4;\n          if (textRegion.huffman) {\n            error(\"JBIG2 error: huffman is not supported\");\n          }\n          args = [textRegion, header.referredTo, data, position, end];\n          break;\n\n        case 38:\n        case 39:\n          var genericRegion = {};\n          genericRegion.info = readRegionSegmentInformation(data, position);\n          position += RegionSegmentInformationFieldLength;\n          var genericRegionSegmentFlags = data[position++];\n          genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n          genericRegion.template = (genericRegionSegmentFlags >> 1) & 3;\n          genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n          if (!genericRegion.mmr) {\n            atLength = genericRegion.template === 0 ? 4 : 1;\n            at = [];\n            for (i = 0; i < atLength; i++) {\n              at.push({\n                x: readInt8(data, position),\n                y: readInt8(data, position + 1),\n              });\n              position += 2;\n            }\n            genericRegion.at = at;\n          }\n          args = [genericRegion, data, position, end];\n          break;\n\n        case 48:\n          var pageInfo = {\n            width: readUint32(data, position),\n            height: readUint32(data, position + 4),\n            resolutionX: readUint32(data, position + 8),\n            resolutionY: readUint32(data, position + 12),\n          };\n          if (pageInfo.height === 4294967295) {\n            delete pageInfo.height;\n          }\n          var pageSegmentFlags = data[position + 16];\n          var pageStripingInformatiom = readUint16(data, position + 17);\n          pageInfo.lossless = !!(pageSegmentFlags & 1);\n          pageInfo.refinement = !!(pageSegmentFlags & 2);\n          pageInfo.defaultPixelValue = (pageSegmentFlags >> 2) & 1;\n          pageInfo.combinationOperator = (pageSegmentFlags >> 3) & 3;\n          pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n          pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n          args = [pageInfo];\n          break;\n\n        case 49:\n          break;\n\n        case 50:\n          break;\n\n        case 51:\n          break;\n\n        case 62:\n          break;\n\n        default:\n          error(\n            \"JBIG2 error: segment type \" +\n              header.typeName +\n              \"(\" +\n              header.type +\n              \") is not implemented\",\n          );\n      }\n      var callbackName = \"on\" + header.typeName;\n      if (callbackName in visitor) {\n        visitor[callbackName].apply(visitor, args);\n      }\n    }\n    function processSegments(segments, visitor) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        processSegment(segments[i], visitor);\n      }\n    }\n    function parseJbig2(data, start, end) {\n      var position = start;\n      if (\n        data[position] !== 151 ||\n        data[position + 1] !== 74 ||\n        data[position + 2] !== 66 ||\n        data[position + 3] !== 50 ||\n        data[position + 4] !== 13 ||\n        data[position + 5] !== 10 ||\n        data[position + 6] !== 26 ||\n        data[position + 7] !== 10\n      ) {\n        error(\"JBIG2 error: invalid header\");\n      }\n      var header = {};\n      position += 8;\n      var flags = data[position++];\n      header.randomAccess = !(flags & 1);\n      if (!(flags & 2)) {\n        header.numberOfPages = readUint32(data, position);\n        position += 4;\n      }\n      var segments = readSegments(header, data, position, end);\n      error(\"Not implemented\");\n    }\n    function parseJbig2Chunks(chunks) {\n      var visitor = new SimpleSegmentVisitor();\n      for (var i = 0, ii = chunks.length; i < ii; i++) {\n        var chunk = chunks[i];\n        var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n        processSegments(segments, visitor);\n      }\n      return visitor;\n    }\n    function SimpleSegmentVisitor() {}\n    SimpleSegmentVisitor.prototype = {\n      onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n        this.currentPageInfo = info;\n        var rowSize = (info.width + 7) >> 3;\n        var buffer = new Uint8Array(rowSize * info.height);\n        if (info.defaultPixelValue) {\n          for (var i = 0, ii = buffer.length; i < ii; i++) {\n            buffer[i] = 255;\n          }\n        }\n        this.buffer = buffer;\n      },\n      drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n        var pageInfo = this.currentPageInfo;\n        var width = regionInfo.width,\n          height = regionInfo.height;\n        var rowSize = (pageInfo.width + 7) >> 3;\n        var combinationOperator = pageInfo.combinationOperatorOverride\n          ? regionInfo.combinationOperator\n          : pageInfo.combinationOperator;\n        var buffer = this.buffer;\n        var mask0 = 128 >> (regionInfo.x & 7);\n        var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n        var i, j, mask, offset;\n        switch (combinationOperator) {\n          case 0:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] |= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          case 2:\n            for (i = 0; i < height; i++) {\n              mask = mask0;\n              offset = offset0;\n              for (j = 0; j < width; j++) {\n                if (bitmap[i][j]) {\n                  buffer[offset] ^= mask;\n                }\n                mask >>= 1;\n                if (!mask) {\n                  mask = 128;\n                  offset++;\n                }\n              }\n              offset0 += rowSize;\n            }\n            break;\n\n          default:\n            error(\n              \"JBIG2 error: operator \" +\n                combinationOperator +\n                \" is not supported\",\n            );\n        }\n      },\n      onImmediateGenericRegion:\n        function SimpleSegmentVisitor_onImmediateGenericRegion(\n          region,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeBitmap(\n            region.mmr,\n            regionInfo.width,\n            regionInfo.height,\n            region.template,\n            region.prediction,\n            null,\n            region.at,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessGenericRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n          this.onImmediateGenericRegion.apply(this, arguments);\n        },\n      onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(\n        dictionary,\n        currentSegment,\n        referredSegments,\n        data,\n        start,\n        end,\n      ) {\n        var huffmanTables;\n        if (dictionary.huffman) {\n          error(\"JBIG2 error: huffman is not supported\");\n        }\n        var symbols = this.symbols;\n        if (!symbols) {\n          this.symbols = symbols = {};\n        }\n        var inputSymbols = [];\n        for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n          inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n        }\n        var decodingContext = new DecodingContext(data, start, end);\n        symbols[currentSegment] = decodeSymbolDictionary(\n          dictionary.huffman,\n          dictionary.refinement,\n          inputSymbols,\n          dictionary.numberOfNewSymbols,\n          dictionary.numberOfExportedSymbols,\n          huffmanTables,\n          dictionary.template,\n          dictionary.at,\n          dictionary.refinementTemplate,\n          dictionary.refinementAt,\n          decodingContext,\n        );\n      },\n      onImmediateTextRegion:\n        function SimpleSegmentVisitor_onImmediateTextRegion(\n          region,\n          referredSegments,\n          data,\n          start,\n          end,\n        ) {\n          var regionInfo = region.info;\n          var huffmanTables;\n          var symbols = this.symbols;\n          var inputSymbols = [];\n          for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n            inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n          }\n          var symbolCodeLength = log2(inputSymbols.length);\n          var decodingContext = new DecodingContext(data, start, end);\n          var bitmap = decodeTextRegion(\n            region.huffman,\n            region.refinement,\n            regionInfo.width,\n            regionInfo.height,\n            region.defaultPixelValue,\n            region.numberOfSymbolInstances,\n            region.stripSize,\n            inputSymbols,\n            symbolCodeLength,\n            region.transposed,\n            region.dsOffset,\n            region.referenceCorner,\n            region.combinationOperator,\n            huffmanTables,\n            region.refinementTemplate,\n            region.refinementAt,\n            decodingContext,\n          );\n          this.drawBitmap(regionInfo, bitmap);\n        },\n      onImmediateLosslessTextRegion:\n        function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n          this.onImmediateTextRegion.apply(this, arguments);\n        },\n    };\n    function Jbig2Image() {}\n    Jbig2Image.prototype = {\n      parseChunks: function Jbig2Image_parseChunks(chunks) {\n        return parseJbig2Chunks(chunks);\n      },\n    };\n    return Jbig2Image;\n  })();\n  function log2(x) {\n    var n = 1,\n      i = 0;\n    while (x > n) {\n      n <<= 1;\n      i++;\n    }\n    return i;\n  }\n  function readInt8(data, start) {\n    return (data[start] << 24) >> 24;\n  }\n  function readUint16(data, offset) {\n    return (data[offset] << 8) | data[offset + 1];\n  }\n  function readUint32(data, offset) {\n    return (\n      ((data[offset] << 24) |\n        (data[offset + 1] << 16) |\n        (data[offset + 2] << 8) |\n        data[offset + 3]) >>>\n      0\n    );\n  }\n  function shadow(obj, prop, value) {\n    Object.defineProperty(obj, prop, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: false,\n    });\n    return value;\n  }\n  var error = function () {\n    console.error.apply(console, arguments);\n    throw new Error(\"PDFJS error: \" + arguments[0]);\n  };\n  var warn = function () {\n    console.warn.apply(console, arguments);\n  };\n  var info = function () {\n    console.info.apply(console, arguments);\n  };\n  Jbig2Image.prototype.parse = function parseJbig2(data) {\n    var position = 0,\n      end = data.length;\n    if (\n      data[position] !== 151 ||\n      data[position + 1] !== 74 ||\n      data[position + 2] !== 66 ||\n      data[position + 3] !== 50 ||\n      data[position + 4] !== 13 ||\n      data[position + 5] !== 10 ||\n      data[position + 6] !== 26 ||\n      data[position + 7] !== 10\n    ) {\n      error(\"JBIG2 error: invalid header\");\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = readUint32(data, position);\n      position += 4;\n    }\n    var visitor = this.parseChunks([\n      {\n        data: data,\n        start: position,\n        end: end,\n      },\n    ]);\n    var width = visitor.currentPageInfo.width;\n    var height = visitor.currentPageInfo.height;\n    var bitPacked = visitor.buffer;\n    var data = new Uint8Array(width * height);\n    var q = 0,\n      k = 0;\n    for (var i = 0; i < height; i++) {\n      var mask = 0,\n        buffer;\n      for (var j = 0; j < width; j++) {\n        if (!mask) {\n          mask = 128;\n          buffer = bitPacked[k++];\n        }\n        data[q++] = buffer & mask ? 0 : 255;\n        mask >>= 1;\n      }\n    }\n    this.width = width;\n    this.height = height;\n    this.data = data;\n  };\n  PDFJS.JpegImage = JpegImage;\n  PDFJS.JpxImage = JpxImage;\n  PDFJS.Jbig2Image = Jbig2Image;\n})(PDFJS || (PDFJS = {}));\n\nvar JpegDecoder = PDFJS.JpegImage;\n\nvar JpxDecoder = PDFJS.JpxImage;\n\nvar Jbig2Decoder = PDFJS.Jbig2Image;\n\nexport { JpegImage, JpegDecoder, JpxDecoder, Jbig2Decoder };\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJpeg } from \"#src/async_computation/decode_jpeg_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { JpegDecoder } from \"#src/third_party/jpgjs/jpg.js\";\nimport { transposeArray2d } from \"#src/util/array.js\";\n\nregisterAsyncComputation(\n  decodeJpeg,\n  async (\n    data,\n    width: number | undefined,\n    height: number | undefined,\n    area: number | undefined,\n    numComponents: number | undefined,\n    convertToGrayscale: boolean,\n  ) => {\n    const parser = new JpegDecoder();\n    parser.parse(data);\n    // Just check that the total number pixels matches the expected value.\n    if (\n      (width !== undefined && width !== parser.width) ||\n      (height !== undefined && height !== parser.height) ||\n      (area !== undefined && parser.width * parser.height !== area)\n    ) {\n      throw new Error(\n        \"JPEG data does not have the expected dimensions: \" +\n          `width=${parser.width}, height=${parser.height}, ` +\n          `expected width=${width}, expected height=${height}, expected area=${area}`,\n      );\n    }\n    width = parser.width;\n    height = parser.height;\n    if (numComponents !== undefined && parser.numComponents !== numComponents) {\n      throw new Error(\n        \"JPEG data does not have the expected number of components: \" +\n          `components=${parser.numComponents}, expected=${numComponents}`,\n      );\n    }\n    numComponents = parser.numComponents;\n    let result: Uint8Array<ArrayBuffer>;\n    if (parser.numComponents === 1) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n    } else if (parser.numComponents === 3) {\n      result = parser.getData(\n        parser.width,\n        parser.height,\n        /*forceRGBOutput=*/ false,\n      );\n      if (convertToGrayscale) {\n        const length = width * height;\n        const converted = new Uint8Array(length);\n        for (let i = 0; i < length; ++i) {\n          converted[i] = result[i * 3];\n        }\n        result = converted;\n      } else {\n        result = transposeArray2d(result, parser.width * parser.height, 3);\n      }\n    } else {\n      throw new Error(\n        `JPEG data has an unsupported number of components: components=${parser.numComponents}`,\n      );\n    }\n    return {\n      value: { width, height, numComponents, uint8Array: result },\n      transfer: [result.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJpeg = asyncComputation<\n  (\n    data: Uint8Array<ArrayBuffer>,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    convertToGrayscale: boolean,\n  ) => DecodedImage\n>(\"decodeJpeg\");\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Detects gzip format based on the 3 magic bytes at the start.\n */\nexport function isGzipFormat(data: ArrayBufferView) {\n  const view = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  return (\n    view.length >= 3 && view[0] === 0x1f && view[1] === 0x8b && view[2] === 0x08\n  );\n}\n\nexport async function decodeGzip(\n  data: ArrayBuffer | ArrayBufferView | Response,\n  format: CompressionFormat,\n  signal?: AbortSignal,\n) {\n  try {\n    const decompressedStream = decodeGzipStream(\n      data instanceof Response ? data : new Response(data),\n      format,\n      signal,\n    );\n    return await new Response(decompressedStream).arrayBuffer();\n  } catch {\n    signal?.throwIfAborted();\n    throw new Error(`Failed to decode ${format}`);\n  }\n}\n\nexport function decodeGzipStream(\n  response: Response,\n  format: CompressionFormat,\n  signal?: AbortSignal,\n): ReadableStream<Uint8Array> {\n  return response.body!.pipeThrough(new DecompressionStream(format), {\n    signal: signal,\n  });\n}\n\n/**\n * Decompress `data` if it is in gzip format, otherwise just return it.\n */\nexport async function maybeDecompressGzip(data: ArrayBuffer | ArrayBufferView) {\n  let byteView: Uint8Array;\n  if (data instanceof ArrayBuffer) {\n    byteView = new Uint8Array(data);\n  } else {\n    byteView = new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n  }\n  if (isGzipFormat(byteView)) {\n    return new Uint8Array(await decodeGzip(byteView, \"gzip\"));\n  }\n  return byteView;\n}\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodePng } from \"#src/async_computation/decode_png_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressPng } from \"#src/sliceview/png/index.js\";\n\nregisterAsyncComputation(\n  decodePng,\n  async (\n    data,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n    convertToGrayscale: boolean,\n  ) => {\n    const result = await decompressPng(\n      data,\n      width,\n      height,\n      area,\n      numComponents,\n      bytesPerPixel,\n      convertToGrayscale,\n    );\n    return { value: result, transfer: [result.uint8Array.buffer] };\n  },\n);\n","/**\n * @license\n * Copyright 2022 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport interface DecodedImage {\n  width: number;\n  height: number;\n  numComponents: number;\n  uint8Array: Uint8Array<ArrayBuffer>;\n}\n\nexport const decodePng = asyncComputation<\n  (\n    data: Uint8Array<ArrayBuffer>,\n    width: number | undefined,\n    height: number | undefined,\n    // Expected width * height\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n    convertToGrayscale: boolean,\n  ) => DecodedImage\n>(\"decodePng\");\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeBlosc } from \"#src/async_computation/decode_blosc_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeBlosc, async (data) => {\n  const { default: Blosc } = await import(\"numcodecs/blosc\");\n  const codec = Blosc.fromConfig({ id: \"blosc\" });\n  const result = (await codec.decode(data)) as Uint8Array<ArrayBuffer>;\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeBlosc =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeBlosc\",\n  );\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeZstd } from \"#src/async_computation/decode_zstd_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\n\nregisterAsyncComputation(decodeZstd, async (data) => {\n  const { default: Zstd } = await import(\"numcodecs/zstd\");\n  const codec = Zstd.fromConfig({ id: \"blosc\" });\n  const result = (await codec.decode(data)) as Uint8Array<ArrayBuffer>;\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2023 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeZstd =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeZstd\",\n  );\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseOBJFromArrayBuffer } from \"#src/async_computation/obj_mesh_request.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\nimport { TypedArrayBuilder } from \"#src/util/array.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\n\nregisterAsyncComputation(\n  parseOBJFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    let text = new TextDecoder().decode(await maybeDecompressGzip(buffer));\n    // Strip comments\n    text = text.replace(/#.*/g, \"\");\n    const vertexPositions = new TypedArrayBuilder(Float32Array);\n    const indices = new TypedArrayBuilder(Uint32Array);\n\n    // Find vertices\n    for (const match of text.matchAll(\n      /^v\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s+([-0-9.eE]+)\\s*$/gm,\n    )) {\n      vertexPositions.appendArray([\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n      ]);\n    }\n\n    // Find indices\n    for (const match of text.matchAll(\n      /^f\\s+([0-9]+)\\s+([0-9]+)\\s+([0-9]+)\\s*$/gm,\n    )) {\n      indices.appendArray([\n        parseInt(match[1], 10) - 1,\n        parseInt(match[2], 10) - 1,\n        parseInt(match[3], 10) - 1,\n      ]);\n    }\n\n    vertexPositions.shrinkToFit();\n    indices.shrinkToFit();\n\n    const mesh: SingleMesh = {\n      info: {\n        numVertices: vertexPositions.length / 3,\n        numTriangles: indices.length / 3,\n        vertexAttributes: [],\n      },\n      vertexPositions: vertexPositions.view,\n      indices: indices.view,\n      vertexAttributes: [],\n    };\n\n    const size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n    console.log(mesh);\n\n    return {\n      value: { data: mesh, size },\n      transfer: [mesh.indices.buffer, mesh.vertexPositions.buffer],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2020 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { SingleMesh } from \"#src/single_mesh/backend.js\";\n\nexport const parseOBJFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: SingleMesh;\n    size: number;\n  }\n>(\"parseOBJFromArrayBuffer\");\n","/**\n * @license\n * Copyright 2024 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeJxl } from \"#src/async_computation/decode_jxl_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressJxl } from \"#src/sliceview/jxl/index.js\";\n\nregisterAsyncComputation(\n  decodeJxl,\n  async (\n    data: Uint8Array,\n    area: number | undefined,\n    numComponents: number | undefined,\n    bytesPerPixel: number,\n  ) => {\n    const result = await decompressJxl(\n      data,\n      area,\n      numComponents,\n      bytesPerPixel,\n    );\n    return { value: result, transfer: [result.uint8Array.buffer] };\n  },\n);\n","/**\n * @license\n * Copyright 2024 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport type { DecodedImage } from \"#src/async_computation/decode_png_request.js\";\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeJxl =\n  asyncComputation<\n    (\n      data: Uint8Array,\n      area: number | undefined,\n      numComponents: number | undefined,\n      bytesPerPixel: number,\n    ) => DecodedImage\n  >(\"decodeJxl\");\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { decodeCompresso } from \"#src/async_computation/decode_compresso_request.js\";\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { decompressCompresso } from \"#src/sliceview/compresso/index.js\";\n\nregisterAsyncComputation(decodeCompresso, async (data) => {\n  const result = await decompressCompresso(data);\n  return { value: result, transfer: [result.buffer] };\n});\n","/**\n * @license\n * Copyright 2021 William Silversmith\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\n\nexport const decodeCompresso =\n  asyncComputation<(data: Uint8Array<ArrayBuffer>) => Uint8Array<ArrayBuffer>>(\n    \"decodeCompresso\",\n  );\n","/**\n * @license\n * Copyright 2016 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file\n * Parser for VTK file format.\n * See http://www.vtk.org/wp-content/uploads/2015/04/file-formats.pdf\n */\n\nconst maxHeaderLength = 1000;\n\nconst vtkHeaderPattern =\n  /^[ \\t]*#[ \\t]+vtk[ \\t]+DataFile[ \\t]+Version[ \\t]+([^\\s]+)[ \\t]*\\n(.*)\\n[ \\t]*(ASCII|BINARY)[ \\t]*\\n[ \\t]*DATASET[ \\t]+([^ ]+)[ \\t]*\\n/;\n\nconst pointDataHeaderPattern = /^[ \\t]*POINT_DATA[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst pointsHeaderPattern = /^[ \\t]*POINTS[ \\t]+([0-9]+)[ \\t]+([^\\s]+)[ \\t]*$/;\nconst scalarsHeaderPattern =\n  /^[ \\t]*SCALARS[ \\t]+([^\\s]+)[ \\t]+([^\\s]+)(?:[ \\t]+([0-9]+))?[ \\t]*$/;\nconst scalarsLookupTableHeaderPattern =\n  /^[ \\t]*LOOKUP_TABLE[ \\t]+([^\\s]+)[ \\t]*$/;\nconst polygonsHeaderPattern =\n  /^[ \\t]*POLYGONS[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst trianglePattern =\n  /^[ \\t]*3[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]+([0-9]+)[ \\t]*$/;\n\nconst blankLinePattern = /^[ \\t]*$/;\n\nexport interface VTKHeader {\n  version: string;\n  comment: string;\n  datasetType: string;\n  dataFormat: string;\n}\n\nexport interface VertexAttribute {\n  name: string;\n  data: Float32Array<ArrayBuffer>;\n  numComponents: number;\n  tableName: string;\n  dataType: string;\n}\n\nexport class TriangularMesh {\n  constructor(\n    public header: VTKHeader,\n    public numVertices: number,\n    public vertexPositions: Float32Array<ArrayBuffer>,\n    public numTriangles: number,\n    public indices: Uint32Array<ArrayBuffer>,\n    public vertexAttributes: VertexAttribute[],\n  ) {}\n}\n\nexport function getTriangularMeshSize(mesh: TriangularMesh) {\n  let size = mesh.vertexPositions.byteLength + mesh.indices.byteLength;\n  for (const attribute of mesh.vertexAttributes) {\n    size += attribute.data.byteLength;\n  }\n  return size;\n}\n\nfunction parsePolydataAscii(\n  header: VTKHeader,\n  data: ArrayBufferView,\n): TriangularMesh {\n  const decoder = new TextDecoder();\n  const text = decoder.decode(data);\n  const lines = text.split(\"\\n\");\n  const numLines = lines.length;\n  let lineNumber = 0;\n\n  let numVertices = -1;\n  let vertexPositions: Float32Array | undefined = undefined;\n  let numTriangles = -1;\n  let indices: Uint32Array | undefined = undefined;\n\n  const vertexAttributes = new Array<VertexAttribute>();\n\n  function parseArray(\n    fieldName: string,\n    n: number,\n    numComponents: number,\n    _dataType: string,\n  ) {\n    // TODO(jbms): respect dataType\n    const pattern = RegExp(\n      \"^[ \\t]*\" + \"([^s]+)[ \\t]+\".repeat(numComponents - 1) + \"([^s]+)[ \\t]*$\",\n    );\n    if (numLines - lineNumber < n) {\n      throw new Error(\n        `VTK data ended unexpectedly while parsing ${fieldName}.`,\n      );\n    }\n    const result = new Float32Array(n * numComponents);\n    let outIndex = 0;\n    for (let i = 0; i < n; ++i) {\n      const line = lines[lineNumber++];\n      const m = line.match(pattern);\n      if (m === null) {\n        throw new Error(\n          `Failed to parse ${fieldName} line ${i}: ${JSON.stringify(line)}.`,\n        );\n      }\n      for (let j = 0; j < numComponents; ++j) {\n        result[outIndex++] = parseFloat(m[j + 1]);\n      }\n    }\n    return result;\n  }\n\n  function parsePoints(nVertices: number, dataType: string) {\n    if (indices !== undefined) {\n      throw new Error(\"POINTS specified more than once.\");\n    }\n    numVertices = nVertices;\n    vertexPositions = parseArray(\"POINTS\", nVertices, 3, dataType);\n  }\n\n  function parsePolygons(numFaces: number, numValues: number) {\n    if (indices !== undefined) {\n      throw new Error(\"VERTICES specified more than once.\");\n    }\n    if (numLines - lineNumber < numFaces) {\n      throw new Error(\"VTK data ended unexpectedly\");\n    }\n    if (numValues !== numFaces * 4) {\n      throw new Error(\"Only triangular faces are supported.\");\n    }\n    numTriangles = numFaces;\n    indices = new Uint32Array(numFaces * 3);\n    let outIndex = 0;\n    for (let i = 0; i < numFaces; ++i) {\n      const m = lines[lineNumber++].match(trianglePattern);\n      if (m === null) {\n        throw new Error(`Failed to parse indices for face ${i}`);\n      }\n      indices[outIndex++] = parseInt(m[1], 10);\n      indices[outIndex++] = parseInt(m[2], 10);\n      indices[outIndex++] = parseInt(m[3], 10);\n    }\n  }\n\n  function parseScalars(name: string, dataType: string, numComponents: number) {\n    if (lineNumber === numLines) {\n      throw new Error(\"Expected LOOKUP_TABLE directive.\");\n    }\n    const firstLine = lines[lineNumber++];\n    const match = firstLine.match(scalarsLookupTableHeaderPattern);\n    if (match === null) {\n      throw new Error(\n        `Expected LOOKUP_TABLE directive in ${JSON.stringify(firstLine)}.`,\n      );\n    }\n    const tableName = match[1];\n    const values = parseArray(\n      `SCALARS(${name})`,\n      numVertices,\n      numComponents,\n      dataType,\n    );\n    vertexAttributes.push({\n      name,\n      data: values,\n      numComponents,\n      dataType,\n      tableName,\n    });\n  }\n\n  function parsePointData(nVertices: number) {\n    if (numVertices !== nVertices) {\n      throw new Error(\n        `Number of vertices specified in POINT_DATA section (${nVertices}) ` +\n          `must match number of points (${numVertices}).`,\n      );\n    }\n    while (lineNumber < numLines) {\n      const line = lines[lineNumber];\n      if (line.match(blankLinePattern)) {\n        ++lineNumber;\n        continue;\n      }\n      const match = line.match(scalarsHeaderPattern);\n      if (match !== null) {\n        let numComponents: number;\n        if (match[3] === undefined) {\n          numComponents = 1;\n        } else {\n          numComponents = parseInt(match[3], 10);\n        }\n        ++lineNumber;\n        parseScalars(match[1], match[2], numComponents);\n      }\n    }\n  }\n\n  while (lineNumber < numLines) {\n    const line = lines[lineNumber];\n    if (line.match(blankLinePattern)) {\n      ++lineNumber;\n      continue;\n    }\n    let match: RegExpMatchArray | null;\n    match = line.match(pointsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePoints(parseInt(match[1], 10), match[2]);\n      continue;\n    }\n    match = line.match(polygonsHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePolygons(parseInt(match[1], 10), parseInt(match[2], 10));\n      continue;\n    }\n    match = line.match(pointDataHeaderPattern);\n    if (match !== null) {\n      ++lineNumber;\n      parsePointData(parseInt(match[1], 10));\n      break;\n    }\n    throw new Error(`Failed to parse VTK line ${JSON.stringify(line)}.`);\n  }\n\n  if (vertexPositions === undefined) {\n    throw new Error(\"Vertex positions not specified.\");\n  }\n  if (indices === undefined) {\n    throw new Error(\"Indices not specified.\");\n  }\n  return new TriangularMesh(\n    header,\n    numVertices,\n    vertexPositions,\n    numTriangles,\n    indices,\n    vertexAttributes,\n  );\n}\n\nconst asciiFormatParsers = new Map([[\"POLYDATA\", parsePolydataAscii]]);\n\nexport function parseVTK(data: ArrayBufferView): TriangularMesh {\n  // Decode start of data as UTF-8 to determine whether it is ASCII or BINARY format.  Decoding\n  // errors (as will occur if it is binary format) will be ignored.\n  const decoder = new TextDecoder();\n  const decodedHeaderString = decoder.decode(\n    new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      Math.min(data.byteLength, maxHeaderLength),\n    ),\n  );\n  const headerMatch = decodedHeaderString.match(vtkHeaderPattern);\n  if (headerMatch === null) {\n    throw new Error(\"Failed to parse VTK file header.\");\n  }\n  const byteOffset = headerMatch[0].length;\n  const datasetType = headerMatch[4];\n  const dataFormat = headerMatch[3];\n  const header: VTKHeader = {\n    version: headerMatch[1],\n    comment: headerMatch[2],\n    datasetType,\n    dataFormat,\n  };\n  const remainingData = new Uint8Array(\n    data.buffer,\n    data.byteOffset + byteOffset,\n    data.byteLength - byteOffset,\n  );\n  if (dataFormat === \"ASCII\") {\n    const formatParser = asciiFormatParsers.get(datasetType);\n    if (formatParser === undefined) {\n      throw new Error(\n        `VTK dataset type ${JSON.stringify(datasetType)} is not supported.`,\n      );\n    }\n    return formatParser(header, remainingData);\n  }\n  throw new Error(\n    `VTK data format ${JSON.stringify(dataFormat)} is not supported.`,\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerAsyncComputation } from \"#src/async_computation/handler.js\";\nimport { parseVTKFromArrayBuffer } from \"#src/async_computation/vtk_mesh_request.js\";\nimport { getTriangularMeshSize, parseVTK } from \"#src/datasource/vtk/parse.js\";\nimport { maybeDecompressGzip } from \"#src/util/gzip.js\";\n\nregisterAsyncComputation(\n  parseVTKFromArrayBuffer,\n  async (buffer: ArrayBuffer) => {\n    const mesh = parseVTK(await maybeDecompressGzip(buffer));\n    return {\n      value: { data: mesh, size: getTriangularMeshSize(mesh) },\n      transfer: [\n        mesh.indices.buffer,\n        mesh.vertexPositions.buffer,\n        ...Array.from(mesh.vertexAttributes.values()).map((a) => a.data.buffer),\n      ],\n    };\n  },\n);\n","/**\n * @license\n * Copyright 2019 Google Inc.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { asyncComputation } from \"#src/async_computation/index.js\";\nimport type { TriangularMesh } from \"#src/datasource/vtk/parse.js\";\n\nexport const parseVTKFromArrayBuffer = asyncComputation<\n  (buffer: ArrayBuffer) => {\n    data: TriangularMesh;\n    size: number;\n  }\n>(\"parseVTKFromArrayBuffer\");\n"],"names":["pngModulePromise","jxlModulePromise","compressoModulePromise","handlers","Map","registerAsyncComputation","request","handler","getFortranOrderStrides","size","baseStride","length1","strides","Array","stride","i","transposeArray2d","array","majorSize","minorSize","transpose","j","port","self","msg","t","id","args","undefined","Error","JSON","value","transfer","error","TypedArrayBuilder","cls","initialCapacity","newLength","data","newData","Math","length","other","start","end","writeEncodedRepresentation","Function","code","encodedBits","elementsPer32Bits","element","encodeChannels","output","blockSize","rawData","volumeSize","baseInputOffset","inputStrides","channelOffsetOutputBase","numChannels","channel","encodeChannel","cache","gridSize","blockIndexSize","gx","gy","gz","xSize","ySize","zSize","xBlockSize","yBlockSize","zBlockSize","baseOffset","headerOffset","actualSize","sx","sy","sz","bz","by","bx","inputOffset","encodedValueBaseOffset","tableOffset","encodeBlock","valuesBuffer1","valuesBuffer2","ax","ay","az","numBlockElements","tempEncodingBuffer","Uint32Array","tempIndexBuffer1","tempIndexBuffer2","tempValuesLength","tempValuesBuffer1u32","tempValuesBuffer2u32","tempValuesBuffer1u64","BigUint64Array","tempValuesBuffer2u64","encodingBuffer","indexBuffer1","indexBuffer2","noAdjacentDuplicateIndex","prev","curInputOff","blockElementIndex","bsy","bsz","z","y","x","a","b","aValue","bValue","numUniqueValues","index","writeBlock","uint32sPerElement","encodedSize32bits","elementsToWrite","writeTable","key","outputData","curOutputOff","tempBuffer","shape","encodeChannelsUint32","encodeChannelsUint64","PDFJS","JpegImage","dctZigZag","Uint8Array","constructor","getBlockBufferOffset","component","row","col","clamp0to255","readUint16","offset","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","appData","readDataBlock","frame","resetInterval","l","quantizationTablesEnd","quantizationTablesLength","quantizationTableSpec","tableData","Uint16Array","componentId","componentsCount","maxH","maxV","h","v","qId","prepareComponents","mcusPerLine","mcusPerColumn","blocksPerLine","blocksPerColumn","blocksPerLineForMcu","blocksBufferSize","Int16Array","huffmanLength","huffmanTableSpec","codeLengths","codeLengthSum","huffmanValues","buildHuffmanTable","values","k","q","p","selectorsCount","components","componentIndex","tableSpec","spectralStart","spectralEnd","successiveApproximation","processed","decodeScan","successivePrev","successive","mcuExpected","progressive","startOffset","bitsData","bitsCount","readBit","nextByte","decodeHuffman","tree","node","receive","n","receiveAndExtend","successiveACNextValue","eobrun","successiveACState","componentsLength","decodeFn","diff","rs","s","r","marker","mcu","decodeBlock","decode","blockRow","blockCol","decodeMcu","mcuRow","mcuCol","buildComponentData","computationBuffer","quantizeAndInverse","blockBufferOffset","v0","v1","v2","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","blockData","width","height","componentScaleX","componentScaleY","blocksPerScanline","scaleX","scaleY","numComponents","dataLength","xScaleBlockOffset","transform","Y","Cb","Cr","g","c","m","scale","forceRGBoutput","ArithmeticDecoder","QeTable","bp","b1","contexts","pos","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","SubbandsGainLog2","buildCodeblocks","context","subband","dimensions","codeblock","precinctNumber","xcb_","ycb_","codeblockWidth","codeblockHeight","cbx0","cby0","cbx1","cby1","precinctParameters","codeblocks","precincts","pi","pj","precinct","createPacket","resolution","layerNumber","precinctCodeblocks","subbands","ii","jj","LayerResolutionComponentPositionIterator","siz","tileIndex","tile","layersCount","maxDecompositionLevelsCount","numprecincts","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","Int32Array","maxNumPrecincts","resolutions","PositionComponentResolutionLayerIterator","precinctsSizes","getPrecinctSizesInImageScale","px","py","precinctsIterationSizes","decompositionLevelsCount","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","posY","startPrecinctRowIndex","minWidth","Number","minHeight","maxNumWide","maxNumHigh","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","head","position","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","warn","info","headerType","String","stream","newByte","Xsiz","Ysiz","XOsiz","YOsiz","Csiz","doNotRecover","sqcd","spqcds","spqcdSize","scalarExpounded","calculateTileGrids","tiles","numXtiles","numYtiles","tileComponent","qcd","spqcd","cqcc","qcc","cod","scod","blockStyle","precinctsSize","unsupported","initializeTile","qcdOrQcc","codOrCoc","buildPackets","blocksDimensions","getBlocksDimensions","result","buildPrecincts","precinctWidth","precinctHeight","isZeroRes","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","numprecinctshigh","bscale","resolutionSubbands","progressionOrder","parseTilePackets","buffer","bufferSize","skipNextBit","readBits","count","skipMarkerIfEqual","alignToByte","sopMarkerUsed","ephMarkerUsed","packetsIterator","queue","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","valueReady","zeroBitPlanesTree","InclusionTree","TagTree","codingpasses","readCodingpasses","codingpassesLog2","log2","codedDataLength","packetItem","e","transformComponents","resultImages","transformedTiles","transformTile","codingStyleParameters","quantizationParameters","guardBits","segmentationSymbolUsed","precision","reversible","ReversibleTransform","IrreversibleTransform","subbandCoefficients","coefficients","Float32Array","mu","epsilon","gainLog2","copyCoefficients","levelWidth","levelHeight","delta","mb","x0","y0","right","bottom","bitModel","currentCodingpassType","dataItem","nb","blockWidth","blockHeight","BitModel","totalLength","encodedData","chunk","decoder","sign","magnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","shift","max","min","maxK","y1","y2","val","tile0","out","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","items","levelsLength","level","currentLevel","defaultValue","stopValue","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","zeroBitPlanes","coefficientCount","Int8Array","column","neighborsSignificance","left","coefficentsMagnitude","coefficentsSign","processingFlags","labels","i0","i1","contextLabel","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","twoRowsDown","threeRowsDown","iNext","indexBase","checkAllEmpty","allEmpty","i2","symbol","Transform","u0","ll","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","bufferPadding","numBuffers","colBuffers","u","currentBuffer","Object","current","next","len","K","gamma","beta","alpha","Jbig2Image","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","decodeIAID","codeLength","shadow","SegmentTypes","CodingTemplates","RefinementTemplates","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","skip","at","decodingContext","decodeBitmapTemplate0","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","stripT","firstS","currentS","s2","t2","symbolRow","currentT","symbolId","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","rdx","rdy","offsetT","offsetS","maxWidth","deltaS","readRegionSegmentInformation","SimpleSegmentVisitor","rowSize","regionInfo","mask","pageInfo","mask0","offset0","region","arguments","dictionary","currentSegment","referredSegments","symbols","decodeSymbolDictionary","numberOfNewSymbols","numberOfExportedSymbols","newSymbols","currentHeight","currentWidth","deltaWidth","numberOfInstances","exportedSymbols","flags","currentFlag","totalSymbolsLength","runLength","chunks","parseJbig2Chunks","visitor","processSegments","segments","processSegment","segment","atLength","header","dictionaryFlags","readInt8","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","genericRegion","genericRegionSegmentFlags","pageSegmentFlags","callbackName","readSegments","segmentHeader","readSegmentHeader","segmentType","referredFlags","referredToCount","retainBits","bytes","referredToSegmentNumberSize","referredTo","number","genericRegionInfo","searchPattern","obj","prop","console","bitPacked","JpegDecoder","area","convertToGrayscale","parser","converted","libraryEnv","magicSpec","validHeaderCode","decompressPng","bytesPerPixel","WebAssembly","fetch","URL","dataWidth","readHeader","arrayEqualTrucated","idx","bufview","DataView","chunkLength","chunkCode","bitDepth","colorSpace","compressionMethod","filterMethod","interlaceMethod","validBitDepths","nbytes","bufPtr","imagePtr","heap","image","decodeGzip","format","signal","response","decompressedStream","Response","DecompressionStream","maybeDecompressGzip","byteView","isGzipFormat","view","ArrayBuffer","Blosc","codec","Zstd","text","TextDecoder","vertexPositions","indices","match","parseFloat","parseInt","mesh","getJxlModulePromise","decompressJxl","checkHeader","jxlImagePtr","decompressCompresso","voxels","vtkHeaderPattern","pointDataHeaderPattern","pointsHeaderPattern","scalarsHeaderPattern","scalarsLookupTableHeaderPattern","polygonsHeaderPattern","trianglePattern","blankLinePattern","TriangularMesh","numVertices","numTriangles","vertexAttributes","asciiFormatParsers","lines","numLines","lineNumber","parseArray","fieldName","_dataType","pattern","RegExp","outIndex","line","parsePoints","nVertices","dataType","parsePolygons","numFaces","numValues","parsePointData","parseScalars","name","firstLine","tableName","parseVTK","headerMatch","decodedHeaderString","byteOffset","datasetType","dataFormat","remainingData","formatParser","getTriangularMeshSize","attribute"],"mappings":"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AC/B,AAAIsO,EACK,IAAI,CAAC,iBAAiB,CAACtO,GAEvB,IAAI,CAAC,kBAAkB,CAACA,GAE5B,GAAIsO,EACT,OAAO,IAAI,CAAC,iBAAiB,CAACtO,EAElC,CACA,OAAOA,CACT,CACF,EACOmG,CACT,IAEIoI,EAAoB,AAAC,WACvB,IAAIC,EAAU,CACZ,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,EACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,EACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,MACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,KACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,IACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,GACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,GACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,GACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE,GAAI,EACJ,KAAM,GACN,KAAM,GACN,WAAY,CACd,EACA,CACE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Ioe,UAAU,MACnC,CACF,EAMAuD,EAAgB,SAAS,CAAG,CAC1B,IAAI,SAAU,CAEZ,OAAOM,EAAO,IAAI,CAAE,UADN,IAAI9S,EAAkB,IAAI,CAAC,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,GAAG,EAErE,EACA,IAAI,cAAe,CAEjB,OAAO8S,EAAO,IAAI,CAAE,eADR,IAAIP,EAElB,CACF,EAwCA,IAAIQ,EAAe,CACjB,mBACA,KACA,KACA,KACA,yBACA,KACA,sBACA,8BACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,oBACA,KACA,KACA,KACA,6BACA,KACA,0BACA,kCACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,4BACA,KACA,yBACA,iCACA,sCACA,KACA,mCACA,2CACA,KACA,KACA,KACA,KACA,kBACA,YACA,cACA,YACA,WACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,YACD,CACGC,EAAkB,CACpB,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,CACE,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACF,CACGC,EAAsB,CACxB,CACE,OAAQ,CACN,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACD,CACD,UAAW,CACT,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,GACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACA,CACE,EAAG,EACH,EAAG,CACL,EACD,AACH,EACA,CACE,OAAQ,CACN,CACE,EAAG,GACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EAAG,EACH,EAAG,EACL,EACA,CACE,EA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"}